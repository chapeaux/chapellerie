{"version":3,"file":"pfe-primary-detail.umd.min.js","sources":["../_temp/pfe-primary-detail.umd.js"],"sourcesContent":["/*!\n * PatternFly Elements: PfePrimaryDetail 1.12.3\n * @license\n * Copyright 2020 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport PFElement from \"../../pfelement/dist/pfelement\";\n\n/**\n * Debounce helper function\n * @see https://davidwalsh.name/javascript-debounce-function\n *\n * @param {function} func Function to be debounced\n * @param {number} delay How long until it will be run\n * @param {boolean} immediate Whether it should be run at the start instead of the end of the debounce\n */\nfunction debounce(func, delay, immediate = false) {\n  var timeout;\n  return function () {\n    var context = this,\n      args = arguments;\n    var later = function () {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, delay);\n    if (callNow) func.apply(context, args);\n  };\n}\n\n// @todo Add functions to open a specific item by index or ID\nclass PfePrimaryDetail extends PFElement {\n\n  // Injected at build-time\n  static get version() {\n    return \"1.12.3\";\n  }\n\n  // Injected at build-time\n  get html() {\n    return `\n<style>*{-webkit-box-sizing:border-box;box-sizing:border-box}:host{display:block;border:1px solid #d2d2d2;border:var(--pfe-primary-details--Border,var(--pfe-theme--ui--border-width--sm,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--ui--border--lighter,#d2d2d2));overflow:hidden}:host([hidden]){display:none}#wrapper{display:-ms-grid;display:grid;-ms-grid-columns:1fr 2fr;grid-template-columns:1fr 2fr;-ms-grid-columns:var(--pfe-primary-details--GridTemplateColumns,1fr 2fr);grid-template-columns:var(--pfe-primary-details--GridTemplateColumns,1fr 2fr);-webkit-box-align:stretch;-webkit-align-items:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-box-pack:stretch;-webkit-justify-content:stretch;-ms-flex-pack:stretch;justify-content:stretch;overflow:hidden;-webkit-transition:-webkit-transform .25s ease-in-out;transition:-webkit-transform .25s ease-in-out;transition:transform .25s ease-in-out;transition:transform .25s ease-in-out,-webkit-transform .25s ease-in-out;will-change:transform;-webkit-backface-visibility:visible;backface-visibility:visible}@media (prefers-reduced-motion){#wrapper{-webkit-transition:none;transition:none;will-change:auto}}:host([breakpoint=compact]) #wrapper{display:-ms-grid;display:grid;-ms-grid-columns:50% 0 50%;grid-template-columns:50% 50%;gap:0;width:200%}:host([breakpoint=compact]) #wrapper.active{-webkit-transform:translateX(-50%);transform:translateX(-50%)}:host([breakpoint=compact]) #details-nav,:host([breakpoint=compact]) #details-nav__footer{-ms-grid-row-align:stretch;align-self:stretch;-ms-grid-column-align:stretch;justify-self:stretch;-ms-grid-row:1;grid-row:1;-ms-grid-column:1;grid-column:1}:host([breakpoint=compact]) #details-nav__footer{-ms-grid-row:2;grid-row:2}#details-nav{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;margin:0 2px;padding:9px 0;border-right:1px solid #d2d2d2;border-right:var(--pfe-primary-details--Border,var(--pfe-theme--ui--border-width--sm,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--ui--border--lighter,#d2d2d2))}:host([breakpoint=compact]) #details-nav{border:0}:host([breakpoint=compact]) #details-nav__footer{-ms-grid-row:2;grid-row:2}::slotted([slot=details-nav]){position:relative;display:block!important;-webkit-appearance:none!important;-moz-appearance:none!important;appearance:none!important;background:0 0!important;border:0!important;margin:0!important;padding:.5em 1.5em .5em .75em!important;font:inherit;line-height:1.5;text-align:left!important;color:#151515!important;color:var(--pfe-primary-details__nav--Color,var(--pfe-theme--color--text,#151515))!important;cursor:pointer!important}::slotted([slot=details-nav]):before{content:'';position:absolute;top:50%;right:0;margin-right:16px;display:block;width:.75em;height:.75em;-webkit-box-shadow:inset -.1875em -.1875em 0 .0625em #000;box-shadow:inset -.1875em -.1875em 0 .0625em #000;-webkit-transform:translate(-50%,-50%) scale(.6) rotate(314deg);transform:translate(-50%,-50%) scale(.6) rotate(314deg)}:host([breakpoint=desktop]) ::slotted([slot=details-nav]):before{content:none}::slotted([aria-expanded=true]),::slotted([aria-selected=true]){color:#06c!important;color:var(--pfe-primary-details__nav--Color--active,var(--pfe-theme--color--link,#06c))!important;background:#f0f0f0!important;background:var(--pfe-primary-details__nav--Background--active,#f0f0f0)!important}#details-wrapper{padding:.5em 1.5em;background:#fff;background:var(--pfe-primary-details__details--Background,var(--pfe-theme--color--surface--lightest,#fff))}:host([breakpoint=compact]) #details-wrapper{-ms-grid-row:1;-ms-grid-row-span:2;grid-row:1/span 2;-ms-grid-column:2;grid-column:2;padding-top:0}:host([consistent-height]) #details-wrapper{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}@supports (display:grid){:host([consistent-height]) #details-wrapper{display:-ms-grid;display:grid;-ms-grid-rows:1fr;-ms-grid-columns:1fr;grid-template:1fr/1fr;justify-items:start;-webkit-box-align:start;-webkit-align-items:start;-ms-flex-align:start;align-items:start}}:host([consistent-height][breakpoint=compact]) #details-wrapper:before{content:'';display:block;-ms-grid-row:1;grid-row:1;-ms-grid-column:1;grid-column:1;-ms-grid-row-align:end;align-self:end;border-bottom:1px solid #d2d2d2;border-bottom:var(--pfe-primary-details--Border,var(--pfe-theme--ui--border-width--sm,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--ui--border--lighter,#d2d2d2));width:calc(100% + 3em);margin-left:-1.5em}#details-wrapper__header{display:none;-ms-grid-row:1;-ms-grid-row-span:1;grid-row:1/span 1;-ms-grid-column:1;-ms-grid-column-span:1;grid-column:1/span 1;-ms-grid-row-align:start;align-self:start;-ms-grid-column-align:stretch;justify-self:stretch}:host([breakpoint=compact]) #details-wrapper__header{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}#details-wrapper__back{display:none;position:relative;-webkit-align-self:stretch;-ms-flex-item-align:stretch;-ms-grid-row-align:stretch;align-self:stretch;border:0;margin:2px 0 0;background:0 0;font-size:inherit;font-family:inherit;font-weight:700;cursor:pointer;text-align:left}#details-wrapper__back:focus{outline:1px dashed #000!important;outline-width:2px!important}:host([breakpoint=compact]) #details-wrapper__back{display:block;visibility:hidden}:host([breakpoint=compact]) .active #details-wrapper__back{visibility:visible;width:100%;padding-left:16px}#details-wrapper__back:before{content:'';position:absolute;top:50%;left:.5em;display:block;width:.75em;height:.75em;-webkit-box-shadow:inset -.1875em -.1875em 0 .0625em #000;box-shadow:inset -.1875em -.1875em 0 .0625em #000;-webkit-transform:translate(-50%,-50%) scale(.6) rotate(135deg);transform:translate(-50%,-50%) scale(.6) rotate(135deg)}#details-wrapper__heading{margin:0;padding:0;font-size:inherit;line-height:1.5;padding:.5em 0}:host([consistent-height]) ::slotted([slot=details]){display:block!important;-ms-grid-row:1!important;-ms-grid-row-span:1!important;grid-row:1/span 1!important;-ms-grid-column:1!important;-ms-grid-column-span:1!important;grid-column:1/span 1!important}:host([consistent-height][breakpoint=compact]) ::slotted([slot=details]){-ms-grid-row:2!important;-ms-grid-row-span:1!important;grid-row:2/span 1!important}::slotted([hidden]){visibility:hidden!important;position:absolute!important}:host([consistent-height]) ::slotted([hidden]){position:static!important}::slotted([slot=details-nav--footer]){border-right:1px solid #d2d2d2!important;border-right:var(--pfe-primary-details--Border,var(--pfe-theme--ui--border-width--sm,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--ui--border--lighter,#d2d2d2))!important}::slotted(.is-focused:focus),::slotted(.is-focused:hover){outline:1px dashed #000!important;outline-width:2px!important} /*# sourceMappingURL=pfe-primary-detail.min.css.map */</style>\n<div id=\"wrapper\" data-pristine>\n  <div id=\"details-nav\">\n    <slot name=\"details-nav--header\"></slot>\n    <slot name=\"details-nav\"></slot>\n  </div>\n  <div id=\"details-wrapper\">\n    <div id=\"details-wrapper__header\">\n      <button id=\"details-wrapper__back\"><div id=\"details-wrapper__heading\"></div></button>\n    </div>\n    <slot name=\"details\"></slot>\n  </div>\n  <div id=\"details-nav__footer\">\n    <slot name=\"details-nav--footer\"></slot>\n  </div>\n</div>`;\n  }\n\n  static get tag() {\n    return \"pfe-primary-detail\";\n  }\n\n  static get meta() {\n    return {\n      title: \"Primary detail\",\n      description: \"Reworks title/description content into a vertical-tabs like interface.\",\n    };\n  }\n\n  get templateUrl() {\n    return \"pfe-primary-detail.html\";\n  }\n\n  get styleUrl() {\n    return \"pfe-primary-detail.scss\";\n  }\n\n  static get events() {\n    return {\n      hiddenTab: `${this.tag}:hidden-tab`,\n      shownTab: `${this.tag}:shown-tab`,\n    };\n  }\n\n  // Declare the type of this component\n  static get PfeType() {\n    return PFElement.PfeTypes.Container;\n  }\n\n  static get properties() {\n    return {\n      // Set aria-orientation (doesn't change)\n      orientation: {\n        title: \"Orientation\",\n        type: String,\n        attr: \"aria-orientation\",\n        default: \"vertical\",\n      },\n      // Set aria role (doesn't change)\n      role: {\n        type: String,\n        default: \"tablist\",\n      },\n      // The min-width of the _component_ where it has a desktop layout\n      breakpointWidth: {\n        type: Number,\n        default: 800,\n      },\n      // Read only: Displays the id of an open 'detailNav' element\n      active: {\n        type: String,\n      },\n      // Read only: Displays what breakpoint is currently being used\n      breakpoint: {\n        type: String,\n        values: [\"compact\", \"desktop\"],\n      },\n    };\n  }\n\n  static get slots() {\n    return {\n      // Content that shows above the navigation column\n      detailsNavHeader: {\n        title: \"Details Nav Header\",\n        type: \"array\",\n        namedSlot: true,\n      },\n      // Column of headings to expland the related contents\n      detailsNav: {\n        title: \"Details Nav\",\n        type: \"array\",\n        namedSlot: true,\n      },\n      // Content that shows below the navigation column\n      detailsNavFooter: {\n        title: \"Details Nav Footer\",\n        type: \"array\",\n        namedSlot: true,\n      },\n      // Content content that is shown when it's corresponding \"Details Nav\" item is active\n      details: {\n        title: \"Details\",\n        type: \"array\",\n        namedSlot: true,\n      },\n    };\n  }\n\n  constructor() {\n    super(PfePrimaryDetail, { type: PfePrimaryDetail.PfeType });\n\n    // Make sure 'this' is set to the instance of the component in child methods\n    this._handleHideShow = this._handleHideShow.bind(this);\n    this._initDetailsNav = this._initDetailsNav.bind(this);\n    this._initDetail = this._initDetail.bind(this);\n    this.closeAll = this.closeAll.bind(this);\n    this._processLightDom = this._processLightDom.bind(this);\n    this._keyboardControls = this._keyboardControls.bind(this);\n    this._setBreakpoint = this._setBreakpoint.bind(this);\n    this._setDetailsNavVisibility = this._setDetailsNavVisibility.bind(this);\n    this._updateBackButtonState = this._updateBackButtonState.bind(this);\n    this._manageWrapperAttributes = this._manageWrapperAttributes.bind(this);\n\n    // Place to store references to the slotted elements\n    this._slots = {\n      detailsNav: null,\n      details: null,\n      detailsNavHeader: null,\n      detailsNavFooter: null,\n    };\n\n    // Setup mutation observer to watch for content changes\n    this._childObserver = new MutationObserver(this._processLightDom);\n    this._attributesObserver = new MutationObserver(this._manageWrapperAttributes);\n\n    // Commonly used shadow DOM elements\n    this._wrapper = this.shadowRoot.getElementById(\"wrapper\");\n    this._detailsNav = this.shadowRoot.getElementById(\"details-nav\");\n    this._detailsWrapper = this.shadowRoot.getElementById(\"details-wrapper\");\n    this._detailsWrapperHeader = this.shadowRoot.getElementById(\"details-wrapper__header\");\n    this._detailsWrapperHeading = this.shadowRoot.getElementById(\"details-wrapper__heading\");\n    this._detailsBackButton = this.shadowRoot.getElementById(\"details-wrapper__back\");\n\n    this._debouncedSetBreakpoint = null;\n    this._windowInnerWidth;\n\n    // @todo: decide if we need this anymore\n    // Store all focusable element types in variable\n    this._focusableElements = 'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])';\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    // Add appropriate markup and behaviors if DOM is ready\n    if (this.hasLightDOM()) {\n      this._processLightDom();\n    }\n\n    // Lower debounce delay for automated testing\n    const debounceDelay = this.hasAttribute(\"automated-testing\") ? 0 : 100;\n\n    this._debouncedSetBreakpoint = debounce(this._setBreakpoint, debounceDelay);\n    window.addEventListener(\"resize\", this._debouncedSetBreakpoint);\n\n    // Process the light DOM on any update\n    this._childObserver.observe(this, { childList: true });\n    this._attributesObserver.observe(this, { attributes: true, attributeFilter: [\"active\"] });\n\n    this._detailsBackButton.addEventListener(\"click\", this.closeAll);\n\n    // A11y: add keydown event listener to activate keyboard controls\n    this.addEventListener(\"keydown\", this._keyboardControls);\n  }\n\n  disconnectedCallback() {\n    this._childObserver.disconnect();\n    this._attributesObserver.disconnect();\n\n    window.removeEventListener(\"resize\", this._debouncedSetBreakpoint);\n\n    if (this._slots.detailsNav) {\n      for (let index = 0; index < this._slots.detailsNav.length; index++) {\n        this._slots.detailsNav[index].removeEventListener(\"click\", this._handleHideShow);\n      }\n    }\n\n    // Remove keydown event listener if component disconnects\n    this.removeEventListener(\"keydown\", this._keyboardControls);\n  }\n\n  /**\n   * Adds active class to shadow DOM if component is active to avoid animation jank\n   * @note For some reason, when using :host([active]) to transformX, entering an active state got a janky animation.\n   * Using active class that lives in the shadow root does not  ¯\\_(ツ)_/¯\n   */\n  _manageWrapperAttributes() {\n    if (this.hasAttribute(\"active\")) {\n      this._wrapper.classList.add(\"active\");\n    } else {\n      this._wrapper.classList.remove(\"active\");\n    }\n  }\n\n  /**\n   * Updates markup of details-nav elements to be toggle buttons\n   * @param {object} toggle Slotted element (probably a headline, unless it's been initialized already)\n   * @param {integer} index The index of the item in the details-nav slot\n   */\n  _initDetailsNav(detailNavElement, index) {\n    const createToggleButton = detailNavElement.tagName !== \"BUTTON\";\n    let toggle = null;\n\n    if (createToggleButton) {\n      const attr = detailNavElement.attributes;\n      toggle = document.createElement(\"button\");\n\n      toggle.innerHTML = detailNavElement.innerHTML;\n      toggle.setAttribute(\"role\", \"tab\");\n\n      // list of attributes that we DO NOT want to pass to our shadow DOM.\n      const denyListAttributes = [\"style\", \"role\"];\n\n      // Copy over attributes from original element that aren't in denyList\n      [...attr].forEach((detailNavElement) => {\n        if (!denyListAttributes.includes(detailNavElement.name)) {\n          toggle.setAttribute(detailNavElement.name, detailNavElement.value);\n        }\n      });\n\n      // Keeping track of tagName which is used in mobile layout to maintain heading order\n      toggle.dataset.wasTag = detailNavElement.tagName;\n\n      // If the detailNavElement does not have a ID, set a unique ID\n      if (!detailNavElement.id) {\n        toggle.setAttribute(\"id\", `pfe-detail-toggle-${Math.random().toString(36).substr(2, 9)}`);\n      }\n    } else {\n      toggle = detailNavElement;\n    }\n\n    // If the detailNavElement does not have a ID, set a unique ID\n    if (!detailNavElement.id) {\n      detailNavElement.setAttribute(\"id\", `pfe-detail-toggle-${Math.random().toString(36).substr(2, 9)}`);\n    }\n\n    toggle.addEventListener(\"click\", this._handleHideShow);\n    toggle.dataset.index = index;\n\n    // Store a reference to our new detailsNav item\n    this._slots.detailsNav[index] = toggle;\n\n    if (createToggleButton) {\n      // Using replaceChild to avoid IE issues\n      detailNavElement.parentElement.replaceChild(toggle, detailNavElement);\n    }\n  }\n\n  /**\n   * Process detail wrapper elements\n   * @param {object} detail DOM Object of detail wrapper\n   * @param {integer} index The index of the item when detail wrappers are queried\n   */\n  _initDetail(detail, index) {\n    detail.dataset.index = index;\n\n    // If the toggle does not have a ID, set a unique ID\n    if (!detail.hasAttribute(\"id\")) {\n      detail.setAttribute(\"id\", `pfe-detail-${Math.random().toString(36).substr(2, 9)}`);\n    }\n\n    detail.setAttribute(\"role\", \"tabpanel\");\n    // Set initial tabindex state for detail panel, -1 one when panel is inactive\n    detail.setAttribute(\"tabindex\", \"-1\");\n\n    const toggleId = this._slots.detailsNav[index].getAttribute(\"id\");\n    if (!detail.hasAttribute(\"aria-labelledby\") && toggleId) {\n      detail.setAttribute(\"aria-labelledby\", toggleId);\n    }\n\n    // Swing back to detailsNav to add aria-controls, now that details have an Id\n    if (!this._slots.detailsNav[index].hasAttribute(\"aria-controls\") && detail.id) {\n      this._slots.detailsNav[index].setAttribute(\"aria-controls\", detail.id);\n    }\n\n    // Leave a reliable indicator that this has been initialized so we don't do it again\n    detail.dataset.processed = true;\n  }\n\n  /**\n   * Evaluate whether component is smaller than breakpoint\n   * Then manage state of component and manage active/inactive elements\n   */\n  _setBreakpoint() {\n    // We don't need to do anything if the page width is unchanged\n    if (this._windowInnerWidth === window.innerWidth) {\n      return;\n    }\n\n    const breakpointWas = this.breakpoint;\n    const breakpointIs = this.offsetWidth < this.breakpointWidth ? \"compact\" : \"desktop\";\n\n    this.breakpoint = breakpointIs;\n\n    // If nothing has been touched and we move to mobile, the details nav should be shown,\n    // not the item that was opened by default so the desktop design would work\n    if (this._wrapper.hasAttribute(\"data-pristine\") && breakpointIs === \"compact\") {\n      const activeToggle = this.active ? document.getElementById(this.active) : false;\n      if (activeToggle) {\n        this._addCloseAttributes(activeToggle);\n        this.removeAttribute(\"active\");\n      }\n    }\n\n    // If the breakpoint changed we need to set all aria attributes since the UI design pattern changes\n    if (breakpointWas !== breakpointIs) {\n      for (let index = 0; index < this._slots.detailsNav.length; index++) {\n        const detailNavItem = this._slots.detailsNav[index];\n        if (detailNavItem.id === this.active) {\n          this._addActiveAttributes(detailNavItem);\n        } else {\n          this._addCloseAttributes(detailNavItem);\n        }\n      }\n    }\n\n    // If we've switched breakpoints or one wasn't set\n    if (breakpointWas !== \"desktop\" && breakpointIs === \"desktop\") {\n      // Desktop should never have nothing selected, default to first item if nothing is selected\n      if (!this.active) {\n        this._handleHideShow({ target: this._slots.detailsNav[0] });\n      }\n\n      // Make sure the left column items are visible\n      this._setDetailsNavVisibility(true);\n    } else if (breakpointWas !== \"compact\" && breakpointIs === \"compact\") {\n      // Hide the left column if it is out of view\n      if (this.active) {\n        this._setDetailsNavVisibility(false);\n      }\n    }\n\n    this._windowInnerWidth = window.innerWidth;\n  }\n\n  /**\n   * Utility function to hide elements in details nav\n   * @param {boolean} visible True to show nav elements, false to hide\n   */\n  _setDetailsNavVisibility(visible) {\n    const leftColumnSlots = [\"detailsNav\", \"detailsNavHeader\", \"detailsNavFooter\"];\n    // Manage detailsNav elements hidden attribute\n    for (let index = 0; index < leftColumnSlots.length; index++) {\n      const slotName = leftColumnSlots[index];\n      for (let j = 0; j < this._slots[slotName].length; j++) {\n        const detailNavItem = this._slots[slotName][j];\n        detailNavItem.hidden = !visible;\n      }\n    }\n  }\n\n  /**\n   * Adds nav functionality and adds additional HTML/attributes to markup\n   */\n  _processLightDom() {\n    // Update slots\n    this._slots = {\n      detailsNav: this.getSlot(\"details-nav\"),\n      details: this.getSlot(\"details\"),\n      detailsNavHeader: this.getSlot(\"details-nav--header\"),\n      detailsNavFooter: this.getSlot(\"details-nav--footer\"),\n    };\n\n    if (this._slots.detailsNav.length !== this._slots.details.length) {\n      this.error(\n        `The number of item headings does not match the number of item details. Found ${this._slots.detailsNav.length} item headings & ${this._slots.details.length} item details.`\n      );\n      return;\n    }\n\n    // Get active detailNavItem and corresponding details, if we have active elements\n    const activeDetailNavId = this.active;\n    let activeDetailId = null;\n    if (activeDetailNavId) {\n      activeDetailId = document.getElementById(activeDetailNavId).getAttribute(\"aria-controls\");\n    }\n\n    // Setup left sidebar navigation\n    this._slots.detailsNav.forEach((toggle, index) => {\n      this._initDetailsNav(toggle, index);\n    });\n\n    // Setup item detail elements\n    this._slots.details.forEach((detail, index) => {\n      this._initDetail(detail, index);\n      // Make sure all inactive detailNav and detail elements have closed attributes\n      if (detail.id !== activeDetailId) {\n        this._addCloseAttributes(this._slots.detailsNav[index], detail);\n      }\n    });\n\n    this._setBreakpoint();\n\n    // Desktop layout requires that something is active, if nothing is active make first item active\n    if (!this.active && this.breakpoint === \"desktop\") {\n      this._handleHideShow({ target: this._slots.detailsNav[0] });\n    }\n  } // end _processLightDom()\n\n  /**\n   * Add the appropriate active/open attributes\n   * @param {Object} toggle DOM element in the details-nav slot\n   * @param {Object} detail Optional, DOM element in the details slot\n   */\n  _addActiveAttributes(toggle, detail) {\n    // Get detail element if one isn't set\n    if (!detail) {\n      detail = document.getElementById(toggle.getAttribute(\"aria-controls\"));\n    }\n\n    detail.hidden = false;\n    detail.removeAttribute(\"aria-hidden\");\n    detail.removeAttribute(\"tabindex\");\n\n    if (this.breakpoint === \"desktop\") {\n      // Ideal toggle markup at desktop\n      // [aria-selected=true]:not([aria-expanded])\n      toggle.setAttribute(\"aria-selected\", \"true\");\n      toggle.removeAttribute(\"aria-expanded\");\n    }\n    // Compact layout\n    else {\n      // Ideal toggle markup at mobile\n      // [aria-expanded=true]:not([aria-selected])\n      toggle.setAttribute(\"aria-expanded\", \"true\");\n      toggle.removeAttribute(\"aria-selected\");\n    }\n  }\n\n  /**\n   * Set appropriate inactive/closed attributes\n   * @param {Object} toggle DOM element in the details-nav slot\n   * @param {Object} detail Optional, DOM element in the details slot\n   */\n  _addCloseAttributes(toggle, detail) {\n    if (!detail) {\n      detail = document.getElementById(toggle.getAttribute(\"aria-controls\"));\n    }\n\n    detail.hidden = true;\n    /**\n     * A11y note:\n     * tabindex = -1 removes element from the tab sequence, set when tab is not selected\n     * so that only the active tab (selected tab) is in the tab sequence.\n     * @see https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n     */\n    detail.setAttribute(\"tabindex\", \"-1\");\n    detail.setAttribute(\"aria-hidden\", \"true\");\n\n    if (this.breakpoint === \"desktop\") {\n      // Ideal toggle markup at desktop\n      // [aria-selected=false]:not([aria-expanded])\n      toggle.setAttribute(\"aria-selected\", \"false\");\n      toggle.removeAttribute(\"aria-expanded\");\n    }\n    // Compact layout\n    else {\n      // aria-expanded attr on toggle since mobile view UI is a drawer dropdown\n      // Ideal toggle markup at mobile\n      // [aria-expanded=false]:not([aria-selected])\n      toggle.setAttribute(\"aria-expanded\", \"false\");\n      toggle.removeAttribute(\"aria-selected\");\n    }\n  }\n\n  /**\n   * Manages the back button's state attributes\n   */\n  _updateBackButtonState() {\n    // Element is hidden with CSS at desktop layout\n    if (this.breakpoint === \"compact\") {\n      if (this.active) {\n        this._detailsBackButton.setAttribute(\"aria-expanded\", \"true\");\n      } else {\n        this._detailsBackButton.setAttribute(\"aria-expanded\", \"false\");\n      }\n    }\n  }\n\n  /**\n   * Handles changes in state\n   * @param {object} e Event object\n   */\n  _handleHideShow(e) {\n    const nextToggle = e.target;\n\n    // Detect if handleHideShow was called by an event listener or manually in code\n    if (typeof e === \"object\" && e instanceof Event) {\n      // If the user has interacted with the component remove the pristine attribute\n      this._wrapper.removeAttribute(\"data-pristine\");\n    }\n\n    if (typeof nextToggle === \"undefined\") {\n      return;\n    }\n    // If the clicked toggle is already open, no need to do anything\n    else if (nextToggle.getAttribute(\"aria-selected\") === \"true\" && nextToggle.id === this.active) {\n      return;\n    }\n\n    const nextDetails = this._slots.details[parseInt(nextToggle.dataset.index)];\n    const previousToggle = this.active ? document.getElementById(this.active) : false;\n    const currentToggle = document.getElementById(this.active);\n\n    // Update attribute to show which toggle is active\n    this.active = nextToggle.id;\n\n    // Create the appropriate heading for the top of the content column\n    let newHeading = null;\n    if (nextToggle.dataset.wasTag && nextToggle.dataset.wasTag.substr(0, 1) === \"H\") {\n      newHeading = document.createElement(nextToggle.dataset.wasTag);\n    } else {\n      newHeading = document.createElement(\"strong\");\n    }\n    newHeading.innerText = nextToggle.innerText;\n    newHeading.id = this._detailsWrapperHeading.id;\n    // Replace old heading\n    this._detailsWrapperHeading.parentElement.replaceChild(newHeading, this._detailsWrapperHeading);\n    this._detailsWrapperHeading = newHeading;\n\n    // Make sure the aria-controls attribute is set to the details wrapper\n    this._detailsBackButton.setAttribute(\"aria-controls\", nextDetails.id);\n\n    // Shut previously active detail\n    if (currentToggle) {\n      const currentDetails = this._slots.details[parseInt(currentToggle.dataset.index)];\n\n      this._addCloseAttributes(currentToggle, currentDetails);\n\n      this.emitEvent(PfePrimaryDetail.events.hiddenTab, {\n        detail: {\n          tab: currentToggle,\n          details: currentDetails,\n        },\n      });\n    }\n\n    // Add active attributes to Next Item\n    this._addActiveAttributes(nextToggle, nextDetails);\n\n    // At compact make sure elements in left sidebar are hidden, otherwise make sure they're shown\n    if (this.getAttribute(\"breakpoint\") === \"compact\") {\n      if (this.active) {\n        this._setDetailsNavVisibility(false);\n        this._detailsBackButton.focus();\n      } else {\n        this._setDetailsNavVisibility(true);\n        if (previousToggle) {\n          previousToggle.focus();\n        }\n      }\n    }\n\n    this.emitEvent(PfePrimaryDetail.events.shownTab, {\n      detail: {\n        tab: nextToggle,\n        details: nextDetails,\n      },\n    });\n\n    this._updateBackButtonState();\n  } // end _handleHideShow()\n\n  /**\n   * Closes the open toggle and details\n   */\n  closeAll() {\n    this._setDetailsNavVisibility(true);\n\n    if (this.active) {\n      const detailNav = document.getElementById(this.active);\n      const details = document.getElementById(detailNav.getAttribute(\"aria-controls\"));\n      this._addCloseAttributes(detailNav, details);\n      this.emitEvent(PfePrimaryDetail.events.hiddenTab, {\n        detail: {\n          tab: detailNav,\n          details: details,\n        },\n      });\n\n      // Set focus back to toggle that was activated\n      detailNav.focus();\n      this.removeAttribute(\"active\");\n    }\n  }\n\n  /**\n   * Check if active element is a tab toggle\n   * @param {object} element Target slotted element\n   */\n  _isToggle(element) {\n    return element.getAttribute(\"slot\") === \"details-nav\";\n  }\n\n  /**\n   * Check if active element is a tab panel\n   * @param {object} element Target slotted element\n   */\n  _isPanel(element) {\n    return element.getAttribute(\"slot\") === \"details\";\n  }\n\n  /**\n   * Get the corresponding active tab panel for the active tab toggle\n   * @return {object} DOM Element for active panel\n   */\n  _getFocusedPanel() {\n    const toggles = this._slots.detailsNav;\n    let newIndex = toggles.findIndex((toggle) => toggle === document.activeElement);\n\n    return toggles[newIndex % toggles.length].nextElementSibling;\n  }\n\n  /**\n   * Get previous toggle in relation to the active toggle\n   * @return {object} DOM Element for toggle before the active one\n   */\n  _getPrevToggle() {\n    const toggles = this._slots.detailsNav;\n    let newIndex = toggles.findIndex((toggle) => toggle === document.activeElement) - 1;\n\n    return toggles[(newIndex + toggles.length) % toggles.length];\n  }\n\n  /**\n   * Get currently active toggle\n   * @return {object} DOM Element for active toggle\n   */\n  _getFocusedToggle() {\n    return document.getElementById(this.active);\n  }\n\n  /**\n   * Get next toggle in list order from currently focused\n   * @return {object} DOM Element for element after active toggle\n   */\n  _getNextToggle() {\n    const toggles = this._slots.detailsNav;\n    let newIndex = toggles.findIndex((toggle) => toggle === document.activeElement) + 1;\n\n    return toggles[newIndex % toggles.length];\n  }\n\n  /**\n   * Manual user activation vertical tab\n   * @param {event} Target event\n   */\n  _keyboardControls(event) {\n    const currentElement = event.target;\n    let newToggle;\n\n    switch (event.key) {\n      case \"Escape\":\n        // Only closing all at compact sizes since something should always be selected at non-compact\n        if (this.getAttribute(\"breakpoint\") === \"compact\") {\n          this.closeAll();\n        }\n        break;\n      // case \"Tab\":\n      // Tab (Default tab behavior)\n      /// When focus moves into the tab list, places focus on the active tab element\n      /// When the focus is in the tab list, move focus away from active tab element to next element in tab order which is the tabpanel element\n      /// When focus is moved outside of the tab list focus moves to the next focusable item in the DOM order\n\n      case \"ArrowUp\":\n      case \"Up\":\n      case \"ArrowLeft\":\n      case \"Left\":\n        if (!this._isToggle(currentElement)) {\n          return;\n        }\n        event.preventDefault(); // Prevent scrolling\n        // Up Arrow/Left Arrow\n        /// When tab has focus:\n        /// Moves focus to the next tab\n        /// If focus is on the last tab, moves focus to the first tab\n        newToggle = this._getPrevToggle();\n        break;\n\n      case \"ArrowDown\":\n      case \"Down\":\n      case \"ArrowRight\":\n      case \"Right\":\n        if (!this._isToggle(currentElement)) {\n          return;\n        }\n        event.preventDefault(); // Prevent scrolling\n        // Down Arrow/Right Arrow\n        /// When tab has focus:\n        /// Moves focus to previous tab\n        /// If focus is on the first tab, moves to the last tab\n        /// Activates the newly focused tab\n\n        newToggle = this._getNextToggle();\n        break;\n\n      case \"Home\":\n        if (!this._isToggle(currentElement)) {\n          return;\n        }\n        event.preventDefault(); // Prevent scrolling\n        // Home\n        //// When a tab has focus, moves focus to the first tab\n\n        newToggle = this._slots.detailsNav[0];\n        break;\n\n      case \"End\":\n        if (!this._isToggle(currentElement)) {\n          return;\n        }\n        event.preventDefault(); // Prevent scrolling\n        // End\n        /// When a tab has focus, moves focus to the last tab\n\n        newToggle = this._slots.detailsNav[this._slots.detailsNav.length - 1];\n        break;\n\n      default:\n        return;\n    }\n\n    if (newToggle) newToggle.focus();\n  } // end _keyboardControls()\n} // end Class\n\nPFElement.create(PfePrimaryDetail);\n\nexport default PfePrimaryDetail;\n"],"names":["PFElement","this","tag","PfeTypes","Container","String","Number","hasLightDOM","_processLightDom","debounceDelay","hasAttribute","_debouncedSetBreakpoint","func","delay","timeout","immediate","context","args","arguments","callNow","setTimeout","apply","debounce","_setBreakpoint","addEventListener","_childObserver","observe","childList","_attributesObserver","attributes","attributeFilter","_detailsBackButton","closeAll","_keyboardControls","disconnect","removeEventListener","_slots","detailsNav","index","length","_handleHideShow","_wrapper","classList","add","remove","detailNavElement","attr","denyListAttributes","createToggleButton","tagName","toggle","document","createElement","innerHTML","setAttribute","forEach","includes","name","value","dataset","wasTag","id","Math","random","toString","substr","parentElement","replaceChild","detail","toggleId","getAttribute","processed","_windowInnerWidth","window","innerWidth","activeToggle","breakpointWas","breakpoint","breakpointIs","offsetWidth","breakpointWidth","active","getElementById","_addCloseAttributes","removeAttribute","detailNavItem","_addActiveAttributes","target","_setDetailsNavVisibility","visible","leftColumnSlots","slotName","j","hidden","activeDetailNavId","activeDetailId","getSlot","details","_initDetailsNav","_initDetail","_this2","error","e","nextDetails","previousToggle","currentToggle","nextToggle","Event","parseInt","newHeading","innerText","_detailsWrapperHeading","currentDetails","emitEvent","PfePrimaryDetail","events","hiddenTab","focus","shownTab","_updateBackButtonState","detailNav","element","toggles","newIndex","findIndex","activeElement","nextElementSibling","event","currentElement","newToggle","key","_isToggle","preventDefault","_getPrevToggle","_getNextToggle","type","PfeType","_this","bind","_manageWrapperAttributes","MutationObserver","shadowRoot","_detailsNav","_detailsWrapper","_detailsWrapperHeader","_focusableElements","create"],"mappings":"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"}