{"version":3,"sources":["../../pfe-sass/mixins/_mixins.scss","../../pfe-sass/mixins/_custom-properties.scss","../../pfe-sass/extends/_extends.scss","pfe-card.css","pfe-card.scss","../../pfe-sass/functions/_custom-properties.scss","../../../node_modules/@patternfly/patternfly/sass-utilities/scss-variables.scss","../../../node_modules/@patternfly/patternfly/sass-utilities/colors.scss"],"names":[],"mappings":"AAGM;EC6IF;ID7IwF,UAAA;IE4CxF,iCAAyD;IACzD,yBAAiC;EC3CnC;AACF;;AHHM;ECyLF;IDzLwF,UAAA;IEoDxF,yBAAiC;EC3CnC;AACF;;ACwCA;EACE,2FAAU;EAGV,oBAAa;EAAb,qBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,4BAAsB;EAAtB,6BAAsB;EAAtB,8BAAsB;MAAtB,0BAAsB;UAAtB,sBAAsB;EACtB,yBAAyB;EAEzB,2BAAmB;MAAnB,4BAAmB;cAAnB,2BAAmB;UAAnB,mBAAmB;EAEnB,oECgBkC;EDhBlC,wWCgBkC;EDflC,uBCekC;EDflC,oLCekC;EDdlC,kBCckC;EDdlC,2FCckC;EDVlC,gBAAgB;EAGhB,yBCOkC;EDPlC,mGCOkC;EDNlC,kCCMkC;EDNlC,uECMkC;EDLlC,cC6ByH;ED7BzH,4CC6ByH;AF3E3H;;AHmCE;EIVF;IJsBI,kCAAkC;IAClC,iCAAiC;IACjC,mCAA2B;YAA3B,2BAA2B;EG1C7B;AACF;;AH2BE;EIVF;IA4BI,kBEiGoC;IFhGpC,yBG9EoC;EJsCtC;AACF;;AHxCM;EIkDN;IJlD4F,UAAA;IImFxF,iCAAuD;IAAvD,6EAAuD;IACvD,yBAA+B;IAA/B,wDAA+B;IAC/B,iCAAiC;IACjC,kBEyFoC;IFxFpC,yBGtFoC;IHuFpC,aCtDgC;IDsDhC,iDCtDgC;EFiBlC;AACF;;AFyFI;EA5CE,8EAA8C;EAA9C,4EAA8C;AExCpD;;AFoFI;EA5CE,+EAA8C;EAA9C,6EAA8C;AEnCpD;;AF+EI;EA5CE,4EAA8C;EAA9C,2EAA8C;AE9BpD;;AF0EI;EA5CE,+EAA8C;EAA9C,8EAA8C;AEzBpD;;AFqEI;EA5CE,6EAA8C;EAA9C,+EAA8C;AEpBpD;;AFgEI;EA5CE,8EAA8C;EAA9C,iFAA8C;AEfpD;;AF2DI;EA5CE,kFAA8C;EAA9C,qFAA8C;AEVpD;;AF6FI;EAtHM,qEAA+D;EAA/D,sFAA+D;EAA/D,wEAA+D;EAA/D,sFAA+D;EAA/D,sFAA+D;EAA/D,0FAA+D;EAA/D,oFAA+D;EAA/D,uGAA+D;EAA/D,uGAA+D;EAA/D,sGAA+D;AEsCzE;;AFgFI;EAtHM,0EAA+D;EAA/D,2FAA+D;EAA/D,0EAA+D;EAA/D,2FAA+D;EAA/D,2FAA+D;EAA/D,+FAA+D;EAA/D,8FAA+D;EAA/D,4GAA+D;EAA/D,4GAA+D;EAA/D,gHAA+D;AEmDzE;;AFmEI;EAtHM,+DAA+D;EAA/D,6EAA+D;EAA/D,4DAA+D;EAA/D,6EAA+D;EAA/D,6EAA+D;EAA/D,iFAA+D;EAA/D,2EAA+D;EAA/D,8FAA+D;EAA/D,8FAA+D;EAA/D,6FAA+D;AEgEzE;;AC7BA;EHAM,gEAA8C;EAA9C,kEAA8C;EAA9C,mEAA8C;EAA9C,iEAA8C;AEoCpD;;AChCA;EACE,8BAAwB;ADmC1B;;AC9BG;;;;EAKG,UAAU;EACV,iBAAiB;EACjB,gDAA0D;EAA1D,iHAA0D;ADgChE;;AC/BM;;;;EACE,iBCxC4B;EDwC5B,+ECxC4B;AF6EpC;;AC9CG;;;;EAeG,mBAAmB;EACnB,uCAAmD;EAAnD,0GAAmD;ADsCzD;;ACtDG;;;;EAqBG,oBAAoB;EACpB,oDAAwF;EAAxF,iMAAwF;EACxF,4BAAoB;MAApB,wBAAoB;UAApB,oBAAoB;ADwC1B;;AC/DG;;;;EA4BG,kBAAkB;EAClB,sCAAiD;EAAjD,wGAAiD;AD0CvD;;ACvEG;EAiCG,0BAA0B;EAC1B,8BAAsB;MAAtB,0BAAsB;UAAtB,sBAAsB;EACtB,oBAAiB;KAAjB,iBAAiB;AD0CvB;;AC7EG;;;;EAwCG,8BAAsB;MAAtB,0BAAsB;UAAtB,sBAAsB;AD4C5B;;ACpFG;;;;EA6CG,2BAA2B;AD8CjC;;AC3FG;;;;EAkDG,mCAAmC;EACnC,6CAAyD;EAAzD,gHAAyD;ADgD/D;;ACnGG;;;;EAwDG,mCAAmC;EACnC,6CAAwD;EAAxD,+GAAwD;ADkD9D;;AC3GG;;;;EA8DG,mCAAmC;EACnC,8DAAqF;EAArF,mMAAqF;ADoD3F;;ACjDE;EACE,UAAU;EAEV,qCCpGgC;EDoGhC,0GCpGgC;EDqGhC,cCrGgC;EDqGhC,4ECrGgC;EDgHhC,gDAA6D;EAA7D,iHAA6D;EAC7D,uCAAoD;EAApD,0GAAoD;EACpD,mBClHgC;EDkHhC,qHClHgC;EDmHhC,sCAAmD;EAAnD,wGAAmD;EAGnD,iBCtHgC;EDsHhC,mHCtHgC;EDuHhC,6BCvHgC;EDuHhC,gGCvHgC;EDwHhC,4BCxHgC;EDwHhC,8FCxHgC;EDyHhC,oBCzHgC;EDyHhC,sHCzHgC;AFgKpC;;AC1DI;EAEE,2CCxG8B;EDwG9B,sHCxG8B;AFoKpC;;AHhPM;EI6KJ;IJ7K0F,UAAA;IIuLtF,iCAAyD;IACzD,yBAAiC;ED+DrC;AACF;;ACjDI;EACE,6BC5H8B;ED4H9B,iGC5H8B;AFgLpC;;AC/EG;;EAgCG,2HAAgC;ADoDtC;;ACjDI;EACE,aAAa;ADoDnB;;ACjDI;;EAEE,qJAAmC;ADoDzC;;AC7FG;;EA8CG,iIAAmC;ADoDzC;;AClGG;EAmDK,gBAAgB;ADmDxB;;ACtGG;EAmDK,gBAAgB;ADuDxB;;AC1GG;EAmDK,gBAAgB;AD2DxB;;AC9GG;EAmDK,gBAAgB;AD+DxB;;AClHG;EAmDK,gBAAgB;ADmExB;;ACtHG;EAmDK,gBAAgB;ADuExB;;AClEI;;EAEE,2HAAgC;ADqEtC;;ACxEG;;EAQG,UAAU;EACV,kJAAgC;ADqEtC;;AC9EG;;EAcG,iIAAmC;ADqEzC;;AClEI;;EAEE,qJAAmC;ADqEzC;;AClEI;EACE,gBAAgB;ADqEtB;;AClEE;EACE,gBAAgB;EAEhB,oBAAa;EAAb,qBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,8BCtLgC;EDsLhC,6BCtLgC;EDsLhC,2BCtLgC;MDsLhC,uBCtLgC;UDsLhC,mBCtLgC;EDsLhC,iDCtLgC;EDuLhC,uBCvLgC;MDuLhC,mBCvLgC;UDuLhC,eCvLgC;EDuLhC,sDCvLgC;MDuLhC,kDCvLgC;UDuLhC,8CCvLgC;EDyLhC,2BCzLgC;EDyLhC,6BCzLgC;MDyLhC,wBCzLgC;UDyLhC,qBCzLgC;EDyLhC,gECzLgC;EDyLhC,kECzLgC;MDyLhC,6DCzLgC;UDyLhC,0DCzLgC;AF4PpC;;AC1EG;;EAWG,iIAAmC;ADoEzC;;ACjEI;EACE,aAAa;ADoEnB;;ACjEE;EAEE,mBCtMgC;EDsMhC,qHCtMgC;AFyQpC;;ACrEG;EASK,aAAa;ADgErB;;ACzEG;EASK,aAAa;ADoErB;;AC7EG;EASK,aAAa;ADwErB;;ACjFG;EASK,aAAa;AD4ErB;;ACrFG;EASK,aAAa;ADgFrB;;ACzFG;EASK,aAAa;ADoFrB;;AC7FG;EASK,aAAa;ADwFrB","file":"pfe-card.css","sourcesContent":["@mixin browser-query($browser-list) {\n  @each $browser in $browser-list {\n    @if $browser == ie11 {\n      @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n        @content;\n      }\n    }\n    @if $browser == edge12 {\n      @supports (-ms-accelerator: true) { /* Microsoft Edge Browser 12+ */\n        @content;\n      }\n    }\n    @if $browser == edge {\n      @supports (-ms-ime-align: auto) { /* Microsoft Edge Browser 16+ (All) */\n        @content;\n      }\n    }\n    @if $browser == firefox {\n      @media all and (min--moz-device-pixel-ratio:0) { /* Mozilla Firefox (All) */\n        @content;\n      }\n    }\n  }\n}\n\n@mixin pfe-transition($properties...) {\n  $return: null;\n  @each $property in $properties {\n    @if length($property) == 1 {\n      $return: append($return, #{$property} 250ms $pfe-global--animation-timing, comma);\n    }\n    @else if length($property) == 2 {\n      $return: append($return, nth($property, 1) nth($property, 2), comma);\n    }\n  }\n  transition: $return;\n}\n\n// Make a CSS arrow\n@mixin pfe-arrow($type, $color, $width: 8px, $height: 5px, $pseudo: false) {\n  $direction: (\n    up: 180deg,\n    down: 0deg,\n    right: -90deg,\n    left: 90deg,\n  );\n  border-style: pfe-var(surface--border-style);\n  border-width: $width $height 0;\n  border-color: transparent;\n  border-top-color: $color;\n  transform: rotate(map-get($direction, $type));\n  @if $pseudo {\n    display: inline-block;\n    content: \"\";\n    @content;\n  }\n}\n\n@mixin pfe-arrow-color($color) {\n  border-top-color: $color;\n}\n\n@mixin pfe-print-media {\n  @media print {\n    @content;\n  }\n}\n\n@mixin pfe-print-background {\n  -webkit-print-color-adjust: exact;\n  color-adjust: exact;\n}\n\n@mixin pfe-no-print-background {\n  @include pfe-print-media {\n    background-color: white !important;\n    background-image: none !important;\n    box-shadow: none !important;\n  }\n}\n\n@mixin pfe-hidden {\n  @at-root #{&}([hidden]) {\n    display: none;\n  }\n}\n\n@mixin pfe-pipe( $position: right, $padding: 0, $margin: 0, $color: $border-color) {\n  border: pfe-var(surface--border-width) pfe-var(surface--border-style) transparent;\n  border-#{$position}-color: $color;\n  @if $position == right {\n    padding-left: $padding;\n    margin-right: $margin;\n  }\n  @else if $position == left {\n    padding-right: $padding;\n    margin-left: $margin;\n  }\n}\n\n@mixin pfe-retina {\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    @content;\n  }\n}\n\n@mixin pfe-icon($path, $display: flex, $size: 1em) {\n  display: #{$display};\n  @if $path {\n    background: #{$path} no-repeat;\n    background-size: contain;\n    background-position: center;\n  }\n  width: #{$size};\n  height: #{$size};\n  @content;\n}\n\n@mixin pfe-local-debug($map: $LOCAL-VARIABLES) {\n  :root {\n      @include pfe-print-local($map);\n  }\n} ","////\n/// Tools for leveraging custom property stacks\n/// @group custom-properties\n/// @author castastrophe\n////\n\n/// This will print all the broadcast variables, and set the value to the context of your choosing, like on-dark or on-saturated.\n/// @param {String} $context - Look up values from contexts, i.e. \"light\" or \"saturated\"\n/// @param {List | String} $broadcast [$BROADCAST-VARS] -  Optionally specify only one broadcast variable instead of the whole set, i.e. \"text\"\n/// @see $custom-prop-prefix\n/// @see $BROADCAST-VARS\n/// @example - scss - Usage in a container component, i.e. pfe-card\n///    :host {\n///      @include pfe-set-broadcast-context(dark);\n///    }\n/// @example - css - Rendered output\n///   :host {\n///     --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///     --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///     --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///     --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///     --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///     --pfe-broadcasted--link-decoration: none;\n///     --pfe-broadcasted--link-decoration--hover: underline;\n///     --pfe-broadcasted--link-decoration--focus: underline;\n///     --pfe-broadcasted--link-decoration--visited: none;\n///   }\n///\n@mixin pfe-set-broadcast-context($context, $broadcast: $BROADCAST-VARS) {\n  @each $type in $broadcast {\n    $list: ();\n    $string: \"\";\n    $context_string: \"\";\n    $state: \"\";\n\n    @if str-starts-with($type, \"link\") {\n      $list: append($list, \"#{$type}\");\n\n      @each $s in (hover, focus, visited) {\n        $state: \"--#{$s}\";\n        $string: \"#{$type}#{$state}\";\n\n        @if not index($list, $string) {\n          $list: append($list, \"#{$type}#{$state}\");\n        }\n      }\n    } @else {\n      @if not index($list, $string) {\n        $list: append($list, \"#{$type}\");\n      }\n    }\n\n    @if index($CONTEXTS, $context) != null {\n      @if $context != \"light\" {\n        $context_string: \"--on-#{$context}\";\n      }\n    }\n\n    @each $item in $list {\n      @if not index($BROADCAST-VARS, $type) {\n        @warn \"--#{$custom-prop-prefix}-broadcasted--#{$item} variable is not in the $BROADCAST-VARS list.\";\n      } @else if not pfe-broadcasted(#{$item}#{$context_string}) {\n        @warn \"#{$item}#{$context_string} value does not currently exist.\";\n      } @else {\n        @if index($CONTEXTS, $context) != null {\n          --#{$custom-prop-prefix}-broadcasted--#{$item}: #{pfe-var(#{$item}#{$context_string})};\n        } @else {\n          @error \"The #{$context} context does not appear to be part of a supported context.\";\n        }\n      }\n    }\n  }\n}\n\n/// Returns CSS Variable for the local component-scoped variable\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $value - The value of the css variable being defined\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $custom-prop-prefix\n/// @see $LOCAL\n/// @example - scss\n///   :host {\n///       padding-top:      pfe-local(paddingTop);\n///       padding-bottom:   pfe-local(paddingBottom);\n///   }\n@mixin pfe-print-local($map: $LOCAL-VARIABLES) {\n  @each $property, $value in $map {\n    $name: \"--#{$property}\";\n    $styles: $value;\n\n    @if type-of($value) == \"map\" {\n      @each $prop, $v in $value {\n        $name: \"__#{$property}--#{$prop}\";\n        $styles: $v;\n\n        // Print the variable definition\n        --#{$custom-prop-prefix}-#{$LOCAL}#{$name}: #{$styles};\n      }\n    } @else {\n      // Print the variable definition\n      --#{$custom-prop-prefix}-#{$LOCAL}#{$name}: #{$styles};\n    }\n  }\n}\n\n/// Surface properties\n/// This mixin creates an attribute for all the surface colors, then prints the local background color variable for the component, with the correct context colors.\n/// @param {List | String} $surfaces [$SURFACES] - defaults to the global $SURFACES list of all supported colors\n/// @param {String} $attr-name [pfe-var] - defaults to pfe-var, optionally pass in a custom name for the data attribute\n/// @example - scss - In your component stylesheet\n///   $LOCAL: band;\n///   @include pfe-surfaces;\n/// @example - css - Rendered result\n///   :host([color=\"darker\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darker, #464646);\n///     --context: dark;\n///   }\n///   :host([color=\"darkest\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darkest, #131313);\n///     --context: dark;\n///   }\n///   :host([color=\"base\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--base, #dfdfdf);\n///     --context: light;\n///   }\n///   :host([color=\"lighter\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lighter, #ececec);\n///     --context: light;\n///   }\n///   :host([color=\"lightest\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lightest, #fff);\n///     --context: light;\n///   }\n///   :host([color=\"accent\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--accent, #ee0000);\n///     --context: saturated;\n///   }\n///   :host([color=\"complement\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--complement, #0477a4);\n///     --context: saturated;\n///   }\n@mixin pfe-surfaces($surfaces: $SURFACE, $attr-name: color) {\n  @each $color in $surfaces {\n    $context: #{pfe-get-context(surface--#{$color}--context)};\n    :host([#{$attr-name}=\"#{$color}\"]) {\n      @include pfe-print-local(\n        (\n          BackgroundColor: pfe-var(surface--#{$color}),\n          context: pfe-var(surface--#{$color}--context, #{$context})\n        )\n      );\n      @extend %fallback-surface;\n    }\n  }\n}\n\n/// Prints the `on` attribute with IE11 fallbacks\n/// @param {List} contexts [$CONTEXTS] - defaults to the global $CONTEXTS list of all supported contexts\n/// @param {Boolean} ie-fallback [true] - defaults to true, prints IE11 fallbacks\n/// @example - scss - In your component styles\n///   @include pfe-contexts; // imports on=\"light\" etc support\n/// @example - css - Rendered outputs\n///   :host([on=\"dark\"]) {\n///     --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///     --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///     --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///     --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///     --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///     --pfe-broadcasted--link-decoration: none;\n///     --pfe-broadcasted--link-decoration--hover: underline;\n///     --pfe-broadcasted--link-decoration--focus: underline;\n///     --pfe-broadcasted--link-decoration--visited: none;\n///   }\n///   @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n///     :host([on=\"dark\"]) {\n///       color: #fff;\n///       color: var(--pfe-theme--color--text--on-dark, #fff);\n///     }\n///   }\n///   // ...as well as all the values for :host([on=\"saturated\"])  and  :host([on=\"light\"])\n@mixin pfe-contexts($contexts: $CONTEXTS, $ie-fallback: true) {\n  // Helper attributes to aid in theming\n  @each $context in $contexts {\n    :host([on=\"#{$context}\"]) {\n      @include pfe-set-broadcast-context($context);\n    }\n  }\n  @if $ie-fallback {\n    :host {\n      @extend %fallback-text;\n    }\n  }\n}\n","// @todo Change to mixins; no efficiency gain with placeholders in web components\n\n/// Clear box element styles\n%reset-box {\n  margin: 0;\n  padding: 0;\n}\n\n/// Clear list styles\n%reset-list {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n/// Clear button styles\n%reset-button {\n  background-color: transparent;\n  border: none;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n}\n\n/// Set up a container element\n%container {\n  position: relative;\n  display: block;\n  width: 100%;\n  padding: pfe-var(container-padding);\n}\n\n/// Screen-reader only content\n%sr-only {\n  position: absolute;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  width: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n}\n\n/// Fallback surface styles for IE11 only\n%fallback-surface {\n  @include browser-query(ie11) {\n    background-color: pfe-fetch(surface--lightest) !important;\n    color: pfe-fetch(text) !important;\n  }\n}\n\n/// Fallback text styles for IE11 only\n%fallback-text {\n  @include browser-query(ie11) {\n    color: pfe-fetch(text) !important;\n  }\n}\n","@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([color=\"darker\"]), :host([color=\"darkest\"]), :host([color=\"base\"]), :host([color=\"lighter\"]), :host([color=\"lightest\"]), :host([color=\"accent\"]), :host([color=\"complement\"]) {\n    /* IE10+ */\n    background-color: #fff !important;\n    color: #151515 !important;\n  }\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host {\n    /* IE10+ */\n    color: #151515 !important;\n  }\n}\n\n:host {\n  --context: var(--pfe-card--context, var(--pfe-theme--color--surface--base--context, light));\n  display: flex;\n  flex-direction: column;\n  justify-items: flex-start;\n  align-self: stretch;\n  padding: var(--pfe-card--Padding, var(--pfe-card--PaddingTop, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) var(--pfe-card--PaddingRight, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) var(--pfe-card--PaddingBottom, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) var(--pfe-card--PaddingLeft, calc(var(--pfe-theme--container-spacer, 1rem) * 2)));\n  border: var(--pfe-card--Border, var(--pfe-card--BorderWidth, 0) var(--pfe-card--BorderStyle, solid) var(--pfe-card--BorderColor, var(--pfe-theme--color--surface--border, #d2d2d2)));\n  border-radius: var(--pfe-card--BorderRadius, var(--pfe-theme--surface--border-radius, 3px));\n  overflow: hidden;\n  background-color: var(--pfe-card--BackgroundColor, var(--pfe-theme--color--surface--base, #f0f0f0));\n  background-position: var(--pfe-card--BackgroundPosition, center center);\n  color: var(--pfe-broadcasted--text, #3c3f42);\n}\n\n@media print {\n  :host {\n    background-color: white !important;\n    background-image: none !important;\n    box-shadow: none !important;\n  }\n}\n\n@media print {\n  :host {\n    border-radius: 3px;\n    border: 1px solid #d2d2d2;\n  }\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host {\n    /* IE10+ */\n    background-color: var(--pfe-theme--color--surface--lightest, #fff) !important;\n    color: var(--pfe-theme--color--text, #151515) !important;\n    background-image: none !important;\n    border-radius: 3px;\n    border: 1px solid #d2d2d2;\n    padding: var(--pfe-theme--container-spacer, 1rem);\n  }\n}\n\n:host([color=\"darker\"]) {\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--darker, #3c3f42);\n  --pfe-card--context: var(--pfe-theme--color--surface--darker--context, dark);\n}\n\n:host([color=\"darkest\"]) {\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--darkest, #151515);\n  --pfe-card--context: var(--pfe-theme--color--surface--darkest--context, dark);\n}\n\n:host([color=\"base\"]) {\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--base, #f0f0f0);\n  --pfe-card--context: var(--pfe-theme--color--surface--base--context, light);\n}\n\n:host([color=\"lighter\"]) {\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--lighter, #f0f0f0);\n  --pfe-card--context: var(--pfe-theme--color--surface--lighter--context, light);\n}\n\n:host([color=\"lightest\"]) {\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--lightest, #fff);\n  --pfe-card--context: var(--pfe-theme--color--surface--lightest--context, light);\n}\n\n:host([color=\"accent\"]) {\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--accent, #004080);\n  --pfe-card--context: var(--pfe-theme--color--surface--accent--context, saturated);\n}\n\n:host([color=\"complement\"]) {\n  --pfe-card--BackgroundColor: var(--pfe-theme--color--surface--complement, #002952);\n  --pfe-card--context: var(--pfe-theme--color--surface--complement--context, saturated);\n}\n\n:host([on=\"dark\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n  --pfe-broadcasted--text--muted: var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #73bcf7);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #bee1f4);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #bee1f4);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #bee1f4);\n  --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration--on-dark, none);\n  --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover--on-dark, underline);\n  --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus--on-dark, underline);\n  --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited--on-dark, none);\n}\n\n:host([on=\"saturated\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text--on-saturated, #fff);\n  --pfe-broadcasted--text--muted: var(--pfe-theme--color--text--muted--on-saturated, #d2d2d2);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link--on-saturated, #fff);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-saturated, #fafafa);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-saturated, #fafafa);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-saturated, #d2d2d2);\n  --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration--on-saturated, underline);\n  --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover--on-saturated, underline);\n  --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus--on-saturated, underline);\n  --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited--on-saturated, underline);\n}\n\n:host([on=\"light\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text, #151515);\n  --pfe-broadcasted--text--muted: var(--pfe-theme--color--text--muted, #6a6e73);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link, #06c);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover, #004080);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus, #004080);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited, #6753ac);\n  --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration, none);\n  --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover, underline);\n  --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus, underline);\n  --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited, none);\n}\n\n:host([size=\"small\"]) {\n  --pfe-card--PaddingTop: var(--pfe-theme--container-spacer, 1rem);\n  --pfe-card--PaddingRight: var(--pfe-theme--container-spacer, 1rem);\n  --pfe-card--PaddingBottom: var(--pfe-theme--container-spacer, 1rem);\n  --pfe-card--PaddingLeft: var(--pfe-theme--container-spacer, 1rem);\n}\n\n:host([border]:not([border=\"false\"])) {\n  --pfe-card--BorderWidth:   1px;\n}\n\n.pfe-card__header ::slotted([pfe-overflow~=\"top\"]),\n.pfe-card__header ::slotted([overflow~=\"top\"]), .pfe-card__body ::slotted([pfe-overflow~=\"top\"]),\n.pfe-card__body ::slotted([overflow~=\"top\"]), .pfe-card__footer ::slotted([pfe-overflow~=\"top\"]),\n.pfe-card__footer ::slotted([overflow~=\"top\"]) {\n  z-index: 1;\n  margin-top: -2rem;\n  margin-top: calc(-1 * var(--pfe-card--PaddingTop, calc(var(--pfe-theme--container-spacer, 1rem) * 2))) !important;\n}\n\n:host([has_header]) .pfe-card__header ::slotted([pfe-overflow~=\"top\"]), :host([has_header])\n.pfe-card__header ::slotted([overflow~=\"top\"]), :host([has_header]) .pfe-card__body ::slotted([pfe-overflow~=\"top\"]), :host([has_header])\n.pfe-card__body ::slotted([overflow~=\"top\"]), :host([has_header]) .pfe-card__footer ::slotted([pfe-overflow~=\"top\"]), :host([has_header])\n.pfe-card__footer ::slotted([overflow~=\"top\"]) {\n  padding-top: var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 1rem));\n}\n\n.pfe-card__header ::slotted([pfe-overflow~=\"right\"]),\n.pfe-card__header ::slotted([overflow~=\"right\"]), .pfe-card__body ::slotted([pfe-overflow~=\"right\"]),\n.pfe-card__body ::slotted([overflow~=\"right\"]), .pfe-card__footer ::slotted([pfe-overflow~=\"right\"]),\n.pfe-card__footer ::slotted([overflow~=\"right\"]) {\n  margin-right: -2rem;\n  margin-right: calc(-1 * var(--pfe-card--PaddingRight, calc(var(--pfe-theme--container-spacer, 1rem) * 2)));\n}\n\n.pfe-card__header ::slotted([pfe-overflow~=\"bottom\"]),\n.pfe-card__header ::slotted([overflow~=\"bottom\"]), .pfe-card__body ::slotted([pfe-overflow~=\"bottom\"]),\n.pfe-card__body ::slotted([overflow~=\"bottom\"]), .pfe-card__footer ::slotted([pfe-overflow~=\"bottom\"]),\n.pfe-card__footer ::slotted([overflow~=\"bottom\"]) {\n  margin-bottom: -2rem;\n  margin-bottom: calc(-1 * calc(var(--pfe-card--PaddingBottom, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) + var(--pfe-card--BorderRadius, var(--pfe-theme--surface--border-radius, 3px))));\n  align-self: flex-end;\n}\n\n.pfe-card__header ::slotted([pfe-overflow~=\"left\"]),\n.pfe-card__header ::slotted([overflow~=\"left\"]), .pfe-card__body ::slotted([pfe-overflow~=\"left\"]),\n.pfe-card__body ::slotted([overflow~=\"left\"]), .pfe-card__footer ::slotted([pfe-overflow~=\"left\"]),\n.pfe-card__footer ::slotted([overflow~=\"left\"]) {\n  margin-left: -2rem;\n  margin-left: calc(-1 * var(--pfe-card--PaddingLeft, calc(var(--pfe-theme--container-spacer, 1rem) * 2)));\n}\n\n.pfe-card__header ::slotted(img), .pfe-card__body ::slotted(img), .pfe-card__footer ::slotted(img) {\n  max-width: 100% !important;\n  align-self: flex-start;\n  object-fit: cover;\n}\n\n.pfe-card__header ::slotted(img:not[pfe-overflow]),\n.pfe-card__header ::slotted(img:not[overflow]), .pfe-card__body ::slotted(img:not[pfe-overflow]),\n.pfe-card__body ::slotted(img:not[overflow]), .pfe-card__footer ::slotted(img:not[pfe-overflow]),\n.pfe-card__footer ::slotted(img:not[overflow]) {\n  align-self: flex-start;\n}\n\n.pfe-card__header ::slotted(img[pfe-overflow]),\n.pfe-card__header ::slotted(img[overflow]), .pfe-card__body ::slotted(img[pfe-overflow]),\n.pfe-card__body ::slotted(img[overflow]), .pfe-card__footer ::slotted(img[pfe-overflow]),\n.pfe-card__footer ::slotted(img[overflow]) {\n  max-width: unset !important;\n}\n\n.pfe-card__header ::slotted(img[pfe-overflow~=\"right\"]),\n.pfe-card__header ::slotted(img[overflow~=\"right\"]), .pfe-card__body ::slotted(img[pfe-overflow~=\"right\"]),\n.pfe-card__body ::slotted(img[overflow~=\"right\"]), .pfe-card__footer ::slotted(img[pfe-overflow~=\"right\"]),\n.pfe-card__footer ::slotted(img[overflow~=\"right\"]) {\n  width: calc(100% + 2rem) !important;\n  width: calc(100% + var(--pfe-card--PaddingRight, calc(var(--pfe-theme--container-spacer, 1rem) * 2))) !important;\n}\n\n.pfe-card__header ::slotted(img[pfe-overflow~=\"left\"]),\n.pfe-card__header ::slotted(img[overflow~=\"left\"]), .pfe-card__body ::slotted(img[pfe-overflow~=\"left\"]),\n.pfe-card__body ::slotted(img[overflow~=\"left\"]), .pfe-card__footer ::slotted(img[pfe-overflow~=\"left\"]),\n.pfe-card__footer ::slotted(img[overflow~=\"left\"]) {\n  width: calc(100% + 2rem) !important;\n  width: calc(100% + var(--pfe-card--PaddingLeft, calc(var(--pfe-theme--container-spacer, 1rem) * 2))) !important;\n}\n\n.pfe-card__header ::slotted(img[pfe-overflow~=\"right\"][pfe-overflow~=\"left\"]),\n.pfe-card__header ::slotted(img[overflow~=\"right\"][overflow~=\"left\"]), .pfe-card__body ::slotted(img[pfe-overflow~=\"right\"][pfe-overflow~=\"left\"]),\n.pfe-card__body ::slotted(img[overflow~=\"right\"][overflow~=\"left\"]), .pfe-card__footer ::slotted(img[pfe-overflow~=\"right\"][pfe-overflow~=\"left\"]),\n.pfe-card__footer ::slotted(img[overflow~=\"right\"][overflow~=\"left\"]) {\n  width: calc(100% + 4rem) !important;\n  width: calc(100% + var(--pfe-card--PaddingRight, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) + var(--pfe-card--PaddingLeft, calc(var(--pfe-theme--container-spacer, 1rem) * 2))) !important;\n}\n\n.pfe-card__header {\n  z-index: 2;\n  background-color: var(--pfe-card__header--BackgroundColor, rgba(0, 0, 0, var(--pfe-theme--opacity, 0.09)));\n  color: var(--pfe-card__header--Color, var(--pfe-broadcasted--text, #3c3f42));\n  margin-top: calc(var(--pfe-card--PaddingTop, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) * -1) !important;\n  margin-right: calc(var(--pfe-card--PaddingRight, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) * -1);\n  margin-bottom: var(--pfe-card--spacing--vertical, var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 1rem)));\n  margin-left: calc(var(--pfe-card--PaddingLeft, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) * -1);\n  padding-top: var(--pfe-card--spacing--vertical, var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 1rem)));\n  padding-right: var(--pfe-card--PaddingRight, calc(var(--pfe-theme--container-spacer, 1rem) * 2));\n  padding-left: var(--pfe-card--PaddingLeft, calc(var(--pfe-theme--container-spacer, 1rem) * 2));\n  padding-bottom: var(--pfe-card--spacing--vertical, var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 1rem)));\n}\n\n:host([on=\"dark\"]) .pfe-card__header {\n  background-color: var(--pfe-card__header--BackgroundColor--dark, rgba(255, 255, 255, var(--pfe-theme--opacity, 0.09)));\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  .pfe-card__header {\n    /* IE10+ */\n    background-color: #fff !important;\n    color: #151515 !important;\n  }\n}\n\n:host(:not([has_body]):not([has_footer])) .pfe-card__header {\n  margin-bottom: var(--pfe-card--PaddingBottom, calc(var(--pfe-theme--container-spacer, 1rem) * 2));\n}\n\n.pfe-card__header ::slotted([pfe-overflow~=\"top\"]),\n.pfe-card__header ::slotted([overflow~=\"top\"]) {\n  --pfe-card__overflow--MarginTop: calc(var(--pfe-card--PaddingTop, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) * -1);\n}\n\n:host(:not([has_header])) .pfe-card__header {\n  display: none;\n}\n\n:host([has_body], [has_footer]) .pfe-card__header ::slotted([pfe-overflow~=\"bottom\"]),\n:host([has_body], [has_footer]) .pfe-card__header ::slotted([overflow~=\"bottom\"]) {\n  --pfe-card__overflow--MarginBottom: calc(var(--pfe-card--spacing--vertical, var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 1rem))) * -1);\n}\n\n.pfe-card__header ::slotted([pfe-overflow~=\"bottom\"]),\n.pfe-card__header ::slotted([overflow~=\"bottom\"]) {\n  --pfe-card__overflow--MarginBottom: calc(var(--pfe-card--PaddingBottom, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) * -1);\n}\n\n.pfe-card__header ::slotted(h1) {\n  margin-bottom: 0;\n}\n\n.pfe-card__header ::slotted(h2) {\n  margin-bottom: 0;\n}\n\n.pfe-card__header ::slotted(h3) {\n  margin-bottom: 0;\n}\n\n.pfe-card__header ::slotted(h4) {\n  margin-bottom: 0;\n}\n\n.pfe-card__header ::slotted(h5) {\n  margin-bottom: 0;\n}\n\n.pfe-card__header ::slotted(h6) {\n  margin-bottom: 0;\n}\n\n:host(:not([has_header])) .pfe-card__body ::slotted([pfe-overflow~=\"top\"]),\n:host(:not([has_header])) .pfe-card__body ::slotted([overflow~=\"top\"]) {\n  --pfe-card__overflow--MarginTop: calc(var(--pfe-card--PaddingTop, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) * -1);\n}\n\n.pfe-card__body ::slotted([pfe-overflow~=\"top\"]),\n.pfe-card__body ::slotted([overflow~=\"top\"]) {\n  z-index: 1;\n  --pfe-card__overflow--MarginTop: calc(var(--pfe-card--spacing--vertical, var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 1rem))) * -1);\n}\n\n.pfe-card__body ::slotted([pfe-overflow~=\"bottom\"]),\n.pfe-card__body ::slotted([overflow~=\"bottom\"]) {\n  --pfe-card__overflow--MarginBottom: calc(var(--pfe-card--PaddingBottom, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) * -1);\n}\n\n:host([has_footer]) .pfe-card__body ::slotted([pfe-overflow~=\"bottom\"]),\n:host([has_footer]) .pfe-card__body ::slotted([overflow~=\"bottom\"]) {\n  --pfe-card__overflow--MarginBottom: calc(var(--pfe-card--spacing--vertical, var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 1rem))) * -1);\n}\n\n:host(:not([has_footer])) .pfe-card__body {\n  margin-bottom: 0;\n}\n\n.pfe-card__footer {\n  margin-top: auto;\n  display: flex;\n  flex-direction: var(--pfe-card__footer--Row, row);\n  flex-wrap: var(--pfe-card__footer--Wrap, wrap);\n  align-items: var(--pfe-card__footer--AlignItems, baseline);\n}\n\n.pfe-card__footer ::slotted([pfe-overflow~=\"bottom\"]),\n.pfe-card__footer ::slotted([overflow~=\"bottom\"]) {\n  --pfe-card__overflow--MarginBottom: calc(var(--pfe-card--PaddingBottom, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) * -1);\n}\n\n:host(:not([has_footer])) .pfe-card__footer {\n  display: none;\n}\n\n.pfe-card__header, .pfe-card__body {\n  margin-bottom: var(--pfe-card--spacing--vertical, var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 1rem)));\n}\n\n.pfe-card__header ::slotted(p:first-child), .pfe-card__body ::slotted(p:first-child) {\n  margin-top: 0;\n}\n\n.pfe-card__header ::slotted(h1:first-child), .pfe-card__body ::slotted(h1:first-child) {\n  margin-top: 0;\n}\n\n.pfe-card__header ::slotted(h2:first-child), .pfe-card__body ::slotted(h2:first-child) {\n  margin-top: 0;\n}\n\n.pfe-card__header ::slotted(h3:first-child), .pfe-card__body ::slotted(h3:first-child) {\n  margin-top: 0;\n}\n\n.pfe-card__header ::slotted(h4:first-child), .pfe-card__body ::slotted(h4:first-child) {\n  margin-top: 0;\n}\n\n.pfe-card__header ::slotted(h5:first-child), .pfe-card__body ::slotted(h5:first-child) {\n  margin-top: 0;\n}\n\n.pfe-card__header ::slotted(h6:first-child), .pfe-card__body ::slotted(h6:first-child) {\n  margin-top: 0;\n}\n","@import \"../../pfe-sass/pfe-sass\";\n\n$LOCAL: card;\n\n$LOCAL-VARIABLES: (\n  // Individual padding overrides available\n  PaddingTop: calc(#{pfe-var(container-spacer)} * 2),\n  PaddingRight: calc(#{pfe-var(container-spacer)} * 2),\n  PaddingBottom: calc(#{pfe-var(container-spacer)} * 2),\n  PaddingLeft: calc(#{pfe-var(container-spacer)} * 2),\n\n  //-- Border settings\n  BorderRadius: pfe-var(surface--border-radius),\n\n  //-- Color properties\n  BackgroundColor: pfe-var(surface--base),\n  context: pfe-var(surface--base--context),\n  BackgroundPosition: center center,\n\n  spacing: pfe-var(container-spacer),\n\n  header: (\n    BackgroundColor: rgba(0, 0, 0, pfe-var(opacity)),\n    BackgroundColor--dark: rgba(255, 255, 255, pfe-var(opacity)),\n    Color:           pfe-broadcasted(text)\n  ),\n\n  footer: (\n    spacing--horizontal: calc(#{pfe-var(container-spacer)} / 2)\n  )\n\n);\n\n// Nested internal variables (pfe-local calls), maps cannot \"self-reference\"\n$LOCAL-VARIABLES: map-deep-merge($LOCAL-VARIABLES, (\n  // Internal spacing; elements inside the card (header, body, footer regions)\n  spacing--vertical: pfe-local(spacing),\n\n  // Combine above variables or allow single override point via variable\n  Padding: pfe-local(PaddingTop) pfe-local(PaddingRight) pfe-local(PaddingBottom) pfe-local(PaddingLeft),\n\n  //-- Border variable encompasses width, style, and color\n  Border: pfe-local(BorderWidth, 0) pfe-local(BorderStyle, solid) pfe-local(BorderColor, pfe-var(surface--border))\n));\n\n$size-small: (\n  PaddingTop:     pfe-var(container-spacer),\n  PaddingRight:   pfe-var(container-spacer),\n  PaddingBottom:  pfe-var(container-spacer),\n  PaddingLeft:    pfe-var(container-spacer)\n);\n\n\n:host {\n  --context: #{pfe-local(context)};\n\n  // Start of style declarations for host element\n  display: flex;\n  flex-direction: column;\n  justify-items: flex-start;\n  // This allows the card to fill it's container if necessary\n  align-self: stretch;\n\n  padding:       pfe-local(Padding);\n  border:        pfe-local(Border);  // @TODO add automatic border when lightest card is on lightest background?\n  border-radius: pfe-local(BorderRadius);\n\n  // This property ensures that children in the slots do no overflow\n  // the border-radius being set on the container\n  overflow: hidden;\n\n  // Base colors\n  background-color:    pfe-local(BackgroundColor);\n  background-position: pfe-local(BackgroundPosition);\n  color: pfe-broadcasted(text);\n\n  // Remove background color for print\n  @include pfe-no-print-background;\n\n  // Add the border to the card for print\n  @include pfe-print-media {\n    border-radius: pfe-fetch(surface--border-radius);\n    border: pfe-fetch(surface--border-width) pfe-fetch(surface--border-style) pfe-fetch(surface--border);\n  }\n\n  @include browser-query(ie11) {\n    background-color: pfe-var(surface--lightest) !important;\n    color: pfe-var(text) !important;\n    background-image: none !important;\n    border-radius: pfe-fetch(surface--border-radius);\n    border: pfe-fetch(surface--border-width) pfe-fetch(surface--border-style) pfe-fetch(surface--border);\n    padding: pfe-var(container-spacer);\n  }\n}\n\n// Pull in pfe-var settings for all supported surface colors\n@include pfe-surfaces;\n\n@include pfe-contexts; // imports on=\"light\" etc support\n\n:host([size=\"small\"]) {\n  @include pfe-print-local($size-small);\n}\n\n:host([border]:not([border=\"false\"])) {\n  --pfe-card--BorderWidth:   #{pfe-fetch(surface--border-width)};\n}\n\n// Targets the wrappers in the shadow DOM\n.pfe-card {\n  &__header,\n  &__body,\n  &__footer {\n    ::slotted([pfe-overflow~=\"top\"]),\n    ::slotted([overflow~=\"top\"]) {\n      z-index: 1;\n      margin-top: -2rem; //IE11 fallback\n      margin-top: calc(-1 * #{pfe-local(PaddingTop)}) !important;\n      :host([has_header]) & {\n        padding-top: pfe-local(spacing);\n      }\n    }\n\n    ::slotted([pfe-overflow~=\"right\"]),\n    ::slotted([overflow~=\"right\"]) {\n      margin-right: -2rem; //IE11 fallback\n      margin-right: calc(-1 * #{pfe-local(PaddingRight)});\n    }\n\n    ::slotted([pfe-overflow~=\"bottom\"]),\n    ::slotted([overflow~=\"bottom\"]) {\n      margin-bottom: -2rem; //IE11 fallback\n      margin-bottom: calc(-1 * calc(#{pfe-local(PaddingBottom)} + #{pfe-local(BorderRadius)}));\n      align-self: flex-end;\n    }\n\n    ::slotted([pfe-overflow~=\"left\"]),\n    ::slotted([overflow~=\"left\"]) {\n      margin-left: -2rem; //IE11 fallback\n      margin-left: calc(-1 * #{pfe-local(PaddingLeft)});\n    }\n\n    ::slotted(img) {\n      max-width: 100% !important;\n      align-self: flex-start; //Don't stretch image 100% with other Flexbox items in card.\n      object-fit: cover; // Fix distortion\n    }\n\n    ::slotted(img:not[pfe-overflow]),\n    ::slotted(img:not[overflow]) {\n      align-self: flex-start; //Don't stretch image 100% with other Flexbox items in card.\n    }\n\n    ::slotted(img[pfe-overflow]),\n    ::slotted(img[overflow]) {\n      max-width: unset !important;\n    }\n\n    ::slotted(img[pfe-overflow~=\"right\"]),\n    ::slotted(img[overflow~=\"right\"]) {\n      width: calc(100% + 2rem) !important; //IE11 fallback\n      width: calc(100% + #{pfe-local(PaddingRight)}) !important;\n    }\n\n    ::slotted(img[pfe-overflow~=\"left\"]),\n    ::slotted(img[overflow~=\"left\"]) {\n      width: calc(100% + 2rem) !important; //IE11 fallback\n      width: calc(100% + #{pfe-local(PaddingLeft)}) !important;\n    }\n\n    ::slotted(img[pfe-overflow~=\"right\"][pfe-overflow~=\"left\"]),\n    ::slotted(img[overflow~=\"right\"][overflow~=\"left\"]) {\n      width: calc(100% + 4rem) !important; //IE11 fallback\n      width: calc(100% + #{pfe-local(PaddingRight)} + #{pfe-local(PaddingLeft)}) !important;\n    }\n  }\n  &__header {\n    z-index: 2;\n    // Declare the header background color\n    background-color: pfe-local(BackgroundColor, $region: header);\n    color:            pfe-local($cssvar: Color, $region: header);\n    :host([on=\"dark\"]) & {\n        // Declare the header background color\n      background-color: pfe-local(BackgroundColor--dark, $region: header);\n    }\n    @include browser-query(ie11) {\n      background-color: pfe-fetch(surface--lightest) !important;\n      color: pfe-fetch(text) !important;\n    }\n\n    // Margin styles on header region\n    margin-top:    calc(#{pfe-local(PaddingTop)} * -1) !important;\n    margin-right:  calc(#{pfe-local(PaddingRight)} * -1);\n    margin-bottom: pfe-local(spacing--vertical);\n    margin-left:   calc(#{pfe-local(PaddingLeft)} * -1);\n\n    // Padding for the header region\n    padding-top:    pfe-local(spacing--vertical);\n    padding-right:  pfe-local(PaddingRight);\n    padding-left:   pfe-local(PaddingLeft);\n    padding-bottom: pfe-local(spacing--vertical);\n\n    :host(:not([has_body],[has_footer])) & {\n      margin-bottom: pfe-local(PaddingBottom);\n    }\n\n    ::slotted([pfe-overflow~=\"top\"]),\n    ::slotted([overflow~=\"top\"]) {\n      --pfe-card__overflow--MarginTop: calc(#{pfe-local(PaddingTop)} * -1);\n    }\n\n    :host(:not([has_header])) & {\n      display: none;\n    }\n\n    :host([has_body],[has_footer]) & ::slotted([pfe-overflow~=\"bottom\"]),\n    :host([has_body],[has_footer]) & ::slotted([overflow~=\"bottom\"]) {\n      --pfe-card__overflow--MarginBottom: calc(#{pfe-local(spacing--vertical)} * -1);\n    }\n\n    ::slotted([pfe-overflow~=\"bottom\"]),\n    ::slotted([overflow~=\"bottom\"]) {\n      --pfe-card__overflow--MarginBottom: calc(#{pfe-local(PaddingBottom)} * -1);\n    }\n\n    @each $tag in (h1, h2, h3, h4, h5, h6) {\n      ::slotted(#{$tag}) {\n        margin-bottom: 0;\n      }\n    }\n  }\n  &__body {\n    :host(:not([has_header])) & ::slotted([pfe-overflow~=\"top\"]),\n    :host(:not([has_header])) & ::slotted([overflow~=\"top\"]) {\n      --pfe-card__overflow--MarginTop: calc(#{pfe-local(PaddingTop)} * -1);\n    }\n\n    ::slotted([pfe-overflow~=\"top\"]),\n    ::slotted([overflow~=\"top\"]) {\n      z-index: 1;\n      --pfe-card__overflow--MarginTop: calc(#{pfe-local(spacing--vertical)} * -1);\n    }\n\n    ::slotted([pfe-overflow~=\"bottom\"]),\n    ::slotted([overflow~=\"bottom\"]) {\n      --pfe-card__overflow--MarginBottom: calc(#{pfe-local(PaddingBottom)} * -1);\n    }\n\n    :host([has_footer]) & ::slotted([pfe-overflow~=\"bottom\"]),\n    :host([has_footer]) & ::slotted([overflow~=\"bottom\"]) {\n      --pfe-card__overflow--MarginBottom: calc(#{pfe-local(spacing--vertical)} * -1);\n    }\n\n    :host(:not([has_footer])) & {\n      margin-bottom: 0;\n    }\n  }\n  &__footer {\n    margin-top: auto; // This allows the footer to move to the very bottom\n\n    display: flex;\n    flex-direction: pfe-local(Row, row, $region: footer);\n    flex-wrap:      pfe-local(Wrap, wrap, $region: footer);\n    // Aligns buttons and CTAs\n    align-items: pfe-local(AlignItems, baseline, $region: footer);\n\n    ::slotted([pfe-overflow~=\"bottom\"]),\n    ::slotted([overflow~=\"bottom\"]) {\n      --pfe-card__overflow--MarginBottom: calc(#{pfe-local(PaddingBottom)} * -1);\n    }\n\n    :host(:not([has_footer])) & {\n      display: none;\n    }\n  }\n  &__header,\n  &__body {\n    margin-bottom: pfe-local(spacing--vertical);\n\n    //-- Slotted styles for typography\n    // Remove margins from typography inside the slots\n    @each $tag in (p, h1, h2, h3, h4, h5, h6) {\n      ::slotted(#{$tag}:first-child) {\n        // Remove top margins\n        margin-top: 0;\n      }\n    }\n  }\n}\n","////\n/// Tools for leveraging custom property stacks\n/// @group custom-properties\n/// @author castastrophe\n////\n\n/// Get full theme stack with a fallback from the provided map - used by pfe-var and pfe-zindex\n/// @param {String} $category  - Category name to be appended to variables within the map/system\n/// @param {String} $key - Variable name to be used and prepended with --pfe-theme\n/// @param {Map} $map  - Sass map of variables\n/// @param {String} $fallback [null]  - Optional fallback override\n/// @param {Boolean} $use-fallback [true]  - Optional hook to return a stack with no fallback value\n/// @requires $custom-prop-prefix\n/// @return {String} theme stack with fallback value from a sass map\n@function pfe-get-from-map($category, $key, $map, $fallback: null, $prefix: \"#{$custom-prop-prefix}-theme\", $use-fallback: true) {\n    // Start building the variable declaration\n    $var-declaration: \"--#{$prefix}--\";\n    @if $prefix == \"pf-c\" {\n        $var-declaration: \"--#{$prefix}-\";  // one dash at the end\n    }\n    // If the category exists, inject that into the string\n    @if $category != \"\" {\n        $var-declaration: \"#{$var-declaration}#{$category}--\";\n    }\n    // Append the key to the string\n    $var-declaration: \"#{$var-declaration}#{$key}\";\n\n    // If the fallback is not provided but use-fallback is set to true\n    @if $fallback == null and $use-fallback and map-get($map, $key) != null {\n        $fallback: map-get($map, $key);\n    }\n    @if $fallback != null {\n        // Create the variable declaration\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});   \n}\n\n\n\n/// Returns CSS Var for the local component-scoped variable\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $custom-prop-prefix\n/// @see $LOCAL\n/// @example\n///   :host {\n///       padding-top:      #{pfe-local(paddingTop)};\n///       padding-bottom:   #{pfe-local(paddingBottom)};\n///   }\n@function pfe-local($cssvar, $fallback: null, $region: null) {\n    // If a fallback is not defined, use the global variables map\n    @if $fallback == null and length($LOCAL-VARIABLES) > 0 {\n        @if $region == null {\n            $fallback: map-get($LOCAL-VARIABLES, $cssvar);\n        }\n        @else {\n            $submap: map-get($LOCAL-VARIABLES, $region);\n            @if type-of($submap) == \"map\" {\n                $fallback: map-deep-get($LOCAL-VARIABLES, $region, $cssvar);\n            }\n        }\n    }\n\n    // If a region value exists, build the region string\n    @if $region != null {\n        $region: \"__#{$region}\";\n    }\n\n    // Start building the variable declaration\n    $var-declaration: \"--#{$custom-prop-prefix}-#{$LOCAL}#{$region}--#{to-string($cssvar, '--')}\";\n    \n    @if $fallback != null {\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});\n}\n\n/// Fetches a CSS variable stack for broadcasted variables, providing a hook for context\n/// to influence the styles of children elements such as p tags or links.\n/// @param {String} $broadcast - name of the broadcast variable to apply\n/// @requires {String} $custom-prop-prefix - Name of repo, which is \"pfe\"\n/// @example - scss\n///   :host {\n///     color: pfe-broadcasted(link);\n///   }\n/// @example - css\n///   :host {\n///     color: var(--pfe-broadcasted--link, #06c);\n///   }\n@function pfe-broadcasted($broadcast, $use-fallback: true) {\n    $fallback: \"\";\n    @if $use-fallback {\n        $fallback: \", #{map-get($pfe-broadcasted, #{to-string($broadcast,'--')})}\";\t\n    }\n    @if not index($BROADCAST-VARS, first(str-split($broadcast, '--'))) {\n      @error \"--#{$custom-prop-prefix}-broadcasted--#{$broadcast} variable is not currently supported.\";\n    }\n    @else {\n      @return var(--#{$custom-prop-prefix}-broadcasted--#{to-string($broadcast,'--')}#{unquote($fallback)});\n    }\n}\n\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme--zindex\n/// @requires {Map} $pfe-zindex - SASS Map of z-index values\n/// @see $pfe-zindex\n/// @example - scss - In your component styles\n///   .my-element {\n///     z-index: pfe-zindex( content );\n///   }\n\n@function pfe-zindex($cssvar) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-zindex, $var-name) != null {\n        @return pfe-get-from-map(\"zindex\", $var-name, $pfe-zindex);\n    }\n    @else {\n        @error \"The key for #{$var-name} could not be found in the $pfe-zindex map.\";\n    }\n}\n\n/// Returns the value (only) of a property from the respective maps\n/// Similar to pfe-var, but does not include css variable in the compiled CSS\n/// @param {String} $name - Name of the key for the map\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $pfe-vars\n/// @see $pfe-colors\n/// @see $pfe-broadcasted\n/// @example - scss - In your component styles\n///   .my-element {\n///     background-color: pfe-fetch( ui-base );\n///   }\n@function pfe-fetch($name, $region: null) {\n    $var-name: to-string($name, \"--\");\n    @if $region != null and map-deep-get($LOCAL-VARIABLES, $region, $var-name) != null {\n        @return map-deep-get($LOCAL-VARIABLES, $region, $var-name);\n    }\n    @else if $region == null and map-get($LOCAL-VARIABLES, $var-name) != null {\n        @return map-get($LOCAL-VARIABLES, $var-name);\n    }\n    @else if map-get($pfe-vars, $var-name) != null {\n        @return map-get($pfe-vars, $var-name);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return map-get($pfe-colors, $var-name);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return map-get($pfe-broadcasted, $var-name);\n    }\n    @else if map-get($pfe-typography-base, $var-name) != null {\n        @return map-get($pfe-typography-base, $var-name);\n    }\n\n    // PATTERNFLY CORE\n    @else if map-get($pf-type-sizing, $var-name) != null {\n        @return map-get($pf-type-sizing, $var-name);\n    }\n    @else if map-get($pf-type-sizing--component, $var-name) != null {\n        @return map-get($pf-type-sizing--component, $var-name);\n    }\n    @else if map-get($pf-type-sizing--modifers, $var-name) != null {\n        @return map-get($pf-type-sizing--modifers, $var-name);\n    }\n    @else if map-get($pf-type-sizing--content, $var-name) != null {\n        @return map-get($pf-type-sizing--content, $var-name);\n    }\n    // DEPRECATED\n    @else if map-get($pfe-typography-base-deprecated, $var-name) != null {\n        @return map-get($pfe-typography-base-deprecated, $var-name);\n    }\n    @else if map-get($pfe-typography-deprecated, $var-name) != null {\n        @return map-get($pfe-typography-deprecated, $var-name);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}\n\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme\n/// @param {String} $fallback [null] - Optional custom fallback\n/// @see $pfe-vars\n/// @see $pfe-colors\n/// @see $pfe-broadcasted\n/// @example scss - In your component styles\n///   .my-element {\n///     padding:     pfe-var( container-spacer );\n///     font-size:   pfe-var( font-size );\n///   }\n/// @example - css Rendered output\n///   .my-element {\n///      padding: var(--pfe-theme--container-spacer, 16px);\n///      font-size: var(--pfe-theme--font-size, 16px);\n///   }\n@function pfe-var($cssvar, $fallback: null) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-vars, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-vars, $fallback);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return pfe-get-from-map(\"color\", $var-name, $pfe-colors, $fallback);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-broadcasted);\n    }\n    @else if map-get($pfe-typography-base, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-base, $fallback);\n    }\n    // PATTERNFLY CORE:\n    @else if map-get($pf-type-sizing, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing, $fallback, $prefix: \"pf-global\");\n    }\n    @else if map-get($pf-type-sizing--modifers, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--modifers, $fallback, $prefix: \"pf-c\");\n    }\n    @else if map-get($pf-type-sizing--content, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--content, $fallback, $prefix: \"pf-c\");\n    }\n    // PFE components (must be below core)\n    @else if map-get($pf-type-sizing--component, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--component, $fallback);\n    }\n\n    // DEPRECATED:\n    @else if map-get($pfe-typography-base-deprecated, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-base-deprecated, $fallback);\n    }\n    @else if map-get($pfe-typography-deprecated, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-deprecated, $fallback);\n    }\n\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}","// This file is for initial variable values.\n// All variables should have a valid css value,\n// and use !default so they can be overwritten.\n\n// `$pf-global--concept--PropiertyCamelCase--modifier--state`\n\n// Patternfly options\n\n// Quickly modify global styling by enabling or disabling optional features.\n$pf-global--enable-reset: true !default;\n$pf-global--enable-font-overpass-cdn: false !default;\n$pf-global--enable-fontawesome-cdn: false !default;\n$pf-global--disable-fontawesome: false !default;\n$pf-global--load-pf-3: false !default;\n$pf-global--enable-shield: false !default;\n$pf-global--unset-root-font-size: true !default;\n\n// Patternfly uses the default root size of the browser, it assumes a 16px base\n// since most browser root size is 16. This variables is just to make the\n// transformation from px to rem.\n$pf-global--font-size-root: 16 !default; // for fonts\n$pf-global--space-size-root: 16 !default; // for spaces\n\n// Colors\n// Background color\n$pf-global--BackgroundColor--100: $pf-color-white !default;\n$pf-global--BackgroundColor--200: $pf-color-black-200 !default;\n\n// do not use - background colors for exceptions and defining theme\n// light theme\n$pf-global--BackgroundColor--light-100:     $pf-color-white !default;\n$pf-global--BackgroundColor--light-200:     $pf-color-black-100 !default;\n$pf-global--BackgroundColor--light-300:     $pf-color-black-200 !default;\n\n// dark theme\n$pf-global--BackgroundColor--dark-100:      $pf-color-black-900 !default;\n$pf-global--BackgroundColor--dark-200:      $pf-color-black-800 !default;\n$pf-global--BackgroundColor--dark-300:      $pf-color-black-850 !default;\n$pf-global--BackgroundColor--dark-400:      $pf-color-black-700 !default;\n$pf-global--BackgroundColor--dark-transparent-100:  rgba($pf-color-black-1000, .62) !default;\n$pf-global--BackgroundColor--dark-transparent-200:  rgba($pf-color-black-1000, .32) !default;\n\n// Text color\n$pf-global--Color--100: $pf-color-black-900 !default;\n$pf-global--Color--200: $pf-color-black-600 !default;\n$pf-global--Color--300: $pf-color-black-800 !default;\n$pf-global--Color--400: $pf-color-black-500 !default;\n\n// do not use - text colors for exceptions and defining theme\n// light theme\n$pf-global--Color--light-100:      $pf-color-white !default;\n$pf-global--Color--light-200:      $pf-color-black-200 !default;\n$pf-global--Color--light-300:      $pf-color-black-300 !default;\n\n// dark theme\n$pf-global--Color--dark-100:      $pf-color-black-900 !default;\n$pf-global--Color--dark-200:      $pf-color-black-600 !default;\n\n// States color\n// active\n$pf-global--active-color--100:   $pf-color-blue-400 !default;\n$pf-global--active-color--200:   $pf-color-blue-100 !default;\n$pf-global--active-color--300:   $pf-color-blue-300 !default;\n$pf-global--active-color--400:   $pf-color-blue-200 !default;\n\n// disabled\n$pf-global--disabled-color--100: $pf-color-black-600 !default;\n$pf-global--disabled-color--200: $pf-color-black-300 !default;\n$pf-global--disabled-color--300: $pf-color-black-200 !default;\n\n// Theme color\n$pf-global--primary-color--100:         $pf-color-blue-400 !default;\n$pf-global--primary-color--200:         $pf-color-blue-500 !default;\n$pf-global--secondary-color--100:       $pf-color-black-600 !default;\n$pf-global--default-color--100:         $pf-color-cyan-200 !default;\n$pf-global--default-color--200:         $pf-color-cyan-300 !default;\n$pf-global--default-color--300:         $pf-color-cyan-500 !default;\n$pf-global--success-color--100:         $pf-color-green-500 !default;\n$pf-global--success-color--200:         $pf-color-green-600 !default;\n$pf-global--info-color--100:            $pf-color-blue-300 !default;\n$pf-global--info-color--200:            $pf-color-blue-600 !default;\n$pf-global--warning-color--100:         $pf-color-gold-400 !default;\n$pf-global--warning-color--200:         $pf-color-gold-600 !default;\n$pf-global--danger-color--100:          $pf-color-red-100 !default;\n$pf-global--danger-color--200:          $pf-color-red-200 !default;\n$pf-global--danger-color--300:          $pf-color-red-400 !default;\n\n// do not use - theme colors for exceptions and defining theme\n$pf-global--primary-color--light-100:   $pf-color-blue-200 !default;\n$pf-global--primary-color--dark-100:    $pf-color-blue-400 !default;\n\n// Shadows\n// small\n$pf-global--BoxShadow--sm: 0 pf-size-prem(1px) pf-size-prem(2px) 0 rgba($pf-color-black-1000, .12), 0 0 pf-size-prem(2px) 0 rgba($pf-color-black-1000, .06) !default;\n$pf-global--BoxShadow--sm-top: 0 pf-size-prem(-2px) pf-size-prem(4px) pf-size-prem(-1px) rgba($pf-color-black-1000, .16) !default;\n$pf-global--BoxShadow--sm-right: pf-size-prem(2px) 0 pf-size-prem(4px) pf-size-prem(-1px) rgba($pf-color-black-1000, .16) !default;\n$pf-global--BoxShadow--sm-bottom: 0 pf-size-prem(2px) pf-size-prem(4px) pf-size-prem(-1px) rgba($pf-color-black-1000, .16) !default;\n$pf-global--BoxShadow--sm-left: pf-size-prem(-2px) 0 pf-size-prem(4px) pf-size-prem(-1px) rgba($pf-color-black-1000, .16) !default;\n\n// medium\n$pf-global--BoxShadow--md: 0 pf-size-prem(4px) pf-size-prem(8px) pf-size-prem(0) rgba($pf-color-black-1000, .12), 0 0 pf-size-prem(4px) 0 rgba($pf-color-black-1000, .06) !default;\n$pf-global--BoxShadow--md-top: 0 pf-size-prem(-8px) pf-size-prem(8px) pf-size-prem(-6px) rgba($pf-color-black-1000, .18) !default;\n$pf-global--BoxShadow--md-right: pf-size-prem(8px) 0 pf-size-prem(8px) pf-size-prem(-6px) rgba($pf-color-black-1000, .18) !default;\n$pf-global--BoxShadow--md-bottom: 0 pf-size-prem(8px) pf-size-prem(8px) pf-size-prem(-6px) rgba($pf-color-black-1000, .18) !default;\n$pf-global--BoxShadow--md-left: pf-size-prem(-8px) 0 pf-size-prem(8px) pf-size-prem(-6px) rgba($pf-color-black-1000, .18) !default;\n\n// large\n$pf-global--BoxShadow--lg: 0 pf-size-prem(8px) pf-size-prem(16px) 0 rgba($pf-color-black-1000, .16), 0 0 pf-size-prem(6px) 0 rgba($pf-color-black-1000, .08) !default;\n$pf-global--BoxShadow--lg-top: 0 pf-size-prem(-12px) pf-size-prem(12px) pf-size-prem(-8px) rgba($pf-color-black-1000, .18) !default;\n$pf-global--BoxShadow--lg-right: pf-size-prem(12px) 0 pf-size-prem(12px) pf-size-prem(-8px) rgba($pf-color-black-1000, .18) !default;\n$pf-global--BoxShadow--lg-bottom: 0 pf-size-prem(12px) pf-size-prem(12px) pf-size-prem(-8px) rgba($pf-color-black-1000, .18) !default;\n$pf-global--BoxShadow--lg-left: pf-size-prem(-12px) 0 pf-size-prem(12px) pf-size-prem(-8px) rgba($pf-color-black-1000, .18) !default;\n\n// x-large\n$pf-global--BoxShadow--xl: 0 pf-size-prem(16px) pf-size-prem(32px) 0 rgba($pf-color-black-1000, .16), 0 0 pf-size-prem(8px) 0 rgba($pf-color-black-1000, .1) !default;\n$pf-global--BoxShadow--xl-top: 0 pf-size-prem(-16px) pf-size-prem(16px) pf-size-prem(-8px) rgba($pf-color-black-1000, .2) !default;\n$pf-global--BoxShadow--xl-right: pf-size-prem(16px) 0 pf-size-prem(16px) pf-size-prem(-8px) rgba($pf-color-black-1000, .2) !default;\n$pf-global--BoxShadow--xl-bottom: 0 pf-size-prem(16px) pf-size-prem(16px) pf-size-prem(-8px) rgba($pf-color-black-1000, .2) !default;\n$pf-global--BoxShadow--xl-left: pf-size-prem(-16px) 0 pf-size-prem(16px) pf-size-prem(-8px) rgba($pf-color-black-1000, .2) !default;\n\n// inset\n$pf-global--BoxShadow--inset: inset 0 0 pf-size-prem(10) 0 rgba($pf-color-black-1000, .25) !default;\n\n// Fontpath\n$pf-global--font-path: \"./assets/fonts\" !default;\n\n// Iconpath\n$fa-font-path: \"./assets/fonts/webfonts\" !default;\n\n// FontIcon path\n$pf-global--fonticon-path: \"./assets/pficon\" !default;\n\n// Imagepath\n$pf-global--image-path: \"./assets/images\" !default;\n\n// Spacers\n$pf-global--spacer--xs: pf-size-prem(4px) !default;     // Orange\n$pf-global--spacer--sm: pf-size-prem(8px) !default;     // Light green\n$pf-global--spacer--md: pf-size-prem(16px) !default;    // Dark green\n$pf-global--spacer--lg: pf-size-prem(24px) !default;    // Dark Blue\n$pf-global--spacer--xl: pf-size-prem(32px) !default;    // Light Blue\n$pf-global--spacer--2xl: pf-size-prem(48px) !default;   // Light Purple\n$pf-global--spacer--3xl: pf-size-prem(64px) !default;   // Dark Purple\n$pf-global--spacer--4xl: pf-size-prem(80px) !default;   // Dark magenta\n\n// Form spacer - only used in forms\n$pf-global--spacer--form-element: pf-size-prem(6px) !default;\n\n// Gutter\n$pf-global--gutter: $pf-global--spacer--md !default;\n$pf-global--gutter--md: $pf-global--spacer--lg !default;\n\n// Z-Index\n$pf-global--ZIndex--xs: 100;\n$pf-global--ZIndex--sm: 200;\n$pf-global--ZIndex--md: 300;\n$pf-global--ZIndex--lg: 400;\n$pf-global--ZIndex--xl: 500;\n$pf-global--ZIndex--2xl: 600;\n\n// Grid breakpoints\n$pf-global--breakpoint--xs: 0 !default;\n$pf-global--breakpoint--sm: 576px !default;\n$pf-global--breakpoint--md: 768px !default;\n$pf-global--breakpoint--lg: 992px !default;\n$pf-global--breakpoint--xl: 1200px !default;\n$pf-global--breakpoint--2xl: 1450px !default;\n\n// Borders\n$pf-global--BorderWidth--sm:     1px !default;\n$pf-global--BorderWidth--md:     2px !default;\n$pf-global--BorderWidth--lg:     3px !default;\n$pf-global--BorderWidth--xl:     4px !default;\n$pf-global--BorderColor--100:    $pf-color-black-300 !default;\n$pf-global--BorderColor--200:    $pf-color-black-500 !default;\n$pf-global--BorderColor--300:    $pf-color-black-200 !default;\n$pf-global--BorderColor--dark-100:   $pf-color-black-300 !default;\n$pf-global--BorderColor--light-100:  $pf-color-black-400 !default;\n$pf-global--BorderRadius--sm:        3px !default;\n$pf-global--BorderRadius--lg:        30em !default; // This is a sufficiently large number to ensure in most cases that the ends are evenly rounded.\n\n// Icons\n$pf-global--icon--Color--light: $pf-color-black-600 !default;\n$pf-global--icon--Color--dark: $pf-color-black-900 !default;\n$pf-global--icon--FontSize--sm: pf-font-prem(10px) !default;\n$pf-global--icon--FontSize--md: pf-font-prem(18px) !default;\n$pf-global--icon--FontSize--lg: pf-font-prem(24px) !default;\n$pf-global--icon--FontSize--xl: pf-font-prem(54px) !default;\n\n// Fonts\n// Font family\n// stylelint-disable value-keyword-case\n$pf-global--FontFamily--sans-serif: '\"RedHatText\", \"Overpass\", overpass, helvetica, arial, sans-serif';\n$pf-global--FontFamily--heading--sans-serif: '\"RedHatDisplay\", \"Overpass\", overpass, helvetica, arial, sans-serif';\n$pf-global--FontFamily--monospace: '\"Liberation Mono\", consolas, \"SFMono-Regular\", menlo, monaco, \"Courier New\", monospace';\n$pf-global--FontFamily--redhat-updated--sans-serif: '\"RedHatTextUpdated\", \"Overpass\", overpass, helvetica, arial, sans-serif';\n$pf-global--FontFamily--redhat-updated--heading--sans-serif: '\"RedHatDisplayUpdated\", \"Overpass\", overpass, helvetica, arial, sans-serif';\n$pf-global--FontFamily--redhat--monospace: '\"RedHatMono\", \"Liberation Mono\", consolas, \"SFMono-Regular\", menlo, monaco, \"Courier New\", monospace';\n$pf-global--FontFamily--redhatVF--sans-serif: '\"RedHatTextVF\", \"RedHatText\", \"Overpass\", overpass, helvetica, arial, sans-serif';\n$pf-global--FontFamily--redhatVF--heading--sans-serif: '\"RedHatDisplayVF\", \"RedHatDisplay\", \"Overpass\", overpass, helvetica, arial, sans-serif';\n$pf-global--FontFamily--redhatVF--monospace: '\"RedHatMonoVF\", \"RedHatMono\", \"Liberation Mono\", consolas, \"SFMono-Regular\", menlo, monaco, \"Courier New\", monospace';\n$pf-global--FontFamily--overpass--sans-serif: '\"overpass\", overpass, \"open sans\", -apple-system, blinkmacsystemfont, \"Segoe UI\", roboto, \"Helvetica Neue\", arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"' !default;\n$pf-global--FontFamily--overpass--monospace: '\"overpass-mono\", overpass-mono, \"SFMono-Regular\", menlo, monaco, consolas, \"Liberation Mono\", \"Courier New\", monospace' !default;\n// stylelint-enable value-keyword-case\n\n// Font size\n$pf-global--FontSize--4xl: pf-font-prem(36px) !default;\n$pf-global--FontSize--3xl: pf-font-prem(28px) !default;\n$pf-global--FontSize--2xl: pf-font-prem(24px) !default;\n$pf-global--FontSize--xl: pf-font-prem(20px) !default;\n$pf-global--FontSize--lg: pf-font-prem(18px) !default;\n$pf-global--FontSize--md: pf-font-prem(16px) !default;\n$pf-global--FontSize--sm: pf-font-prem(14px) !default;\n$pf-global--FontSize--xs: pf-font-prem(12px) !default;\n\n// Font weight\n$pf-global--FontWeight--light: 300 !default;\n$pf-global--FontWeight--normal: 400 !default;\n$pf-global--FontWeight--bold: 700 !default;\n$pf-global--FontWeight--semi-bold: $pf-global--FontWeight--bold !default; // Just for legacy support while supporting Overpass\n$pf-global--FontWeight--overpass--semi-bold: 500 !default;\n$pf-global--FontWeight--overpass--bold: 600 !default;\n\n// Line height\n$pf-global--LineHeight--sm: 1.3 !default;\n$pf-global--LineHeight--md: 1.5 !default;\n\n// Links\n$pf-global--link--Color:                  $pf-global--primary-color--100 !default;\n$pf-global--link--Color--hover:           $pf-global--primary-color--200 !default;\n$pf-global--link--Color--light:           $pf-global--active-color--300 !default;\n$pf-global--link--Color--light--hover:    $pf-global--active-color--400 !default;\n$pf-global--link--Color--dark:            $pf-global--primary-color--100 !default;\n$pf-global--link--Color--dark--hover:     $pf-global--primary-color--200 !default;\n$pf-global--link--Color--visited:         $pf-color-purple-600 !default;\n$pf-global--link--TextDecoration:         none !default;\n$pf-global--link--TextDecoration--hover:  underline !default;\n\n// List\n$pf-global--ListStyle: disc outside !default;\n\n// Transitions\n$pf-global--Transition: all 250ms cubic-bezier(.42, 0, .58, 1);\n$pf-global--TimingFunction: cubic-bezier(.645, .045, .355, 1);\n$pf-global--TransitionDuration: 250ms;\n\n// Arrow size (used for tooltips, popovers, etc.)\n$pf-global--arrow--width: pf-font-prem(15px);\n$pf-global--arrow--width-lg: pf-font-prem(25px);\n\n// A11y\n$pf-global--target-size--MinWidth: 44px !default;\n$pf-global--target-size--MinHeight: 44px !default;\n\n// filters\n// overlay\n// animations\n\n// Global breakpoint map - used for @pf-grid-item-modifiers\n$pf-global--breakpoint-map: (\n  \"\": null,\n  \"sm\": \"-on-sm\",\n  \"md\": \"-on-md\",\n  \"lg\": \"-on-lg\",\n  \"xl\": \"-on-xl\",\n  \"2xl\": \"-on-2xl\"\n);\n\n// Global breakpoint list - used for @pf-utility-builder\n$pf-global--breakpoint-list: (\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n);\n\n// Global breakpoint name map - used for %pf-hidden-visible\n$pf-global--breakpoint-name-map: (\n  \"sm\": $pf-global--breakpoint--sm,\n  \"md\": $pf-global--breakpoint--md,\n  \"lg\": $pf-global--breakpoint--lg,\n  \"xl\": $pf-global--breakpoint--xl,\n  \"2xl\": $pf-global--breakpoint--2xl\n);\n\n// Spacer properties\n$pf-global--spacer-properties-map: (\n  \"m\":  \"margin\",\n  \"mt\": \"margin-top\",\n  \"mr\": \"margin-right\",\n  \"mb\": \"margin-bottom\",\n  \"ml\": \"margin-left\",\n  \"mx\": null,\n  \"my\": null,\n  \"p\":  \"padding\",\n  \"pt\": \"padding-top\",\n  \"pr\": \"padding-right\",\n  \"pb\": \"padding-bottom\",\n  \"pl\": \"padding-left\",\n  \"px\": null,\n  \"py\": null\n);\n\n// Spacer values\n$pf-global--spacer-map: (\n  \"auto\": \"auto\",\n  \"0\": 0,\n  \"xs\": \"var(--pf-global--spacer--xs)\",\n  \"sm\": \"var(--pf-global--spacer--sm)\",\n  \"md\": \"var(--pf-global--spacer--md)\",\n  \"lg\": \"var(--pf-global--spacer--lg)\",\n  \"xl\": \"var(--pf-global--spacer--xl)\",\n  \"2xl\": \"var(--pf-global--spacer--2xl)\",\n  \"3xl\": \"var(--pf-global--spacer--3xl)\",\n  \"4xl\": \"var(--pf-global--spacer--4xl)\"\n);\n","// Colors\n$pf-color-black-100:             #fafafa !default;\n$pf-color-black-150:             #f5f5f5 !default;\n$pf-color-black-200:             #f0f0f0 !default;\n$pf-color-black-300:             #d2d2d2 !default;\n$pf-color-black-400:             #b8bbbe !default;\n$pf-color-black-500:             #8a8d90 !default;\n$pf-color-black-600:             #6a6e73 !default;\n$pf-color-black-700:             #4f5255 !default;\n$pf-color-black-800:             #3c3f42 !default;\n$pf-color-black-850:             #212427 !default;\n$pf-color-black-900:             #151515 !default;\n$pf-color-black-1000:            #030303 !default;\n$pf-color-blue-50:               #e7f1fa !default;\n$pf-color-blue-100:              #bee1f4 !default;\n$pf-color-blue-200:              #73bcf7 !default;\n$pf-color-blue-300:              #2b9af3 !default;\n$pf-color-blue-400:              #06c !default;\n$pf-color-blue-500:              #004080 !default;\n$pf-color-blue-600:              #002952 !default;\n$pf-color-blue-700:              #001223 !default;\n$pf-color-cyan-50:               #f2f9f9 !default;\n$pf-color-cyan-100:              #a2d9d9 !default;\n$pf-color-cyan-200:              #73c5c5 !default;\n$pf-color-cyan-300:              #009596 !default;\n$pf-color-cyan-400:              #005f60 !default;\n$pf-color-cyan-500:              #003737 !default;\n$pf-color-cyan-600:              #002323 !default;\n$pf-color-cyan-700:              #000f0f !default;\n$pf-color-gold-50:               #fdf7e7 !default;\n$pf-color-gold-100:              #f9e0a2 !default;\n$pf-color-gold-200:              #f6d173 !default;\n$pf-color-gold-300:              #f4c145 !default;\n$pf-color-gold-400:              #f0ab00 !default;\n$pf-color-gold-500:              #c58c00 !default;\n$pf-color-gold-600:              #795600 !default;\n$pf-color-gold-700:              #3d2c00 !default;\n$pf-color-green-50:              #f3faf2 !default;\n$pf-color-green-100:             #bde5b8 !default;\n$pf-color-green-200:             #95d58e !default;\n$pf-color-green-300:             #6ec664 !default;\n$pf-color-green-400:             #5ba352 !default;\n$pf-color-green-500:             #3e8635 !default;\n$pf-color-green-600:             #1e4f18 !default;\n$pf-color-green-700:             #0f280d !default;\n$pf-color-light-blue-100:        #beedf9 !default;\n$pf-color-light-blue-200:        #7cdbf3 !default;\n$pf-color-light-blue-300:        #35caed !default;\n$pf-color-light-blue-400:        #00b9e4 !default;\n$pf-color-light-blue-500:        #008bad !default;\n$pf-color-light-blue-600:        #005c73 !default;\n$pf-color-light-blue-700:        #002d39 !default;\n$pf-color-light-green-100:       #e4f5bc !default;\n$pf-color-light-green-200:       #c8eb79 !default;\n$pf-color-light-green-300:       #ace12e !default;\n$pf-color-light-green-400:       #92d400 !default;\n$pf-color-light-green-500:       #6ca100 !default;\n$pf-color-light-green-600:       #486b00 !default;\n$pf-color-light-green-700:       #253600 !default;\n$pf-color-orange-100:            #f4b678 !default;\n$pf-color-orange-200:            #ef9234 !default;\n$pf-color-orange-300:            #ec7a08 !default;\n$pf-color-orange-400:            #c46100 !default;\n$pf-color-orange-500:            #8f4700 !default;\n$pf-color-orange-600:            #773d00 !default;\n$pf-color-orange-700:            #3b1f00 !default;\n$pf-color-purple-50:             #f2f0fc !default;\n$pf-color-purple-100:            #cbc1ff !default;\n$pf-color-purple-200:            #b2a3ff !default;\n$pf-color-purple-300:            #a18fff !default;\n$pf-color-purple-400:            #8476d1 !default;\n$pf-color-purple-500:            #6753ac !default;\n$pf-color-purple-600:            #40199a !default;\n$pf-color-purple-700:            #1f0066 !default;\n$pf-color-red-50:                #faeae8 !default;\n$pf-color-red-100:               #c9190b !default;\n$pf-color-red-200:               #a30000 !default;\n$pf-color-red-300:               #7d1007 !default;\n$pf-color-red-400:               #470000 !default;\n$pf-color-red-500:               #2c0000 !default;\n$pf-color-white:                 #fff !default;\n"],"sourceRoot":"../src"}