{"version":3,"sources":["pfe-progress-steps-item.scss","pfe-progress-steps-item.css","../../pfe-sass/functions/_custom-properties.scss"],"names":[],"mappings":"AAuBA;EACE,cAAc;EACd,oBAAa;EAAb,qBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,4BAAsB;EAAtB,6BAAsB;EAAtB,8BAAsB;MAAtB,0BAAsB;UAAtB,sBAAsB;EACtB,wBAAuB;EAAvB,+BAAuB;MAAvB,qBAAuB;UAAvB,uBAAuB;EACvB,yBAAmB;EAAnB,2BAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;ACtBrB;;ADyBA;EACE,8BAAmB;EAAnB,6BAAmB;EAAnB,2BAAmB;MAAnB,uBAAmB;UAAnB,mBAAmB;EACnB,wBAAuB;EAAvB,+BAAuB;MAAvB,qBAAuB;UAAvB,uBAAuB;ACtBzB;;AD8BA;EACE,WEqCkC;EFrClC,kDEqCkC;EFpClC,kBAAkB;AC3BpB;;AD6BA;EACE,gBEiCkC;EFjClC,uDEiCkC;AD3DpC;;AD8BA;EACE,aAAa;AC3Bf;;AD8BA;EACE,eAAe;AC3BjB;;AD+BA;EACE,kBAAkB;AC5BpB;;ADgCE;EACE,8BAAsB;UAAtB,sBAAsB;EAEtB,kBAAkB;EAClB,kBAAkB;EAClB,yBEhCgC;EFgChC,mJEhCgC;EFiChC,WESgC;EFThC,8FESgC;EFRhC,YEQgC;EFRhC,+FEQgC;EFPhC,UAAU;EAEV,sBEKgC;EFLhC,iHEKgC;EFHhC,YAAY;EACZ,oCAA0G;EAA1G,sNAA0G;EAC1G,kCAAuD;UAAvD,0BAAuD;EAAvD,0EAAuD;UAAvD,kEAAuD;AChC3D;;ADkCI;EACE,oBAAoB;EACpB,kBAAkB;EAClB,4BAAmE;EAAnE,2HAAmE;EACnE,kBE/C8B;EF+C9B,kDE/C8B;EFgD9B,gBAAgB;EAEhB,kBAAkB;EAClB,UAAU;EACV,WAAW;EACX,WAAW;EACX,YAAY;AChClB;;ADmCI;EACE,kBEhB8B;EFgB9B,6GEhB8B;EFiB9B,sBEjB8B;EFiB9B,iHEjB8B;EFkB9B,WE5D8B;EF4D9B,wDE5D8B;AD4BpC;;ADDG;EAqCG,aAAa;EAEb,kBAAkB;EAClB,WAAW;EACX,kBAAkB;EAElB,wCAAgC;UAAhC,gCAAgC;EAChC,cEvE8B;EFuE9B,oDEvE8B;EFwE9B,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,UAAU;EAEV,WEnC8B;EFmC9B,0GEnC8B;EFoC9B,YEpC8B;EFoC9B,2GEpC8B;ADCpC;;ADqCM;EACE,cAAc;EACd,sBExC4B;EFwC5B,iHExC4B;EFyC5B,aEnF4B;EFmF5B,wCEnF4B;ADiDpC;;ADtBG;EA6DG,UAAU;EACV,YE/C8B;EF+C9B,+FE/C8B;EFgD9B,WEhD8B;EFgD9B,8FEhD8B;EFkD9B,kBAAkB;EAClB,wCAAgC;UAAhC,gCAAgC;EAChC,QAAQ;EACR,SAAS;EAET,uBAAuB;ACrC7B;;ADuCM;EACE,aEpG4B;EFoG5B,yDEpG4B;ADgEpC;;ADuCM;EACE,aExG4B;EFwG5B,2DExG4B;ADoEpC;;ADwCE;EACE,oBAAa;EAAb,qBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,4BAAsB;EAAtB,6BAAsB;EAAtB,8BAAsB;MAAtB,0BAAsB;UAAtB,sBAAsB;EACtB,yBAAmB;EAAnB,2BAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;EACnB,wBAAuB;EAAvB,+BAAuB;MAAvB,qBAAuB;UAAvB,uBAAuB;EAEvB,kBExEgC;EFwEhC,sGExEgC;ADkCpC;;ADwCI;EACE,wBAAuB;EAAvB,+BAAuB;MAAvB,qBAAuB;UAAvB,uBAAuB;EACvB,mCAAyG;EAAzG,qNAAyG;EACzG,+CAAmI;EAAnI,qTAAmI;ACrCzI;;ADuCI;;EAEE,eE3H8B;EF2H9B,+CE3H8B;EF4H9B,cElF8B;EFkF9B,2FElF8B;AD8CpC;;ADsCM;;EACE,cAAc;AClCtB;;ADsCQ;;EACE,cE1F0B;EF0F1B,iGE1F0B;EF2F1B,0BEnEiH;EFmEjH,kFEnEiH;UFmEjH,0EEnEiH;ADiC3H;;ADgCQ;;EACE,cE1F0B;EF0F1B,iGE1F0B;EF2F1B,0BEnEiH;EFmEjH,kFEnEiH;UFmEjH,0EEnEiH;ADuC3H;;AD0BQ;;EACE,cE1F0B;EF0F1B,mGE1F0B;EF2F1B,qBEnEiH;EFmEjH,+EEnEiH;UFmEjH,uEEnEiH;AD6C3H;;AD0BM;;EAEE,WEjG4B;EFiG5B,0GEjG4B;EFkG5B,gBE5I4B;EF4I5B,uDE5I4B;ADqHpC;;AD0BM;;EACE,cEtG4B;EFsG5B,yHEtG4B;ADgFpC;;ADyBI;EACE,cE1G8B;EF0G9B,wGE1G8B;EF2G9B,mBErJ8B;EFqJ9B,mDErJ8B;EFwJ9B,kBAAkB;ACxBxB;;AD0BM;EACE,cEjH4B;EFiH5B,yHEjH4B;AD0FpC","file":"pfe-progress-steps-item.css","sourcesContent":["@import \"_shared-assets\";\n\n$LOCAL: progress-steps-item;\n\n$LOCAL-VARIABLES: map-deep-merge($LOCAL-VARIABLES, (\n  // Width needs to be definitively set to ensure the line is calculated properly.\n  Width: auto,\n  circle: (\n    color: pfe-var(surface--lightest),\n    color--active: pfe-var(ui-accent)\n  ),\n  title: (\n    Color: pfe-var(text), // was #151515\n    Color--active: pfe-var(feedback--info),\n    Color--error: pfe-var(feedback--critical--lighter)\n  ),\n  description: (\n    Color: pfe-var(text--muted),\n    Color--active: pfe-var(text--muted),\n    Color--error: pfe-var(feedback--critical--lighter)\n  )\n));\n\n:host {\n  display: block;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n:host([vertical]) {\n  flex-direction: row;\n  align-items: flex-start;\n}\n\n// This is important so the .pfe-progress-steps\n// can dynamically set the width of the items in horizontal\n// layout. If this isn't set then the items are unable\n// to line up correctly.\n$LOCAL: progress-steps;\n:host(:not([vertical])) {\n  width: pfe-local(size, $region: item);\n  text-align: center;\n}\n:host([vertical]:not(:last-child)) {\n  min-height: pfe-local(size, $region: item);\n}\n$LOCAL: progress-steps-item;\n\n:host([hidden]) {\n  display: none;\n}\n\n:host([is_link]) {\n  cursor: pointer;\n}\n\n// This negates the 1em for the vertical description on the height of the bar\n:host([vertical]:not([has_description]):last-child) {\n  margin-bottom: 1em;\n}\n\n.pfe-progress-steps-item {\n  &__circle {\n    box-sizing: border-box;\n\n    position: relative;\n    border-radius: 50%;\n    border: pfe-var(ui--border-width--md) pfe-var(ui--border-style) pfe-var(ui--border--lighter);\n    width: pfe-local(size, $region: circle); // 20px\n    height: pfe-local(size, $region: circle);\n    z-index: 2;\n\n    background-color: pfe-local(color, $region: circle);\n\n    margin: auto;\n    margin: calc((#{pfe-local(size--active, $region: circle)} - #{pfe-local(size, $region: circle)}) / 2) auto; // top/bottom: (32px - 20px) / 2\n    transform: translateX(#{pfe-var(ui--border-width--md)});\n\n    :host([variant=\"count\"]) &::before {\n      content: attr(count);\n      text-align: center;\n      line-height: calc(#{pfe-local(size--active, $region: circle)} * .8);\n      font-size: pfe-var(FontSize--xs);\n      font-weight: 600;\n      \n      position: absolute;\n      top: -.2em;\n      left: -.2em;\n      width: 20px;\n      height: 20px;\n    }\n\n    :host([state=\"active\"]) & {\n      border-color: pfe-local(color--active, $region: circle);\n      background-color: pfe-local(color--active, $region: circle);\n      color: pfe-var(text--on-saturated);\n    }\n\n    &::after {\n      display: none;\n\n      position: absolute;\n      content: \"\";\n      border-radius: 50%;\n      \n      transform: translate(-50%, -50%);\n      color: pfe-var(text--muted);\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      z-index: 1;\n\n      width:  pfe-local(size--active, $region: circle); // 32px\n      height: pfe-local(size--active, $region: circle);\n\n      :host([state=\"active\"]) & {\n        display: block;\n        background-color: pfe-local(color--active, $region: circle);\n        opacity: pfe-var(opacity); // was 0.15\n      }\n    }\n      \n    svg {\n      z-index: 1;\n      height: pfe-local(size, $region: circle);\n      width:  pfe-local(size, $region: circle);\n        \n      position: absolute;\n      transform: translate(-50%, -50%);\n      top: 50%;\n      left: 50%;\n\n      vertical-align: -.125em;\n\n      :host([state=\"done\"]) & {\n        fill: pfe-var(feedback--success);\n      }\n\n      :host([state=\"error\"]) & {\n        fill: pfe-var(feedback--important);\n      }\n    }\n  }\n  &__content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    margin-top: pfe-local(spacer);\n    \n    :host([vertical]) & {\n      align-items: flex-start;\n      margin-top: calc((#{pfe-local(size--active, $region: circle)} - #{pfe-local(size, $region: circle)}) / 2); // (32px - 20px) / 2\n      margin-left: calc(((#{pfe-local(size--active, $region: circle)} - #{pfe-local(size, $region: circle)}) / 2) + #{pfe-local(spacer)});\n    }\n    &--title,\n    &--title slot::slotted(*) {\n      font-size: pfe-var(FontSize--md);\n      color: pfe-local(Color, $region: title); // was #151515\n\n      :host([is_link]) & {\n        color: inherit;\n      }\n\n      @each $state in (hover, focus, visited) {\n        :host([is_link]:#{$state}) & {\n          color: pfe-local(Color, $region: title, $fallback: pfe-broadcasted(link--#{$state}));\n          text-decoration: pfe-broadcasted(link-decoration--#{$state});\n        }\n      }\n\n      :host([state=\"active\"]) & {\n        // leave with no fallback so it inherits correctly\n        color: pfe-local(Color--active, $region: title);\n        font-weight: pfe-var(font-weight--normal);\n      }\n\n      :host([state=\"error\"]) & {\n        color: pfe-local(Color--error, $region: title);\n      }\n    }\n    &--description {\n      color: pfe-local(Color, $region: description);\n      font-size: pfe-var(FontSize--sm);\n      // @TODO Use the new typography mixin\n      // @include pfe-typography(sm, $type: \"title\", $base: false, $region: title);\n      text-align: center;\n\n      :host([state=\"error\"]) & {\n        color: pfe-local(Color--error, $region: title);\n      }\n    }\n  }\n}\n",":host {\n  display: block;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n:host([vertical]) {\n  flex-direction: row;\n  align-items: flex-start;\n}\n\n:host(:not([vertical])) {\n  width: var(--pfe-progress-steps__item--size, 75px);\n  text-align: center;\n}\n\n:host([vertical]:not(:last-child)) {\n  min-height: var(--pfe-progress-steps__item--size, 75px);\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host([is_link]) {\n  cursor: pointer;\n}\n\n:host([vertical]:not([has_description]):last-child) {\n  margin-bottom: 1em;\n}\n\n.pfe-progress-steps-item__circle {\n  box-sizing: border-box;\n  position: relative;\n  border-radius: 50%;\n  border: var(--pfe-theme--ui--border-width--md, 2px) var(--pfe-theme--ui--border-style, solid) var(--pfe-theme--color--ui--border--lighter, #d2d2d2);\n  width: var(--pfe-progress-steps-item__circle--size, var(--pfe-theme--ui--element--size, 20px));\n  height: var(--pfe-progress-steps-item__circle--size, var(--pfe-theme--ui--element--size, 20px));\n  z-index: 2;\n  background-color: var(--pfe-progress-steps-item__circle--color, var(--pfe-theme--color--surface--lightest, #fff));\n  margin: auto;\n  margin: calc((var(--pfe-progress-steps-item__circle--size--active, var(--pfe-theme--ui--element--size--md, 32px)) - var(--pfe-progress-steps-item__circle--size, var(--pfe-theme--ui--element--size, 20px))) / 2) auto;\n  transform: translateX(var(--pfe-theme--ui--border-width--md, 2px));\n}\n\n:host([variant=\"count\"]) .pfe-progress-steps-item__circle::before {\n  content: attr(count);\n  text-align: center;\n  line-height: calc(var(--pfe-progress-steps-item__circle--size--active, var(--pfe-theme--ui--element--size--md, 32px)) * .8);\n  font-size: var(--pf-global--FontSize--xs, 0.75rem);\n  font-weight: 600;\n  position: absolute;\n  top: -.2em;\n  left: -.2em;\n  width: 20px;\n  height: 20px;\n}\n\n:host([state=\"active\"]) .pfe-progress-steps-item__circle {\n  border-color: var(--pfe-progress-steps-item__circle--color--active, var(--pfe-theme--color--ui-accent, #06c));\n  background-color: var(--pfe-progress-steps-item__circle--color--active, var(--pfe-theme--color--ui-accent, #06c));\n  color: var(--pfe-theme--color--text--on-saturated, #fff);\n}\n\n.pfe-progress-steps-item__circle::after {\n  display: none;\n  position: absolute;\n  content: \"\";\n  border-radius: 50%;\n  transform: translate(-50%, -50%);\n  color: var(--pfe-theme--color--text--muted, #6a6e73);\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1;\n  width: var(--pfe-progress-steps-item__circle--size--active, var(--pfe-theme--ui--element--size--md, 32px));\n  height: var(--pfe-progress-steps-item__circle--size--active, var(--pfe-theme--ui--element--size--md, 32px));\n}\n\n:host([state=\"active\"]) .pfe-progress-steps-item__circle::after {\n  display: block;\n  background-color: var(--pfe-progress-steps-item__circle--color--active, var(--pfe-theme--color--ui-accent, #06c));\n  opacity: var(--pfe-theme--opacity, 0.09);\n}\n\n.pfe-progress-steps-item__circle svg {\n  z-index: 1;\n  height: var(--pfe-progress-steps-item__circle--size, var(--pfe-theme--ui--element--size, 20px));\n  width: var(--pfe-progress-steps-item__circle--size, var(--pfe-theme--ui--element--size, 20px));\n  position: absolute;\n  transform: translate(-50%, -50%);\n  top: 50%;\n  left: 50%;\n  vertical-align: -.125em;\n}\n\n:host([state=\"done\"]) .pfe-progress-steps-item__circle svg {\n  fill: var(--pfe-theme--color--feedback--success, #3e8635);\n}\n\n:host([state=\"error\"]) .pfe-progress-steps-item__circle svg {\n  fill: var(--pfe-theme--color--feedback--important, #c9190b);\n}\n\n.pfe-progress-steps-item__content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: var(--pfe-progress-steps-item--spacer, var(--pfe-theme--content-spacer--body--sm, 0.5rem));\n}\n\n:host([vertical]) .pfe-progress-steps-item__content {\n  align-items: flex-start;\n  margin-top: calc((var(--pfe-progress-steps-item__circle--size--active, var(--pfe-theme--ui--element--size--md, 32px)) - var(--pfe-progress-steps-item__circle--size, var(--pfe-theme--ui--element--size, 20px))) / 2);\n  margin-left: calc(((var(--pfe-progress-steps-item__circle--size--active, var(--pfe-theme--ui--element--size--md, 32px)) - var(--pfe-progress-steps-item__circle--size, var(--pfe-theme--ui--element--size, 20px))) / 2) + var(--pfe-progress-steps-item--spacer, var(--pfe-theme--content-spacer--body--sm, 0.5rem)));\n}\n\n.pfe-progress-steps-item__content--title,\n.pfe-progress-steps-item__content--title slot::slotted(*) {\n  font-size: var(--pf-global--FontSize--md, 1rem);\n  color: var(--pfe-progress-steps-item__title--Color, var(--pfe-theme--color--text, #151515));\n}\n\n:host([is_link]) .pfe-progress-steps-item__content--title, :host([is_link])\n.pfe-progress-steps-item__content--title slot::slotted(*) {\n  color: inherit;\n}\n\n:host([is_link]:hover) .pfe-progress-steps-item__content--title, :host([is_link]:hover)\n.pfe-progress-steps-item__content--title slot::slotted(*) {\n  color: var(--pfe-progress-steps-item__title--Color, var(--pfe-broadcasted--link--hover, #004080));\n  text-decoration: var(--pfe-broadcasted--link-decoration--hover, underline);\n}\n\n:host([is_link]:focus) .pfe-progress-steps-item__content--title, :host([is_link]:focus)\n.pfe-progress-steps-item__content--title slot::slotted(*) {\n  color: var(--pfe-progress-steps-item__title--Color, var(--pfe-broadcasted--link--focus, #004080));\n  text-decoration: var(--pfe-broadcasted--link-decoration--focus, underline);\n}\n\n:host([is_link]:visited) .pfe-progress-steps-item__content--title, :host([is_link]:visited)\n.pfe-progress-steps-item__content--title slot::slotted(*) {\n  color: var(--pfe-progress-steps-item__title--Color, var(--pfe-broadcasted--link--visited, #6753ac));\n  text-decoration: var(--pfe-broadcasted--link-decoration--visited, none);\n}\n\n:host([state=\"active\"]) .pfe-progress-steps-item__content--title, :host([state=\"active\"])\n.pfe-progress-steps-item__content--title slot::slotted(*) {\n  color: var(--pfe-progress-steps-item__title--Color--active, var(--pfe-theme--color--feedback--info, #06c));\n  font-weight: var(--pfe-theme--font-weight--normal, 400);\n}\n\n:host([state=\"error\"]) .pfe-progress-steps-item__content--title, :host([state=\"error\"])\n.pfe-progress-steps-item__content--title slot::slotted(*) {\n  color: var(--pfe-progress-steps-item__title--Color--error, var(--pfe-theme--color--feedback--critical--lighter, #c9190b));\n}\n\n.pfe-progress-steps-item__content--description {\n  color: var(--pfe-progress-steps-item__description--Color, var(--pfe-theme--color--text--muted, #6a6e73));\n  font-size: var(--pf-global--FontSize--sm, 0.875rem);\n  text-align: center;\n}\n\n:host([state=\"error\"]) .pfe-progress-steps-item__content--description {\n  color: var(--pfe-progress-steps-item__title--Color--error, var(--pfe-theme--color--feedback--critical--lighter, #c9190b));\n}\n","////\n/// Tools for leveraging custom property stacks\n/// @group custom-properties\n/// @author castastrophe\n////\n\n/// Get full theme stack with a fallback from the provided map - used by pfe-var and pfe-zindex\n/// @param {String} $category  - Category name to be appended to variables within the map/system\n/// @param {String} $key - Variable name to be used and prepended with --pfe-theme\n/// @param {Map} $map  - Sass map of variables\n/// @param {String} $fallback [null]  - Optional fallback override\n/// @param {Boolean} $use-fallback [true]  - Optional hook to return a stack with no fallback value\n/// @requires $custom-prop-prefix\n/// @return {String} theme stack with fallback value from a sass map\n@function pfe-get-from-map($category, $key, $map, $fallback: null, $prefix: \"#{$custom-prop-prefix}-theme\", $use-fallback: true) {\n    // Start building the variable declaration\n    $var-declaration: \"--#{$prefix}--\";\n    @if $prefix == \"pf-c\" {\n        $var-declaration: \"--#{$prefix}-\";  // one dash at the end\n    }\n    // If the category exists, inject that into the string\n    @if $category != \"\" {\n        $var-declaration: \"#{$var-declaration}#{$category}--\";\n    }\n    // Append the key to the string\n    $var-declaration: \"#{$var-declaration}#{$key}\";\n\n    // If the fallback is not provided but use-fallback is set to true\n    @if $fallback == null and $use-fallback and map-get($map, $key) != null {\n        $fallback: map-get($map, $key);\n    }\n    @if $fallback != null {\n        // Create the variable declaration\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});   \n}\n\n\n\n/// Returns CSS Var for the local component-scoped variable\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $custom-prop-prefix\n/// @see $LOCAL\n/// @example\n///   :host {\n///       padding-top:      #{pfe-local(paddingTop)};\n///       padding-bottom:   #{pfe-local(paddingBottom)};\n///   }\n@function pfe-local($cssvar, $fallback: null, $region: null) {\n    // If a fallback is not defined, use the global variables map\n    @if $fallback == null and length($LOCAL-VARIABLES) > 0 {\n        @if $region == null {\n            $fallback: map-get($LOCAL-VARIABLES, $cssvar);\n        }\n        @else {\n            $submap: map-get($LOCAL-VARIABLES, $region);\n            @if type-of($submap) == \"map\" {\n                $fallback: map-deep-get($LOCAL-VARIABLES, $region, $cssvar);\n            }\n        }\n    }\n\n    // If a region value exists, build the region string\n    @if $region != null {\n        $region: \"__#{$region}\";\n    }\n\n    // Start building the variable declaration\n    $var-declaration: \"--#{$custom-prop-prefix}-#{$LOCAL}#{$region}--#{to-string($cssvar, '--')}\";\n    \n    @if $fallback != null {\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});\n}\n\n/// Fetches a CSS variable stack for broadcasted variables, providing a hook for context\n/// to influence the styles of children elements such as p tags or links.\n/// @param {String} $broadcast - name of the broadcast variable to apply\n/// @requires {String} $custom-prop-prefix - Name of repo, which is \"pfe\"\n/// @example - scss\n///   :host {\n///     color: pfe-broadcasted(link);\n///   }\n/// @example - css\n///   :host {\n///     color: var(--pfe-broadcasted--link, #06c);\n///   }\n@function pfe-broadcasted($broadcast, $use-fallback: true) {\n    $fallback: \"\";\n    @if $use-fallback {\n        $fallback: \", #{map-get($pfe-broadcasted, #{to-string($broadcast,'--')})}\";\t\n    }\n    @if not index($BROADCAST-VARS, first(str-split($broadcast, '--'))) {\n      @error \"--#{$custom-prop-prefix}-broadcasted--#{$broadcast} variable is not currently supported.\";\n    }\n    @else {\n      @return var(--#{$custom-prop-prefix}-broadcasted--#{to-string($broadcast,'--')}#{unquote($fallback)});\n    }\n}\n\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme--zindex\n/// @requires {Map} $pfe-zindex - SASS Map of z-index values\n/// @see $pfe-zindex\n/// @example - scss - In your component styles\n///   .my-element {\n///     z-index: pfe-zindex( content );\n///   }\n\n@function pfe-zindex($cssvar) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-zindex, $var-name) != null {\n        @return pfe-get-from-map(\"zindex\", $var-name, $pfe-zindex);\n    }\n    @else {\n        @error \"The key for #{$var-name} could not be found in the $pfe-zindex map.\";\n    }\n}\n\n/// Returns the value (only) of a property from the respective maps\n/// Similar to pfe-var, but does not include css variable in the compiled CSS\n/// @param {String} $name - Name of the key for the map\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $pfe-vars\n/// @see $pfe-colors\n/// @see $pfe-broadcasted\n/// @example - scss - In your component styles\n///   .my-element {\n///     background-color: pfe-fetch( ui-base );\n///   }\n@function pfe-fetch($name, $region: null) {\n    $var-name: to-string($name, \"--\");\n    @if $region != null and map-deep-get($LOCAL-VARIABLES, $region, $var-name) != null {\n        @return map-deep-get($LOCAL-VARIABLES, $region, $var-name);\n    }\n    @else if $region == null and map-get($LOCAL-VARIABLES, $var-name) != null {\n        @return map-get($LOCAL-VARIABLES, $var-name);\n    }\n    @else if map-get($pfe-vars, $var-name) != null {\n        @return map-get($pfe-vars, $var-name);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return map-get($pfe-colors, $var-name);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return map-get($pfe-broadcasted, $var-name);\n    }\n    @else if map-get($pfe-typography-base, $var-name) != null {\n        @return map-get($pfe-typography-base, $var-name);\n    }\n\n    // PATTERNFLY CORE\n    @else if map-get($pf-type-sizing, $var-name) != null {\n        @return map-get($pf-type-sizing, $var-name);\n    }\n    @else if map-get($pf-type-sizing--component, $var-name) != null {\n        @return map-get($pf-type-sizing--component, $var-name);\n    }\n    @else if map-get($pf-type-sizing--modifers, $var-name) != null {\n        @return map-get($pf-type-sizing--modifers, $var-name);\n    }\n    @else if map-get($pf-type-sizing--content, $var-name) != null {\n        @return map-get($pf-type-sizing--content, $var-name);\n    }\n    // DEPRECATED\n    @else if map-get($pfe-typography-base-deprecated, $var-name) != null {\n        @return map-get($pfe-typography-base-deprecated, $var-name);\n    }\n    @else if map-get($pfe-typography-deprecated, $var-name) != null {\n        @return map-get($pfe-typography-deprecated, $var-name);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}\n\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme\n/// @param {String} $fallback [null] - Optional custom fallback\n/// @see $pfe-vars\n/// @see $pfe-colors\n/// @see $pfe-broadcasted\n/// @example scss - In your component styles\n///   .my-element {\n///     padding:     pfe-var( container-spacer );\n///     font-size:   pfe-var( font-size );\n///   }\n/// @example - css Rendered output\n///   .my-element {\n///      padding: var(--pfe-theme--container-spacer, 16px);\n///      font-size: var(--pfe-theme--font-size, 16px);\n///   }\n@function pfe-var($cssvar, $fallback: null) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-vars, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-vars, $fallback);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return pfe-get-from-map(\"color\", $var-name, $pfe-colors, $fallback);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-broadcasted);\n    }\n    @else if map-get($pfe-typography-base, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-base, $fallback);\n    }\n    // PATTERNFLY CORE:\n    @else if map-get($pf-type-sizing, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing, $fallback, $prefix: \"pf-global\");\n    }\n    @else if map-get($pf-type-sizing--modifers, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--modifers, $fallback, $prefix: \"pf-c\");\n    }\n    @else if map-get($pf-type-sizing--content, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--content, $fallback, $prefix: \"pf-c\");\n    }\n    // PFE components (must be below core)\n    @else if map-get($pf-type-sizing--component, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--component, $fallback);\n    }\n\n    // DEPRECATED:\n    @else if map-get($pfe-typography-base-deprecated, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-base-deprecated, $fallback);\n    }\n    @else if map-get($pfe-typography-deprecated, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-deprecated, $fallback);\n    }\n\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}"],"sourceRoot":"../src"}