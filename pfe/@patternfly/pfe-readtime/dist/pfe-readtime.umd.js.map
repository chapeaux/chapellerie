{"version":3,"file":"pfe-readtime.umd.js","sources":["../_temp/pfe-readtime.umd.js"],"sourcesContent":["/*!\n * PatternFly Elements: PfeReadtime 1.12.3\n * @license\n * Copyright 2021 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport PFElement from \"../../pfelement/dist/pfelement\";\n\nfunction getEstimatedWPM(language) {\n  switch (language) {\n    case \"en\": // 228 wpm\n    case \"ko\": // for Korean, we were able to locate 7 studies in five articles: 5 with silent reading and 2 with reading aloud. Silent reading rate was 226 wpm, reading aloud 133 wpm.\n      return 228;\n    case \"zh\": // 158 wpm\n      return 158;\n    case \"fr\": // 195 wpm\n      return 195;\n    case \"ja\": // 193 wpm\n      return 193;\n    case \"de\":\n      return 179;\n    case \"it\": // 188 wpm\n      return 188;\n    case \"pt-br\": // 181 wpm\n      return 181;\n    case \"es\":\n      return 218;\n    default:\n      return 228;\n  }\n}\n\nclass PfeReadtime extends PFElement {\n\n  // Injected at build-time\n  static get version() {\n    return \"1.12.3\";\n  }\n\n  // Injected at build-time\n  get html() {\n    return `\n<style>:host{font-size:1rem;font-size:var(--pfe-readtime--FontSize,var(--pf-global--FontSize--md,1rem))}:host([hidden]){display:none} /*# sourceMappingURL=pfe-readtime.min.css.map */</style>\n<span class=\"pfe-readtime__text\">${this.readString}</span>`;\n  }\n\n  static get tag() {\n    return \"pfe-readtime\";\n  }\n\n  static get meta() {\n    return {\n      title: \"Readtime\",\n      description:\n        \"This element will collect a word count on a given section and calculate the readtime based on that count.\",\n    };\n  }\n\n  get templateUrl() {\n    return \"pfe-readtime.html\";\n  }\n\n  get styleUrl() {\n    return \"pfe-readtime.scss\";\n  }\n\n  // Declare the type of this component\n  static get PfeType() {\n    return PFElement.PfeTypes.Content;\n  }\n\n  static get properties() {\n    return {\n      wpm: {\n        title: \"Words per minute\",\n        type: Number,\n        default: (el) => getEstimatedWPM(el._lang),\n        observer: `render`,\n      },\n      wordCount: {\n        title: \"Number of words in the content\",\n        type: Number,\n        default: 0,\n        observer: `render`,\n      },\n      templateString: {\n        title: \"Template for printing the readtime\",\n        description:\n          \"Translatable string for printing out the readtime in a readable format. Use %t as a stand-in for the calculated value.\",\n        attr: \"template\",\n        type: String,\n        default: (el) => el.textContent.trim() || \"%t-minute readtime\",\n        observer: `render`,\n      },\n      _lang: {\n        title: \"Language of content\",\n        type: String,\n        attr: \"lang\",\n        enum: [\"en\", \"ko\", \"zh\", \"fr\", \"ja\", \"de\", \"it\", \"pt-br\", \"es\"],\n        default: () => document.documentElement.lang || \"en\",\n        observer: `_langChangedHandler`,\n      },\n      for: {\n        title: \"Element containing content\",\n        //This is the unique selector of the target\n        type: String,\n        observer: \"_forChangeHandler\",\n      },\n    };\n  }\n\n  get readtime() {\n    return Math.floor(this.wordCount / this.wpm) || 0;\n  }\n\n  get readString() {\n    if (this.readtime <= 0) {\n      this.setAttribute(\"hidden\", \"\");\n      return;\n    }\n\n    this.removeAttribute(\"hidden\");\n\n    if (this.templateString && this.templateString.match(/%t/)) {\n      return this.templateString.replace(\"%t\", this.readtime);\n    } else {\n      return `${this.readtime}${this.templateString}`;\n    }\n  }\n\n  constructor() {\n    // Note: Delay render is important here for the timing of variable definitions\n    // we want to render after all the inputs have been read in and parsed\n    super(PfeReadtime, { type: PfeReadtime.PfeType, delayRender: true });\n\n    this._forChangeHandler = this._forChangeHandler.bind(this);\n    this._langChangedHandler = this._langChangedHandler.bind(this);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.render();\n  }\n\n  // disconnectedCallback() {}\n\n  _forChangeHandler(oldVal, newVal) {\n    if (newVal === oldVal) return;\n\n    const target = document.querySelector(newVal) || document.querySelector(`#${newVal}`);\n    if (target) {\n      this.content = target;\n\n      if (target.hasAttribute(\"word-count\")) {\n        const wcAttr = target.getAttribute(\"word-count\");\n        if (Number(wcAttr) >= 0) {\n          this.wordCount = Number(wcAttr);\n        }\n      } else if (target.textContent.trim()) {\n        this.wordCount = target.textContent.split(/\\b\\w+\\b/).length;\n      }\n\n      // If a new target element is identified, re-render\n      this.render();\n    }\n  }\n\n  _langChangedHandler(oldVal, newVal) {\n    if (newVal === oldVal) return;\n\n    this.wpm = getEstimatedWPM(newVal);\n    this.render();\n  }\n}\n\nPFElement.create(PfeReadtime);\n\nexport default PfeReadtime;\n"],"names":["getEstimatedWPM","language","PfeReadtime","readString","Math","floor","wordCount","wpm","readtime","setAttribute","removeAttribute","templateString","match","replace","title","description","PFElement","PfeTypes","Content","type","Number","default","el","_lang","observer","attr","String","textContent","trim","enum","document","documentElement","lang","for","PfeType","delayRender","_forChangeHandler","bind","_langChangedHandler","render","oldVal","newVal","target","querySelector","content","hasAttribute","wcAttr","getAttribute","split","length","create"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;EA2BA,SAASA,eAAT,CAAyBC,QAAzB,EAAmC;EACjC,UAAQA,QAAR;EACE,SAAK,IAAL,CADF;EAEE,SAAK,IAAL;EAAW;EACT,aAAO,GAAP;EACF,SAAK,IAAL;EAAW;EACT,aAAO,GAAP;EACF,SAAK,IAAL;EAAW;EACT,aAAO,GAAP;EACF,SAAK,IAAL;EAAW;EACT,aAAO,GAAP;EACF,SAAK,IAAL;EACE,aAAO,GAAP;EACF,SAAK,IAAL;EAAW;EACT,aAAO,GAAP;EACF,SAAK,OAAL;EAAc;EACZ,aAAO,GAAP;EACF,SAAK,IAAL;EACE,aAAO,GAAP;EACF;EACE,aAAO,GAAP;EAnBJ;EAqBD;;MAEKC;;;;;;EAOJ;0BACW;EACT,uPAE+B,KAAKC,UAFpC;EAGD;;;0BAciB;EAChB,aAAO,mBAAP;EACD;;;0BAEc;EACb,aAAO,mBAAP;EACD;;EAED;;;;0BA6Ce;EACb,aAAOC,KAAKC,KAAL,CAAW,KAAKC,SAAL,GAAiB,KAAKC,GAAjC,KAAyC,CAAhD;EACD;;;0BAEgB;EACf,UAAI,KAAKC,QAAL,IAAiB,CAArB,EAAwB;EACtB,aAAKC,YAAL,CAAkB,QAAlB,EAA4B,EAA5B;EACA;EACD;;EAED,WAAKC,eAAL,CAAqB,QAArB;;EAEA,UAAI,KAAKC,cAAL,IAAuB,KAAKA,cAAL,CAAoBC,KAApB,CAA0B,IAA1B,CAA3B,EAA4D;EAC1D,eAAO,KAAKD,cAAL,CAAoBE,OAApB,CAA4B,IAA5B,EAAkC,KAAKL,QAAvC,CAAP;EACD,OAFD,MAEO;EACL,oBAAU,KAAKA,QAAf,GAA0B,KAAKG,cAA/B;EACD;EACF;;;;;EA9FD;0BACqB;EACnB,aAAO,QAAP;EACD;;;0BASgB;EACf,aAAO,cAAP;EACD;;;0BAEiB;EAChB,aAAO;EACLG,eAAO,UADF;EAELC,qBACE;EAHG,OAAP;EAKD;;;0BAWoB;EACnB,aAAOC,UAAUC,QAAV,CAAmBC,OAA1B;EACD;;;0BAEuB;EACtB,aAAO;EACLX,aAAK;EACHO,iBAAO,kBADJ;EAEHK,gBAAMC,MAFH;EAGHC,mBAAS,kBAACC,EAAD;EAAA,mBAAQtB,gBAAgBsB,GAAGC,KAAnB,CAAR;EAAA,WAHN;EAIHC;EAJG,SADA;EAOLlB,mBAAW;EACTQ,iBAAO,gCADE;EAETK,gBAAMC,MAFG;EAGTC,mBAAS,CAHA;EAITG;EAJS,SAPN;EAaLb,wBAAgB;EACdG,iBAAO,oCADO;EAEdC,uBACE,wHAHY;EAIdU,gBAAM,UAJQ;EAKdN,gBAAMO,MALQ;EAMdL,mBAAS,kBAACC,EAAD;EAAA,mBAAQA,GAAGK,WAAH,CAAeC,IAAf,MAAyB,oBAAjC;EAAA,WANK;EAOdJ;EAPc,SAbX;EAsBLD,eAAO;EACLT,iBAAO,qBADF;EAELK,gBAAMO,MAFD;EAGLD,gBAAM,MAHD;EAILI,gBAAM,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,OAA3C,EAAoD,IAApD,CAJD;EAKLR,mBAAS;EAAA,mBAAMS,SAASC,eAAT,CAAyBC,IAAzB,IAAiC,IAAvC;EAAA,WALJ;EAMLR;EANK,SAtBF;EA8BLS,aAAK;EACHnB,iBAAO,4BADJ;EAEH;EACAK,gBAAMO,MAHH;EAIHF,oBAAU;EAJP;EA9BA,OAAP;EAqCD;;;EAqBD,yBAAc;EAAA;;EAAA,yHAGNtB,WAHM,EAGO,EAAEiB,MAAMjB,YAAYgC,OAApB,EAA6BC,aAAa,IAA1C,EAHP;EACZ;EACA;;;EAGA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,OAAzB;EACA,UAAKC,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBD,IAAzB,OAA3B;EANY;EAOb;;;;0CAEmB;EAClB;;EAEA,WAAKE,MAAL;EACD;;EAED;;;;wCAEkBC,QAAQC,QAAQ;EAChC,UAAIA,WAAWD,MAAf,EAAuB;;EAEvB,UAAME,SAASZ,SAASa,aAAT,CAAuBF,MAAvB,KAAkCX,SAASa,aAAT,OAA2BF,MAA3B,CAAjD;EACA,UAAIC,MAAJ,EAAY;EACV,aAAKE,OAAL,GAAeF,MAAf;;EAEA,YAAIA,OAAOG,YAAP,CAAoB,YAApB,CAAJ,EAAuC;EACrC,cAAMC,SAASJ,OAAOK,YAAP,CAAoB,YAApB,CAAf;EACA,cAAI3B,OAAO0B,MAAP,KAAkB,CAAtB,EAAyB;EACvB,iBAAKxC,SAAL,GAAiBc,OAAO0B,MAAP,CAAjB;EACD;EACF,SALD,MAKO,IAAIJ,OAAOf,WAAP,CAAmBC,IAAnB,EAAJ,EAA+B;EACpC,eAAKtB,SAAL,GAAiBoC,OAAOf,WAAP,CAAmBqB,KAAnB,CAAyB,SAAzB,EAAoCC,MAArD;EACD;;EAED;EACA,aAAKV,MAAL;EACD;EACF;;;0CAEmBC,QAAQC,QAAQ;EAClC,UAAIA,WAAWD,MAAf,EAAuB;;EAEvB,WAAKjC,GAAL,GAAWP,gBAAgByC,MAAhB,CAAX;EACA,WAAKF,MAAL;EACD;;;IA7IuBvB;;EAgJ1BA,UAAUkC,MAAV,CAAiBhD,WAAjB;;;;;;;;"}