{"version":3,"file":"pfe-jump-links.min.js","sources":["../_temp/polyfills--pfe-jump-links-nav.js","../_temp/pfe-jump-links-nav.js","../_temp/pfe-jump-links-panel.js","../_temp/pfe-jump-links.js"],"sourcesContent":["// @POLYFILL  Array.prototype.findIndex\n// https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\nif (!Array.prototype.findIndex) {\n  Object.defineProperty(Array.prototype, \"findIndex\", {\n    value: function (predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined');\n      }\n\n      var o = Object(this);\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== \"function\") {\n        throw new TypeError(\"predicate must be a function\");\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1];\n\n      // 5. Let k be 0.\n      var k = 0;\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return k.\n        var kValue = o[k];\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return k;\n        }\n        // e. Increase k by 1.\n        k++;\n      }\n\n      // 7. Return -1.\n      return -1;\n    },\n  });\n}\n\n// @POLYFILL  Element.closest\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function (s) {\n    var el = this;\n    do {\n      if (el.matches(s)) return el;\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  };\n}\n","/*!\n * PatternFly Elements: PfeJumpLinks 1.12.3\n * @license\n * Copyright 2021 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\n// Import polyfills: findIndex, closest\nimport \"./polyfills--pfe-jump-links-nav.js\";\n\nimport PFElement from \"../../pfelement/dist/pfelement.js\";\n\n// Used for rendering\nimport PfeAccordion from \"../../pfe-accordion/dist/pfe-accordion.js\";\n\n// @TODO This needs a click handler for if the accordion is stuck to the top\n// and the user clicks outside the accordion element (should close accordion).\nclass PfeJumpLinksNav extends PFElement {\n\n  // Injected at build-time\n  static get version() {\n    return \"1.12.3\";\n  }\n\n  // Injected at build-time\n  get html() {\n    return `\n<style>slot[name=heading][sr-only]{position:absolute;overflow:hidden;clip:rect(0,0,0,0);height:1px;width:1px;margin:-1px;padding:0;border:0}:host{-webkit-box-sizing:border-box;box-sizing:border-box;font-family:\"Red Hat Text\",RedHatText,Overpass,Overpass,Arial,sans-serif;font-family:var(--pfe-theme--font-family, \"Red Hat Text\", \"RedHatText\", \"Overpass\", Overpass, Arial, sans-serif);font-weight:400;font-weight:var(--pfe-theme--font-weight--normal,400);display:block;position:-webkit-sticky;position:sticky;z-index:80;z-index:var(--pfe-theme--zindex--jumplinks,80);top:0;padding:0}@media (min-width:992px){:host([horizontal][color=darkest]){background-color:#151515;background-color:var(--pfe-theme--color--surface--darkest,#151515);--context:var(--pfe-theme--color--surface--darkest--context, dark);--pfe-broadcasted--text:var(--pfe-theme--color--text--on-dark, #fff);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-dark, #73bcf7);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-dark, #bee1f4);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-dark, #bee1f4);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-dark, #bee1f4);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-dark, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-dark, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-dark, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-dark, none)}}@media (min-width:992px){:host([horizontal][color=darker]){background-color:#3c3f42;background-color:var(--pfe-theme--color--surface--darker,#3c3f42);--context:var(--pfe-theme--color--surface--darker--context, dark);--pfe-broadcasted--text:var(--pfe-theme--color--text--on-dark, #fff);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-dark, #73bcf7);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-dark, #bee1f4);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-dark, #bee1f4);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-dark, #bee1f4);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-dark, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-dark, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-dark, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-dark, none)}}@media (min-width:992px){:host([horizontal][color=lightest]){background-color:#fff;background-color:var(--pfe-theme--color--surface--lightest,#fff);--context:var(--pfe-theme--color--surface--lightest--context, light);--pfe-broadcasted--text:var(--pfe-theme--color--text, #151515);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted, #6a6e73);--pfe-broadcasted--link:var(--pfe-theme--color--link, #06c);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover, #004080);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus, #004080);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited, #6753ac);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited, none)}}@media (min-width:992px){:host([horizontal][color=lighter]){background-color:#f0f0f0;background-color:var(--pfe-theme--color--surface--lighter,#f0f0f0);--context:var(--pfe-theme--color--surface--lighter--context, light);--pfe-broadcasted--text:var(--pfe-theme--color--text, #151515);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted, #6a6e73);--pfe-broadcasted--link:var(--pfe-theme--color--link, #06c);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover, #004080);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus, #004080);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited, #6753ac);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited, none)}}:host([stuck][horizontal]){-webkit-box-shadow:0 .0625rem .125rem 0 rgba(3,3,3,.12),0 0 .125rem 0 rgba(3,3,3,.06) 0 .0625rem .125rem 0 rgba(3,3,3,.2);box-shadow:0 .0625rem .125rem 0 rgba(3,3,3,.12),0 0 .125rem 0 rgba(3,3,3,.06) 0 .0625rem .125rem 0 rgba(3,3,3,.2);-webkit-box-shadow:var(--pfe-theme--box-shadow--sm,0 .0625rem .125rem 0 rgba(3,3,3,.12),0 0 .125rem 0 rgba(3,3,3,.06)0 .0625rem .125rem 0 rgba(3,3,3,.2));box-shadow:var(--pfe-theme--box-shadow--sm,0 .0625rem .125rem 0 rgba(3,3,3,.12),0 0 .125rem 0 rgba(3,3,3,.06)0 .0625rem .125rem 0 rgba(3,3,3,.2))}.pfe-jump-links-nav__heading{margin-top:0;margin-bottom:.5rem;margin-bottom:var(--pfe-theme--content-spacer--body--sm,.5rem)}.pfe-jump-links-nav__heading h3,::slotted([slot=heading]){color:#3c3f42;color:var(--pfe-broadcasted--text,#3c3f42);margin:0;font-size:.875rem;font-size:var(--pfe-jump-links__heading--FontSize,var(--pf-global--FontSize--sm,.875rem));font-weight:400;font-weight:var(--pfe-theme--font-weight--normal,400);text-transform:uppercase;text-transform:var(--pfe-jump-links__heading--TextTransform,uppercase)}slot[name=logo]{display:none}slot[name=cta]{display:none}nav{visibility:visible;margin:0;list-style:none;padding:0}pfe-accordion-panel nav{width:100%}@media (min-width:992px){:host([horizontal][no-header]) nav{padding-top:1px;padding-bottom:0}}#container{padding:32px 0}pfe-accordion-panel #container{padding:24px 0}ul{padding:0;margin:0;border-left:1px solid #d2d2d2;border-left:var(--pfe-theme--surface--border-width,1px) var(--pfe-theme--surface--border-style,solid) var(--pfe-theme--color--ui-disabled,#d2d2d2)}li{display:block;position:relative;margin-left:calc(1px * -1);margin-left:calc(var(--pfe-theme--surface--border-width,1px) * -1)}.sub-nav li{margin-left:0}li[expand] ul{height:auto;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}li[expand] .sub-nav{display:table;height:auto}li::before{position:absolute;content:\"\";top:0;left:0;background-color:transparent;width:calc(4px - 0px);width:calc(var(--pfe-theme--surface--border-width--heavy,4px) - 0px);height:calc(100% - 0px);background-color:transparent}li :hover::before,li:not([expand]) li:hover::before{background-color:#d2d2d2;background-color:var(--pfe-theme--color--ui-disabled,#d2d2d2)}li[active]::before,li[expand]::before{background-color:#06c;background-color:var(--pfe-jump-links--accent,var(--pfe-jump-links--BorderColor,var(--pfe-theme--color--ui-accent,#06c)));z-index:2}a{position:relative;color:#6a6e73;color:var(--pfe-theme--color--ui-disabled--text,#6a6e73);font-size:1rem;font-size:var(--pfe-jump-links--FontSize,var(--pf-global--FontSize--md,1rem));text-decoration:none;line-height:1.5;line-height:var(--pfe-theme--line-height,1.5);padding:calc(calc(1.5rem / 6) * 2) calc(calc(1.5rem / 3) * 2);padding:calc(var(--pfe-jump-links__link--vertical-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 6)) * 2) calc(var(--pfe-jump-links__link--horizontal-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 3)) * 2)}a,a:focus+ul>li>a,li:hover a,li[expand] a{display:table}li>a:hover,li[active]>a{color:#3c3f42;color:var(--pfe-broadcasted--text,#3c3f42)}:host([on=dark]) a{color:#d2d2d2;color:var(--pfe-theme--color--text--muted--on-dark,#d2d2d2)}:host([on=saturated]) a{color:#d2d2d2;color:var(--pfe-theme--color--text--muted--on-saturated,#d2d2d2)}.has-sub-section a{padding-bottom:calc(1.5rem / 6);padding-bottom:var(--pfe-jump-links__link--vertical-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 6))}.sub-section a{margin-left:calc(1rem * .75);margin-left:calc(var(--pfe-theme--container-spacer,1rem) * .75);font-size:calc(1rem * .85);font-size:calc(var(--pfe-jump-links--FontSize,var(--pf-global--FontSize--md,1rem)) * .85);padding:calc(1.5rem / 6) calc(calc(1.5rem / 3) * 2);padding:var(--pfe-jump-links__link--vertical-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 6)) calc(var(--pfe-jump-links__link--horizontal-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 3)) * 2)}@media (min-width:992px){.sub-section a{display:none}}.sub-section a:last-child{padding-bottom:calc(1.5rem / 3);padding-bottom:var(--pfe-jump-links__link--horizontal-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 3))}a:focus:focus-visible{outline:0;position:relative}a:focus:focus-visible::after{position:absolute;content:\"\";top:0;left:0;width:calc(100% + 3px);width:calc(100% + var(--pfe-theme--ui--border-width--active,3px));height:calc(100% + 3px);height:calc(100% + var(--pfe-theme--ui--border-width--active,3px));border-radius:2px;border-radius:var(--pfe-theme--ui--border-radius,2px);border:2px solid transparent;border:var(--pfe-theme--ui--border-width--md,2px) var(--pfe-theme--ui--border-style,solid) transparent}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){a:focus:focus-visible::after{height:100%}}a:focus:focus-visible:focus::after{border-color:#06c;border-color:var(--pfe-theme--color--link,#06c)}a:focus:focus-visible:focus:not(:focus-visible)::after{border:unset}ul ul{margin:0;padding:0;overflow-y:hidden;-webkit-transition:-webkit-box-flex 1s linear,-webkit-flex 1s linear;transition:-webkit-box-flex 1s linear,-webkit-flex 1s linear;transition:flex 1s linear;transition:flex 1s linear,-webkit-box-flex 1s linear,-webkit-flex 1s linear,-ms-flex 1s linear}ul ul,ul ul li{border-left:none!important}pfe-accordion{border:1px solid #d2d2d2;border:var(--pfe-theme--surface--border-width,1px) var(--pfe-theme--surface--border-style,solid) var(--pfe-theme--color--ui-disabled,#d2d2d2);--context:light;--pfe-accordion--BackgroundColor:var(--pfe-theme--color--surface--lightest, #fff)}:host([color=darkest]) pfe-accordion{--context:dark;--pfe-accordion--BackgroundColor:var(--pfe-theme--color--surface--darkest, #151515);--pfe-theme--color--ui-accent--on-dark:transparent}pfe-accordion,pfe-accordion-panel.animating,pfe-accordion-panel[expanded]{--pfe-accordion--accent:transparent;--pfe-accordion--BorderColor:transparent;--pfe-accordion--accent:transparent;--pfe-accordion--BorderTopWidth:0;--pfe-accordion--BorderBottomWidth:0;--pfe-accordion--panel-container--Padding:0 0 0 calc(var(--pfe-accordion__base--Padding,var(--pfe-theme--container-spacer,1rem)) * 1.5)}@media screen and (min-width:992px){:host([horizontal]){width:100%;background-color:#fff;background-color:var(--pfe-jump-links--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff));--context:var(--pfe-jump-links--context, var(--pfe-theme--color--surface--lightest--context, light));z-index:calc(80 + 1);z-index:calc(var(--pfe-theme--zindex--jumplinks,80) + 1);border:none;padding:0}:host([horizontal]) .pfe-jump-links-nav__heading{-webkit-flex-basis:100%;-ms-flex-preferred-size:100%;flex-basis:100%;-webkit-align-self:center;-ms-flex-item-align:center;-ms-grid-row-align:center;align-self:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;display:block;margin:0;padding-bottom:1rem;padding-bottom:var(--pfe-theme--container-padding,1rem);border-bottom:1px solid #d2d2d2;border-bottom:var(--pfe-theme--surface--border-width,1px) var(--pfe-theme--surface--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2)}:host([horizontal]) .pfe-jump-links-nav__heading h3,:host([horizontal]) ::slotted([slot=heading]){text-align:center;text-align:var(--pfe-jump-links__heading--TextAlign,center)}:host([horizontal]) ::slotted([slot=logo]){position:absolute;max-height:calc(1rem * 3.5);max-height:calc(var(--pfe-theme--container-spacer,1rem) * 3.5);max-width:calc(1rem * 14);max-width:calc(var(--pfe-theme--container-spacer,1rem) * 14);top:1rem;top:var(--pfe-theme--container-spacer,1rem);left:calc(1rem * 4);left:calc(var(--pfe-theme--container-spacer,1rem) * 4)}:host([horizontal]) ::slotted([slot=cta]){position:absolute;top:calc(1rem * 1);top:calc(var(--pfe-theme--container-spacer,1rem) * 1);right:calc(1rem * 4);right:calc(var(--pfe-theme--container-spacer,1rem) * 4)}}@media screen and (min-width:992px){:host([horizontal]) nav{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-flow:row wrap;-ms-flex-flow:row wrap;flex-flow:row wrap;padding-top:32px;padding-bottom:8px;max-width:calc(992px - (var(--pfe-jump-links--Padding--horizontal) * 4));max-width:var(--pfe-jump-links--Width,calc(992px - (var(--pfe-jump-links--Padding--horizontal) * 4)))}}@media screen and (min-width:1200px){:host([horizontal]) nav{max-width:calc(1200px - (var(--pfe-jump-links--Padding--horizontal) * 4));max-width:var(--pfe-jump-links--Width,calc(1200px - (var(--pfe-jump-links--Padding--horizontal) * 4)))}}@media screen and (min-width:992px){:host([horizontal]) #container{padding:0;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;justify-items:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}:host([horizontal]) ul{border:none;text-align:center;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding:0;width:auto;margin:0 auto}:host([horizontal]) li{margin-left:0;padding:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;margin-top:calc(1px * -1);margin-top:calc(var(--pfe-theme--surface--border-width,1px) * -1)}:host([horizontal]) li::before{height:4px;height:var(--pfe-theme--surface--border-width--heavy,4px);width:100%}:host([horizontal]) a{padding:16px;text-decoration:none;font-size:16px;color:var(--pfe-broadcasted--text--muted,)}:host([horizontal]) a:hover,:host([horizontal]) a[active]{color:#3c3f42;color:var(--pfe-broadcasted--text,#3c3f42)}}:host([hidden]){display:none!important} /*# sourceMappingURL=pfe-jump-links-nav.min.css.map */</style>\n${this.isMobile ? `\n<pfe-accordion>\n  <pfe-accordion-header>\n    <slot class=\"pfe-jump-links-nav__heading\" name=\"heading\">\n      <h3>${this.srText || \"Jump to section\"}</h3>\n    </slot>\n  </pfe-accordion-header>\n  <pfe-accordion-panel>\n` : \"\"}\n\n<nav>\n  ${!this.isMobile ? `<slot class=\"pfe-jump-links-nav__heading\" name=\"heading\"${this.noHeader ? \" sr-only\" : \"\"}>\n    <h3>${this.srText || \"Jump to section\"}</h3>\n  </slot>` : \"\"}\n  ${this.horizontal ? `<slot class=\"pfe-jump-links-nav__logo\" name=\"logo\"></slot>` : \"\"}\n  <div id=\"container\"></div>\n  ${this.horizontal ? `<slot class=\"pfe-jump-links-nav__cta\" name=\"cta\"></slot>` : \"\"}\n</nav>\n\n${this.isMobile ? `\n  </pfe-accordion-panel>\n</pfe-accordion>\n` : \"\"}`;\n  }\n\n  static get tag() {\n    return \"pfe-jump-links-nav\";\n  }\n\n  get templateUrl() {\n    return \"pfe-jump-links-nav.html\";\n  }\n\n  get styleUrl() {\n    return \"pfe-jump-links-nav.scss\";\n  }\n\n  static get PfeType() {\n    return PFElement.PfeTypes.Content;\n  }\n\n  /**\n   * List of all events in the component\n   */\n  static get events() {\n    return {\n      activeNavItem: `pfe-jump-links-panel:active-navItem`,\n      change: `pfe-jump-links-panel:change`,\n      stuck: `pfe-jump-links-nav:stuck`,\n      resize: `resize`,\n      scroll: `scroll`,\n      keyup: `keyup`,\n    };\n  }\n\n  /**\n   * Alias events to allow easier console logging\n   */\n  get events() {\n    return PfeJumpLinksNav.events;\n  }\n\n  /**\n   * Observe the children, subtree, and character changes to allow\n   * custom-built navigation to migrate to shadow DOM if updated\n   * @returns {Object} Mutation observer settings\n   */\n  static get observer() {\n    return {\n      childList: true,\n      subtree: true,\n      characterData: true,\n    };\n  }\n\n  static get properties() {\n    return {\n      autobuild: {\n        title: \"Autobuild\",\n        type: Boolean,\n      },\n      horizontal: {\n        title: \"Horizontal\",\n        type: Boolean,\n        default: false,\n      },\n      // @TODO: Document this more\n      srText: {\n        title: \"Screen reader text\",\n        type: String,\n        default: \"Jump to section\",\n      },\n      // Supports only lightest and darkest background colors\n      color: {\n        title: \"Color\",\n        type: String,\n        default: \"lightest\",\n        values: [\"lightest\", \"darkest\"],\n      },\n      // @TODO Need to incorporate support for breakpoint customizations i.e., offset=\"@500px: 200, @800px: 150\"\n      offset: {\n        title: \"Offset\",\n        type: Number,\n      },\n      // Breakpoint at which the nav switches to an accordion\n      mobileBreakpoint: {\n        title: \"Mobile breakpoint (max-width)\",\n        type: String,\n      },\n      accordionCollapseTiming: {\n        title: \"Number of ms to wait before collapsing the accordion on click\",\n        type: Number,\n        default: 750,\n      },\n      // Reflects if the nav is stuck in place\n      // @TODO note this in the documentation as a readonly property\n      stuck: {\n        title: \"Stickiness state\",\n        type: Boolean,\n        attr: \"stuck\",\n        observer: \"_stickyHandler\",\n      },\n      noHeader: {\n        title: \"Opt-out of the header region\",\n        type: Boolean,\n      },\n      // @TODO: Deprecated in 2.0\n      oldAutobuild: {\n        alias: \"autobuild\",\n        attr: \"pfe-c-autobuild\",\n      },\n      // @TODO: Deprecated in 2.0\n      oldHorizontal: {\n        alias: \"horizontal\",\n        attr: \"pfe-c-horizontal\",\n      },\n      // @TODO: Deprecated in 2.0\n      oldColor: {\n        alias: \"color\",\n        attr: \"pfe-color\",\n      },\n    };\n  }\n\n  /**\n   * @requires {this.mobileBreakpoint || PFElement.breakpoint}\n   * @returns {Boolean} true if this is at or below the mobile breakpoint\n   */\n  get isMobile() {\n    if (this.mobileBreakpoint) return window.matchMedia(`(max-width: ${this.mobileBreakpoint})`).matches;\n\n    // Default to the PFElement breakpoints\n    const data = PFElement.breakpoint.lg.match(/([0-9]+)([a-z]*)/);\n    if (data.length < 1) return \"991px\";\n\n    // Subtract one because PFElement breakpoints uses mobile-first numbering\n    return window.matchMedia(`(max-width: ${parseInt(data[1], 10) - 1}${data[2]})`).matches;\n  }\n\n  /**\n   * @returns {NodeItem} Slot assigned to heading or pfe-jump-links-nav--heading\n   * @TODO deprecating pfe-jump-links-nav--heading slot in 2.0\n   */\n  get header() {\n    return this.getSlot([\"heading\", \"pfe-jump-links-nav--heading\"])[0];\n  }\n\n  /**\n   * @returns {NodeItem} Slot assigned to cta or pfe-jump-links-nav--cta\n   * @TODO deprecating pfe-jump-links-nav--cta slot in 2.0\n   */\n  get cta() {\n    return this.getSlot([\"link\", \"pfe-jump-links-nav--link\"])[0];\n  }\n\n  /**\n   * @returns {NodeItem} Slot assigned to logo or pfe-jump-links-nav--logo\n   * @TODO deprecating pfe-jump-links-nav--logo slot in 2.0\n   */\n  get logo() {\n    return this.getSlot([\"logo\", \"pfe-jump-links-nav--logo\"])[0];\n  }\n\n  /**\n   * @returns {NodeItem} Container element from the shadow DOM for the nav list\n   */\n  get container() {\n    return this.shadowRoot.querySelector(\"#container\");\n  }\n\n  /**\n   * This setter lets you pass in a custom panel NodeItem to the navigation\n   * @param {NodeItem} Pointer to the panel content\n   */\n  set panel(NodeItem) {\n    if (NodeItem) {\n      this._panel = NodeItem;\n\n      // Attach a scrolltarget attribute if one does not yet exist\n      if (!this._panel.hasAttribute(\"scrolltarget\")) {\n        this._panel.setAttribute(\"scrolltarget\", this.id);\n      }\n\n      // Emit an event to indicate a change in the panel\n      this.emitEvent(PfeJumpLinksNav.events.change);\n    }\n  }\n\n  /**\n   * This getter returns the panel for the navigation item; if a custom pointer was set\n   * it will return that, otherwise, it tries to find the panel\n   * @returns {NodeItem} Pointer to the panel content\n   */\n  get panel() {\n    // If a custom panel is already set, use that\n    if (this._panel) return this._panel;\n\n    // Use the ID from the navigation to target the panel elements\n    // Automatically if there's only one set of tags on the page\n    if (this.id) {\n      // Check for a scrolltarget element pointing to that ID\n      // Note: include fallback for scrolltarget in case pfe-jump-links-panel has not upgraded yet?\n      const target = document.querySelector(`[scrolltarget=\"${this.id}\"],[pfe-c-scrolltarget=\"${this.id}\"]`);\n      if (target) return target;\n    }\n\n    // Get all instances of the panel components registered with the DOM\n    let panels = [];\n    Promise.all([customElements.whenDefined(\"pfe-jump-links-panel\")]).then(() => {\n      panels = customElements.get(\"pfe-jump-links-panel\").instances || [];\n\n      // Look for a panel with this scrolltarget (can capture the attribute better after component upgrades)\n      const panelWithId = panels.filter((panel) => panel.getAttribute(\"scrolltarget\") === this.id);\n      if (panelWithId.length === 1) return panelWithId[0];\n\n      // If only one panel is found, let's assume that goes to this nav\n      if (panels.length === 1) {\n        // Capture a random ID to connect this to the panel\n        this.id = this.randomId;\n        panels[0].setAttribute(\"scrolltarget\", this.id);\n\n        return panels[0];\n      }\n\n      // Throw a few warning messages suggesting how to connect the nav and panels\n      if (panels.length > 1) {\n        this.warn(\n          `Cannot locate which panel is connected to this navigation element.${\n            this.id ? ` Please add scrolltarget=\"${this.id}\" to the appropriate panel.` : \"\"\n          }`\n        );\n      } else {\n        this.warn(\n          `Cannot locate any panels on this page. Please see documentation for connecting the navigation and panel.`\n        );\n      }\n    });\n\n    return;\n  }\n\n  /**\n   * API hook for setting up custom sections without a panel\n   */\n  set sections(NodeList) {\n    this._sections = NodeList;\n\n    // Emit an event to indicate a change in the sections\n    this.emitEvent(PfeJumpLinksNav.events.change);\n  }\n\n  /**\n   * Capture the sections from inside the \"panel\"; default to this._sections first\n   * then fallback to grepping the sections from the panel\n   * @returns {NodeList} All sections inside the panel\n   */\n  get sections() {\n    // If a custom set of sections is already defined, use that\n    if (this._sections) return this._sections;\n\n    let panel = this.panel;\n\n    // If we can't find a panel element and this is using autobuild, return b/c we can't determine the sections automatically\n    if (!panel && this.autobuild) return;\n\n    // If this is not autobuilt, use the IDs from the light DOM\n    if (!this.autobuild) {\n      let links = [...this.querySelectorAll(\"ul > li > a[href]\")];\n      // Parse the links for the anchor tag and create a selector from it\n      const ids = links.map((link) => `[id=\"${link.href.split(\"#\").pop()}\"]`);\n      // Capture these from the panel or if nothing is returned, check the document\n      return panel.querySelectorAll(ids.join(\",\")) || document.querySelectorAll(ids.join(\",\"));\n    }\n\n    // NOTE: since the panel element is not necessarily pfe-jump-links-panel\n    // it _could_ contain a shadowRoot with the sections defined in it\n    return (\n      panel.querySelectorAll(`.pfe-jump-links-panel__section`) ||\n      panel.shadowRoot.querySelectorAll(`.pfe-jump-links-panel__section`) ||\n      panel.querySelectorAll(`[id]`)\n    );\n  }\n\n  get links() {\n    return [...this.container.querySelectorAll(\"a\")];\n  }\n\n  get items() {\n    return [...this.shadowRoot.querySelectorAll(`.${this.tag}__item`)];\n  }\n\n  // @TODO It seems like the offset is 0 when non-horizontal jumps links are mobile\n  get offsetValue() {\n    // If the offset attribute has been set, use that (no calculations)\n    if (this.offset) return this.offset;\n\n    // If the offset CSS variable has been set, use that (no calculations)\n    // @TODO: deprecate --pfe-jump-links-panel--offset in 2.0 release\n    // Note: deprecated @1.0 --jump-links-nav--nudge\n    let offsetVariable = this.cssVariable(\"pfe-jump-links--offset\") || this.cssVariable(\"pfe-jump-links-panel--offset\");\n\n    if (offsetVariable) {\n      offsetVariable = this._castPropertyValue(\n        {\n          type: Number,\n        },\n        parseInt(offsetVariable, 10)\n      );\n      if (offsetVariable && offsetVariable >= 0) return offsetVariable;\n    }\n\n    //--\n    // If the offsets are not provided, calculate the height of what is currently sticky\n    let height = 0;\n\n    // Get the primary navigation height\n    let navHeightVariable = this.cssVariable(`pfe-navigation--Height--actual`);\n    if (navHeightVariable) {\n      navHeightVariable = this._castPropertyValue(\n        {\n          type: Number,\n        },\n        parseInt(navHeightVariable, 10)\n      );\n      if (navHeightVariable && navHeightVariable > 0) height = navHeightVariable;\n    }\n\n    // If this is mobile or horizontal & current stuck, return with the nav-height only\n    if (this.stuck && (this.isMobile || this.horizontal)) return height;\n\n    // If this is not a horizontal jump link, check if any other horizontal jump links exist\n    let stickyJumpLinks = this.cssVariable(\"pfe-jump-links--Height--actual\");\n    if (stickyJumpLinks) {\n      stickyJumpLinks = this._castPropertyValue(\n        {\n          type: Number,\n        },\n        parseInt(stickyJumpLinks, 10)\n      );\n      if (stickyJumpLinks && stickyJumpLinks > 0) height = height + stickyJumpLinks;\n    }\n\n    // No offset if this is a horizontal element, should sit beneath the pfe-navigation (if it exists)\n    return height;\n  }\n\n  constructor() {\n    super(PfeJumpLinksNav, {\n      type: PfeJumpLinksNav.PfeType,\n    });\n\n    this.currentActive;\n    this.isBuilding = false;\n    this.isVisible = false;\n\n    // This flag indicates if the rebuild should update the light DOM\n    this.update = false;\n    this._panel, this._sections;\n    this._clicked = false;\n\n    this.build = this.build.bind(this);\n    this.rebuild = this.rebuild.bind(this);\n    this.active = this.active.bind(this);\n    this.inactive = this.inactive.bind(this);\n    this.clearActive = this.clearActive.bind(this);\n    this.getActive = this.getActive.bind(this);\n    this.closeAccordion = this.closeAccordion.bind(this);\n    this.scrollToSection = this.scrollToSection.bind(this);\n    this.updateItem = this.updateItem.bind(this);\n    this.updateLightDOM = this.updateLightDOM.bind(this);\n\n    this._buildWrapper = this._buildWrapper.bind(this);\n    this._buildItem = this._buildItem.bind(this);\n    this._isValidLightDom = this._isValidLightDom.bind(this);\n    this._reportHeight = this._reportHeight.bind(this);\n    this._updateOffset = this._updateOffset.bind(this);\n    this._checkVisible = this._checkVisible.bind(this);\n\n    this._stickyHandler = this._stickyHandler.bind(this);\n    this._clickHandler = this._clickHandler.bind(this);\n    this._scrollHandler = this._scrollHandler.bind(this);\n    this._resizeHandler = this._resizeHandler.bind(this);\n    this._mutationHandler = this._mutationHandler.bind(this);\n    this._panelChangedHandler = this._panelChangedHandler.bind(this);\n    // this._keyboardHandler = this._keyboardHandler.bind(this);\n\n    this._observer = new MutationObserver(this._mutationHandler);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    // Do not try to render navigation in IE11\n    if (this.isIE11) {\n      this.setAttribute(\"hidden\", \"\");\n      return;\n    }\n\n    // Attaches necessary listeners; does not include the mutation observer\n    // because that is attached after processing the component\n    this._attachListeners(PfeJumpLinksNav.events);\n\n    // Check that the light DOM is there and accurate\n    if (!this.autobuild && this._isValidLightDom()) {\n      this.updateLightDOM();\n    } else if (this.autobuild) {\n      // Try to build the navigation based on the panel\n      this.build();\n    }\n\n    // Capture the updated UL tag\n    const menu = this.querySelector(\"ul, ol\");\n    // If the menu is found, process and move to the shadow DOM\n    if (!menu) {\n      // Throw a warning if the menu could not be built\n      this.warn(`Navigation could not be built.`);\n    } else {\n      // Move the menu into the shadow DOM\n      this._toShadowDOM(menu);\n      // Update the offset if necessary\n      this._updateOffset();\n\n      // Check if this navigation element is visible\n      const visible = this._checkVisible();\n      const idx = this.getActive();\n\n      // Activate initial active item\n      if (visible && idx >= 0) this.active(idx);\n      else if (visible) this.active(0);\n      // @TODO: would be good to set the last item as active if the visible nav is below this one\n    }\n\n    // Trigger the mutation observer\n    this._observer.observe(this, PfeJumpLinksNav.observer);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._dettachListeners(PfeJumpLinksNav.events);\n  }\n\n  /**\n   * Builds the navigation based on the provided data or the defined sections\n   * @param {NodeList} [sections=this.sections] List of the sections the navigation should link to\n   */\n  build(sections = this.sections) {\n    // Can't build the navigation dynamically without sections defined\n    if (!sections) return;\n\n    // Convert NodeList to array\n    sections = [...sections];\n\n    this.isBuilding = true;\n\n    // Validations complete, start the build\n    let child;\n    let wrapper = this._buildWrapper();\n    let currentWrapper = wrapper;\n    let previousWrapper = currentWrapper;\n\n    // Build markup for the navigation\n    for (let i = 0; i < sections.length; i++) {\n      const sectionHeading = sections[i];\n      let is_subsection = sectionHeading.classList.contains(\"sub-section\");\n      let has_subsection = sectionHeading.classList.contains(\"has-sub-section\");\n\n      // Get ID for the navigation\n      let id = sectionHeading.id;\n      if (!id) {\n        let spacer = sectionHeading.previousElementSibling;\n        if (spacer && spacer.classList.contains(\"pfe-jump-links__section--spacer\") && spacer.id) {\n          id = spacer.id;\n        } else {\n          sectionHeading.id = this.randomId.replace(\"pfe-\", \"pfe-jump-links--\");\n          id = sectionHeading.id;\n        }\n      }\n\n      // Build the li tag; the child item\n      child = this._buildItem(\n        {\n          target: id,\n          content: sectionHeading.getAttribute(\"nav-label\") || sectionHeading.textContent,\n          subsection: has_subsection,\n        },\n        is_subsection\n      );\n\n      // Add the item to the list\n      currentWrapper.appendChild(child);\n\n      if (has_subsection) {\n        previousWrapper = currentWrapper;\n        currentWrapper = this._buildWrapper(\"sub-nav\");\n        child.appendChild(currentWrapper);\n      }\n\n      // If the next item exists and is a sub-section, reset the ul build to the previous one\n      if (sections[i + 1] && !sections[i + 1].classList.contains(\"sub-section\")) {\n        currentWrapper = previousWrapper || wrapper;\n      }\n    }\n\n    this.isBuilding = false;\n\n    // Return the mark-up\n    this.innerHTML = \"\";\n    this.appendChild(wrapper);\n  }\n\n  /**\n   * Close the mobile accordion\n   * @requires {Boolean} [this.isMobile] Indicates whether the navigation is in a mobile state\n   * @requires {Boolean} [this.accordionCollapseTiming=750]\n   */\n  closeAccordion() {\n    if (!this.isMobile) return;\n\n    const accordion = this.shadowRoot.querySelector(\"pfe-accordion\");\n    // After a short wait, close the accordion\n    setTimeout(() => {\n      Promise.all([customElements.whenDefined(\"pfe-accordion\")]).then(() => {\n        accordion.collapseAll();\n      });\n    }, this.accordionCollapseTiming);\n  }\n\n  /**\n   * Rebuild the navigation if the sections or panels are updated\n   */\n  rebuild() {\n    // If the build is happening, wait until it is complete\n    if (this.isBuilding) {\n      setTimeout(this.rebuild, 10);\n    } else {\n      // Re-render the template if necessary\n      // If this is a mobile state and it does use an accordion, or vise-versa\n      if (\n        (this.isMobile && !this.shadowRoot.querySelector(\"pfe-accordion\")) ||\n        (!this.isMobile && this.shadowRoot.querySelector(\"pfe-accordion\"))\n      ) {\n        this.render();\n      }\n\n      let menu;\n\n      if (this.autobuild && this.update) {\n        menu = this.build();\n      } else {\n        menu = this.querySelector(\"ul\");\n      }\n\n      // Move the menu into the shadow DOM\n      if (menu && this.container.innerHTML !== menu.outerHTML.toString()) {\n        this.container.innerHTML = menu.outerHTML.toString();\n      }\n\n      this._updateOffset();\n\n      // Activate initial active item\n      this.active(this.getActive());\n\n      // Attach the event listeners\n      this.items.forEach((item) => {\n        item.querySelector(\"a\").addEventListener(\"click\", this._clickHandler);\n      });\n    }\n\n    this.update = false;\n  }\n\n  /**\n   * @param {} item Accepts an index or the link element itself\n   */\n  active(item) {\n    let idx;\n    let items = this.items;\n\n    if (typeof item === \"number\") idx = item;\n    else idx = items.findIndex((el) => el === item);\n\n    // If idx is less than 0, it could not be found\n    if (idx < 0 || idx >= items.length || !items[idx]) return;\n\n    // If found, clear current active items\n    this.clearActive();\n    this.currentActive = idx;\n\n    const li = items[idx].closest(\"li\");\n    const parentli = li.closest(\"ul\").closest(\"li\");\n    const is_subsection = li.classList.contains(\"sub-section\");\n    const has_subsection = li.classList.contains(\"has-sub-section\");\n\n    // Set the item's active attribute\n    li.setAttribute(\"active\", \"\");\n\n    if (has_subsection) li.setAttribute(\"expand\", \"\");\n    else if (is_subsection) parentli.setAttribute(\"expand\", \"\");\n\n    // Emit event for tracking\n    this.emitEvent(PfeJumpLinksNav.events.activeNavItem, {\n      detail: {\n        activeNavItem: idx,\n      },\n    });\n  }\n\n  getActive() {\n    // If there are no sections, we can't process\n    // @TODO: should this processing even be happening?\n    if (!this.sections) return;\n\n    // Make an array from the node list\n    const sections = [...this.sections];\n\n    // Capture the offset to prevent recalculation below\n    const offset = this.offsetValue;\n\n    // Get all the sections that match this point in the scroll\n    const matches = sections.filter((section, idx) => {\n      const viewportHeight = window.innerHeight || document.documentElement.clientHeight;\n\n      // @TODO: The next logic only works for scrolling down; need to reverse for scrolling up\n      const next = sections[idx + 1];\n      const nextTop = next ? next.getBoundingClientRect().top : 0;\n      const sectionTop = section.getBoundingClientRect().top;\n\n      // If the top of this section is greater than/equal to the offset\n      // and if there is a next item, that item is\n      // or the bottom is less than the height of the window\n      return (\n        sectionTop >= 0 &&\n        sectionTop <= viewportHeight &&\n        (!next ||\n          (nextTop >= offset &&\n            // Check whether the previous section is closer than the next section\n            offset - sectionTop < nextTop - offset))\n      );\n    });\n\n    // Don't change anything if no items were found\n    if (!matches || matches.length === 0) return;\n\n    // Identify the first one queried as the current section\n    return sections.indexOf(matches[0]);\n  }\n\n  inactive(item) {\n    let idx;\n    let items = this.items;\n\n    if (typeof item === \"number\") idx = item;\n    else idx = items.findIndex((el) => el === item);\n\n    // If idx is less than 0, it could not be found\n    if (idx < 0 || idx >= items.length || !items[idx]) return;\n\n    const li = items[idx].closest(\"li\");\n    const parentli = li.closest(\"ul\").closest(\"li\");\n    const is_subsection = li.classList.contains(\"sub-section\");\n    const has_subsection = li.classList.contains(\"has-sub-section\");\n\n    li.removeAttribute(\"active\");\n\n    if (has_subsection) li.removeAttribute(\"expand\");\n    else if (is_subsection) parentli.removeAttribute(\"expand\");\n  }\n\n  clearActive() {\n    const items = this.items;\n    items.forEach((item) => this.inactive(item));\n  }\n\n  /**\n   * Attach the listeners\n   * @param {Object} Definition of available events\n   */\n  _attachListeners(events) {\n    // Listen for a change in the panel content if the navigation is autobuilt\n    // need to reflect changes in the navigation markup\n    if (this.autobuild) {\n      document.addEventListener(PfeJumpLinksNav.events.change, this._panelChangedHandler);\n    }\n\n    window.addEventListener(events.resize, this._resizeHandler);\n    window.addEventListener(events.scroll, this._scrollHandler);\n    // window.addEventListener(events.keyup, this._keyboardHandler);\n\n    // If the stickiness changes, update the sticky navigation offset\n    window.addEventListener(events.stuck, this._updateOffset);\n\n    // @TODO respond to URL change? Ensure anchor link alignment accounts for sticky nav(s)\n    // window.addEventListener(\"locationchange\", (evt) => console.log(\"locationchange\", evt));\n    // window.addEventListener(\"hashchange\", (evt) => console.log(\"hashchange\", evt));\n  }\n\n  /**\n   * Remove the listeners\n   * @param {Object} Definition of available events\n   */\n  _dettachListeners(events) {\n    this._observer.disconnect();\n\n    document.removeEventListener(events.change, this._panelChangedHandler);\n\n    window.removeEventListener(events.resize, this._resizeHandler);\n    window.removeEventListener(events.scroll, this._scrollHandler);\n    window.removeEventListener(events.keyup, this._keyboardHandler);\n\n    // If the stickiness changes, update the sticky navigation offset\n    window.removeEventListener(events.stuck, this._updateOffset);\n\n    // @TODO respond to URL change? Ensure anchor link alignment accounts for sticky nav(s)\n    // window.removeEventListener(\"locationchange\", (evt) => console.log(\"locationchange\", evt));\n    // window.removeEventListener(\"hashchange\", (evt) => console.log(\"hashchange\", evt));\n  }\n\n  _buildItem(data, isSubSection = false) {\n    let item = document.createElement(\"li\");\n    item.className = `${this.tag}__item`;\n\n    let link = document.createElement(\"a\");\n    link.className = `${this.tag}__link`;\n    link.href = `#${data.target}`;\n    link.setAttribute(\"data-target\", data.target);\n    link.innerHTML = data.content;\n\n    if (data.subsection) item.classList.add(\"has-sub-section\");\n    if (isSubSection) item.classList.add(\"sub-section\");\n\n    item.appendChild(link);\n    return item;\n  }\n\n  _buildWrapper(className = \"pfe-jump-links-nav\") {\n    let wrapper = document.createElement(\"ul\");\n    wrapper.className = className;\n    return wrapper;\n  }\n\n  _siblingJumpLinks(filterMethod = (item) => item !== this) {\n    return PfeJumpLinksNav.instances.filter(filterMethod);\n  }\n\n  /**\n   * Report the height of the jump links navigation\n   */\n  _reportHeight() {\n    let height = 0;\n\n    // Check all elements to see if any are sticky and in horizontal or mobile state\n    const stuckItems = this._siblingJumpLinks((item) => item.stuck && (item.horizontal || item.isMobile));\n\n    if (stuckItems.length > 0) {\n      // Get the height of the last sticky element in the DOM tree\n      height = stuckItems[stuckItems.length - 1].getBoundingClientRect().height;\n\n      // @TODO Do other items in the stack need to be unstuck?\n      // Unstick the other items by popping off the last item in the array\n      // stuckItems.pop();\n      // Set the rest of the items stuck attribute to false\n      // stuckItems.forEach(item => item.stuck = false);\n    }\n\n    // Check if we need to update the variable:\n    const currentHeight = this.cssVariable(`pfe-jump-links--Height--actual`, null, document.body);\n    if (!currentHeight || parseInt(currentHeight, 10) !== height) {\n      // If there are no other sticky jump links, set the height on the body\n      // Note: we set it on the body to be consistent with pfe-navigation\n      this.cssVariable(`pfe-jump-links--Height--actual`, `${height}px`, document.body);\n    }\n  }\n\n  /**\n   * Validate the provided light DOM and provide helpful console messages\n   * to facilitate debugging\n   */\n  _isValidLightDom() {\n    let valid = true;\n\n    if ((!this.hasLightDOM() || (!this.querySelector(\"ul\") && !this.querySelector(\"ol\"))) && !this.autobuild) {\n      this.warn(\n        `This component requires a list in the light DOM to .\\nAlternatively, add the \\`autobuild\\` attribute to dynamically generate the list from the provided panel.`\n      );\n      valid = false;\n    }\n\n    if (this.logo && !this.horizontal) {\n      this.warn(`The logo slot is NOT supported in vertical jump links.`);\n      // Gentle warning, CSS force-hides this content\n      // valid = false;\n    }\n\n    if (this.cta && !this.horizontal) {\n      this.warn(`The link slot is NOT supported in vertical jump links.`);\n      // Gentle warning, CSS force-hides this content\n      // valid = false;\n    }\n\n    // Gentle warning\n    if (Number.isInteger(Number(this.customVar))) {\n      this.warn(\n        \"Using an integer with a unit is not supported for custom property --pfe-jump-links-panel--offset. The component strips the unit using parseInt(). For example so 1rem would become 1 and behave as if you had entered 1px. Values with a pixel unit will behave correctly.\"\n      );\n    }\n\n    return valid;\n  }\n\n  updateItem(item, nested = false) {\n    item.classList = `${this.tag}__item${nested ? ` sub-section` : ``}`;\n    const link = item.querySelector(\"a\");\n    link.classList = `${this.tag}__link`;\n    const nestedList = item.querySelector(\"ul\");\n    if (nestedList) {\n      item.classList.add(\"has-sub-section\");\n      nestedList.querySelectorAll(\":scope > li\").forEach((item) => this.updateItem(item, true));\n    }\n  }\n\n  updateLightDOM() {\n    const menu = this.querySelector(\"ul\");\n\n    // Update the mark-up in the light DOM if necessary\n    // If the class is not already on the list wrapper\n    menu.classList = this.tag;\n\n    // Ensure valid identifiers on the provided mark-up\n    menu.querySelectorAll(\":scope > li\").forEach((item) => this.updateItem(item));\n  }\n\n  _toShadowDOM(menu) {\n    if (this.container.innerHTML !== menu.outerHTML.toString()) {\n      this.container.innerHTML = menu.outerHTML.toString();\n    }\n\n    // Attach the event listeners\n    this.links.forEach((link) => {\n      link.addEventListener(\"click\", this._clickHandler);\n    });\n  }\n\n  _checkVisible() {\n    this.isVisible =\n      this.getBoundingClientRect().top <= document.documentElement.clientHeight &&\n      this.getBoundingClientRect().right >= 0 &&\n      this.getBoundingClientRect().bottom >= 0 &&\n      this.getBoundingClientRect().left <= document.documentElement.clientWidth;\n\n    return this.isVisible;\n  }\n\n  // This updates the offset value on this component based on the reported offset height on the document\n  _updateOffset() {\n    this._reportHeight();\n\n    // Set the offset on the nav element\n    if (this.horizontal) this.style.top = `${this.offsetValue}px`;\n    else this.style.top = `${this.offsetValue + 20}px`;\n  }\n\n  /**\n   * Click events on the navigation items\n   * Prevents conflicts between scroll state and user choice\n   * @param {ClickEvent} evt\n   */\n  _clickHandler(evt) {\n    const link = evt.target;\n    const li = link.closest(`.${this.tag}__item`);\n\n    // Set this item as active\n    this.active(li);\n\n    // Escaping here if no sections are defined and letting default behavior\n    // handle the scrolling\n    if (!this.sections) return;\n\n    const idx = [...this.sections].findIndex((item) => item.id === link.hash.replace(\"#\", \"\"));\n\n    // Escaping if we can't find this link in our sections\n    if (idx < 0) return;\n\n    // If we have defined sections, use custom scrolling placement\n    evt.preventDefault();\n\n    this._clicked = true;\n\n    // Update the URL but don't impact the back button\n    history.replaceState({}, \"\", link.href);\n\n    this.scrollToSection(idx);\n  }\n\n  /**\n   * This handles scrolling to a section in the panel on click\n   * @param {Number} Index of the section to scroll-to\n   * @TODO On page load, if an anchor exists, fire this event\n   */\n  scrollToSection(idx) {\n    // Get the offset value to scroll-to\n    const section = this.sections[idx];\n    const offset = this.offsetValue;\n\n    // Update stickiness if necessary\n    this.stuck = !!(this.getBoundingClientRect().top === offset);\n\n    // Initialize the target we want to scroll to\n    let scrollTarget = window.pageYOffset + section.getBoundingClientRect().top;\n\n    // If the section uses the spacers, don't include the calculations below\n    if (!section.classList.contains(\"pfe-jump-links__section--spacer\")) {\n      // Top of the section minus the calculated offset via nav\n      scrollTarget = scrollTarget - offset;\n\n      // Account for it's height as well\n      // this.offsetVar does not account for this because this only affects scrolling to sections\n      let height = 0;\n\n      if (this.horizontal) height = this.getBoundingClientRect().height;\n\n      // On mobile, get the accordion-header height rather than the height of the full component\n      // this prevents the height from taking into account the open accordion tray\n      if (this.isMobile) {\n        const accordionHeader = this.shadowRoot.querySelector(\"pfe-accordion-header\");\n        height = accordionHeader.getBoundingClientRect().height - this.getBoundingClientRect().height;\n      }\n\n      if (height > 0) scrollTarget = scrollTarget - height;\n    }\n\n    // If the section has a custom offset attribute defined, use that; default to 20\n    // 20 default is so that the headings aren't smooshed against the sticky navigation\n    let itemOffset = 20;\n    if (section.hasAttribute(\"offset\")) {\n      // Use the property casting from PFElement\n      const sectionOffsetProp = this._castPropertyValue(\n        {\n          type: Number,\n        },\n        parseInt(section.getAttribute(\"offset\"), 10)\n      );\n      if (sectionOffsetProp) itemOffset = sectionOffsetProp;\n    } else if (this.panel && this.panel.offset) {\n      itemOffset = this.panel.offset;\n    }\n\n    // This is the point that we're scrolling to\n    scrollTarget = scrollTarget - itemOffset;\n\n    // Prevent negative position scrolling\n    if (scrollTarget < 0) scrollTarget = 0;\n\n    // Use JS to fire the scroll event\n    // smooth-scroll CSS support is spotty and complicated\n    // especially as relates to offsets; this was a faster\n    // solution for managing state changes\n    window.scroll({\n      top: scrollTarget,\n      behavior: \"smooth\",\n    });\n\n    // Close the accordion\n    this.closeAccordion();\n\n    // Update stickiness if necessary\n    this.stuck = !!(this.getBoundingClientRect().top === offset);\n\n    setTimeout(() => {\n      // Update the focus state\n      section.focus();\n\n      this._clicked = false;\n    }, 1000);\n  }\n\n  /**\n   * Sticky state handler; emits event with change in sticky state\n   * @param {String} oldVal\n   * @param {String} newVal\n   */\n  _stickyHandler(oldVal, newVal) {\n    // If there is no change, do nothing\n    if (oldVal === newVal) return;\n\n    this._reportHeight();\n\n    this.emitEvent(PfeJumpLinksNav.events.stuck, {\n      detail: {\n        stuck: newVal,\n      },\n    });\n  }\n\n  /**\n   * Scrolling event processing; control stickiness and active state\n   */\n  _scrollHandler() {\n    // If this is from a click event, do nothing\n    if (this._clicked) return;\n\n    clearTimeout(this._scrollHandler._tId);\n    this._scrollHandler._tId = setTimeout(() => {\n      // Check the current visibility of this jump links navigation\n      this._checkVisible();\n\n      // If this navigation is not visible, exit processing now\n      if (!this.isVisible) return;\n\n      this.stuck = !!(this.getBoundingClientRect().top === this.offsetValue);\n\n      const currentIdx = this.getActive();\n\n      // If that section isn't already active,\n      // remove active from the other links and make it active\n      if (currentIdx >= 0 && currentIdx !== this.currentActive) {\n        this.currentActive = currentIdx;\n\n        this.active(currentIdx);\n      }\n    }, 10);\n  }\n\n  /**\n   * Rebuild the navigation on resize if the view has changed from mobile->desktop or vise versa\n   */\n  _resizeHandler() {\n    this.rebuild();\n  }\n\n  /**\n   * Run the rebuild when the mutation observer sees change\n   */\n  _mutationHandler() {\n    // Ignore the mutation if using autobuild\n    if (this.autobuild) return;\n\n    this.update = true;\n    this.rebuild();\n  }\n\n  /**\n   * Panel changed event\n   */\n  _panelChangedHandler() {\n    // If this is manually built, we don't need to process the panel change\n    if (!this.autobuild) return;\n\n    this.update = true;\n\n    // Reset the sections object to allow refetching\n    this._sections = null;\n\n    this.rebuild();\n  }\n\n  /**\n   * Keyboard event manager\n   */\n  // @TODO: Add a keyboard handler when focus is set on the parent via keyboard; should expand\n  // _keyboardHandler() {\n  // Handle the focus state to expand parent when child is focused\n  // }\n}\n\nexport default PfeJumpLinksNav;\n","/*!\n * PatternFly Elements: PfeJumpLinks 1.12.3\n * @license\n * Copyright 2021 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport PFElement from \"../../pfelement/dist/pfelement.js\";\n\nclass PfeJumpLinksPanel extends PFElement {\n\n  // Injected at build-time\n  static get version() {\n    return \"1.12.3\";\n  }\n\n  static get tag() {\n    return \"pfe-jump-links-panel\";\n  }\n\n  /**\n   * No custom styles for the panel or template mark-up; just a slot\n   */\n  get html() {\n    return `<slot></slot>`;\n  }\n\n  static get events() {\n    return {\n      change: `${this.tag}:change`,\n    };\n  }\n\n  static get observer() {\n    return {\n      childList: true,\n      subtree: true,\n      // characterData: true,\n      // attributes: true,\n    };\n  }\n\n  static get PfeType() {\n    return PFElement.PfeTypes.Content;\n  }\n\n  static get properties() {\n    return {\n      offset: {\n        title: \"Offset\",\n        type: Number,\n      },\n      scrolltarget: {\n        title: \"Scroll target\",\n        type: String,\n      },\n      spacers: {\n        title: \"Inject spacers\",\n        type: Boolean,\n        default: false,\n        observer: \"_makeSpacers\",\n      },\n      // @TODO: Deprecated in 1.0\n      oldOffset: {\n        alias: \"offset\",\n        attr: \"pfe-c-offset\",\n      },\n      // @TODO: Deprecated in 1.0\n      oldScrolltarget: {\n        alias: \"scrolltarget\",\n        attr: \"pfe-c-scrolltarget\",\n      },\n    };\n  }\n  /**\n   * @param {NodeList} Returns all elements from the panel's light DOM with the class .pfe-jump-links-panel__section\n   */\n  get sections() {\n    return this.querySelectorAll(`.${this.tag}__section`);\n  }\n\n  constructor() {\n    super(PfeJumpLinksPanel, { type: PfeJumpLinksPanel.PfeType });\n\n    this._init = this._init.bind(this);\n    this._makeSpacers = this._makeSpacers.bind(this);\n    this._isValidMarkup = this._isValidMarkup.bind(this);\n\n    this._observer = new MutationObserver(() => {\n      this._init();\n\n      // Emit an event indicating a change to the panel\n      this.emitEvent(PfeJumpLinksPanel.events.change, {});\n    });\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this._init();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._observer.disconnect();\n  }\n\n  _isValidMarkup() {\n    if ([...this.sections].length === 0) {\n      this.warn(\n        `This panel does not contain any headings labeled with the ${this.tag}__section class. Please add that class and an ID to any heading you would like surfaced in the jump links navigation.`\n      );\n    }\n  }\n\n  _makeSpacers() {\n    if (!this.spacers) return;\n    if (!this.sections || [...this.sections].length <= 0) return;\n\n    // Disconnect the mutation observer to update the spacers\n    this._observer.disconnect();\n\n    [...this.sections].forEach((section) => {\n      const parentEl = section.parentNode;\n      let spacer = section.previousElementSibling;\n\n      // If the previous element is not a spacer, create one\n      if (!spacer || !spacer.classList.contains(\"pfe-jump-links__section--spacer\")) {\n        spacer = document.createElement(\"div\");\n        spacer.classList.add(\"pfe-jump-links__section--spacer\");\n        parentEl.insertBefore(spacer, section);\n      }\n\n      // Move the ID from the section to the spacer\n      if (section.id && (!spacer.id || spacer.id !== section.id)) {\n        spacer.id = section.id;\n        section.removeAttribute(\"id\");\n        section.setAttribute(\"data-target\", spacer.id);\n      }\n\n      spacer.style.marginTop = `calc(-1 * (var(--pfe-navigation--Height--actual, 0px) + var(--pfe-jump-links--Height--actual, 0px)))`;\n      spacer.style.height = `calc(var(--pfe-navigation--Height--actual, 0px) + var(--pfe-jump-links--Height--actual, 0px))`;\n    });\n\n    // Set up the mutation observer\n    this._observer.observe(this, PfeJumpLinksPanel.observer);\n  }\n\n  _init() {\n    // Validate and throw warnings about improper markup\n    this._isValidMarkup();\n\n    // Adding spacers to the panel is opt-in\n    // note: this was because determining the scroll-to point\n    // was easier with the scroll animation than working through\n    // cross-browser support for smooth scroll CSS (looking at Safari)\n    this._makeSpacers();\n  }\n}\n\nexport default PfeJumpLinksPanel;\n","/*!\n * PatternFly Elements: PfeJumpLinks 1.12.3\n * @license\n * Copyright 2021 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport PFElement from \"../../pfelement/dist/pfelement.js\";\n\nimport PfeJumpLinksNav from \"./pfe-jump-links-nav.js\";\nimport PfeJumpLinksPanel from \"./pfe-jump-links-panel.js\";\n\n// @TODO Migrate pfe-jump-links-nav to pfe-jump-links in 2.0?\n// class PfeJumpLinks extends PfeJumpLinksNav {\n//     static get tag() {\n//       return \"pfe-jump-links\";\n//     }\n// }\n// PFElement.create(PfeJumpLinks);\n\nPFElement.create(PfeJumpLinksNav);\nPFElement.create(PfeJumpLinksPanel);\n\nexport default { PfeJumpLinksNav, PfeJumpLinksPanel };\n"],"names":["Array","prototype","findIndex","Object","defineProperty","value","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","Element","closest","s","el","matches","parentElement","parentNode","nodeType","PfeJumpLinksNav","PFElement","version","html","isMobile","srText","noHeader","horizontal","tag","templateUrl","styleUrl","PfeType","PfeTypes","Content","events","activeNavItem","change","stuck","resize","scroll","keyup","observer","childList","subtree","characterData","properties","autobuild","title","type","Boolean","default","String","color","values","offset","Number","mobileBreakpoint","accordionCollapseTiming","attr","oldAutobuild","alias","oldHorizontal","oldColor","window","matchMedia","data","breakpoint","lg","match","parseInt","header","getSlot","cta","logo","container","shadowRoot","querySelector","panel","NodeItem","_panel","hasAttribute","setAttribute","id","emitEvent","target","document","panels","Promise","all","customElements","whenDefined","then","get","instances","panelWithId","filter","getAttribute","randomId","warn","sections","NodeList","_sections","ids","querySelectorAll","map","link","href","split","pop","join","links","items","offsetValue","offsetVariable","cssVariable","_castPropertyValue","height","navHeightVariable","stickyJumpLinks","[object Object]","super","currentActive","isBuilding","isVisible","update","_clicked","build","bind","rebuild","active","inactive","clearActive","getActive","closeAccordion","scrollToSection","updateItem","updateLightDOM","_buildWrapper","_buildItem","_isValidLightDom","_reportHeight","_updateOffset","_checkVisible","_stickyHandler","_clickHandler","_scrollHandler","_resizeHandler","_mutationHandler","_panelChangedHandler","_observer","MutationObserver","connectedCallback","isIE11","_attachListeners","menu","_toShadowDOM","visible","idx","observe","disconnectedCallback","_dettachListeners","child","wrapper","currentWrapper","previousWrapper","i","sectionHeading","is_subsection","classList","contains","has_subsection","spacer","previousElementSibling","replace","content","textContent","subsection","appendChild","innerHTML","accordion","setTimeout","collapseAll","render","outerHTML","toString","forEach","item","addEventListener","li","parentli","detail","section","viewportHeight","innerHeight","documentElement","clientHeight","next","nextTop","getBoundingClientRect","top","sectionTop","indexOf","removeAttribute","disconnect","removeEventListener","_keyboardHandler","isSubSection","createElement","className","add","filterMethod","stuckItems","_siblingJumpLinks","currentHeight","body","valid","hasLightDOM","isInteger","customVar","nested","nestedList","right","bottom","left","clientWidth","style","evt","hash","preventDefault","history","replaceState","scrollTarget","pageYOffset","itemOffset","sectionOffsetProp","behavior","focus","oldVal","newVal","clearTimeout","_tId","currentIdx","PfeJumpLinksPanel","scrolltarget","spacers","oldOffset","oldScrolltarget","_init","_makeSpacers","_isValidMarkup","parentEl","insertBefore","marginTop","create"],"mappings":"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"}