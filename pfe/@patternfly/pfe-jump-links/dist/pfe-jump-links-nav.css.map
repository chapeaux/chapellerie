{"version":3,"sources":["pfe-jump-links-nav.scss","../../pfe-sass/extends/_extends.scss","pfe-jump-links-nav.css","../../pfe-sass/functions/_custom-properties.scss","../../pfe-sass/mixins/_custom-properties.scss","../../pfe-sass/mixins/_containers.scss","../../pfe-sass/mixins/_mixins.scss"],"names":[],"mappings":"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","file":"pfe-jump-links-nav.css","sourcesContent":["// Please see the pfe-sass README for guidance on using these tools\n@import \"../../pfe-sass/pfe-sass\";\n\n$LOCAL: jump-links;\n\n$LOCAL-VARIABLES: (\n  horizontal-spacer: calc(#{pfe-var(container-padding)} * 2),\n  vertical-spacer: calc(#{pfe-var(container-padding)} * 2),\n  BorderColor: pfe-var(ui-accent),\n  FontSize: pfe-var(FontSize--md),\n\n  // Initialize at mobile breakpoint\n  Width: auto,\n\n  heading: (\n    FontSize: pfe-var(FontSize--sm)\n  ),\n\n  link: (\n    horizontal-spacer: calc(#{pfe-var(content-spacer)} / 3),\n    vertical-spacer: calc(#{pfe-var(content-spacer)} / 6),\n  )\n);\n\n:host {\n  box-sizing: border-box;\n  font-family: pfe-var(font-family);\n  font-weight: pfe-var(font-weight--normal);\n  display: block;\n  position: sticky;\n  z-index: pfe-zindex(jumplinks);\n  top: 0;\n  padding: 0;\n}\n\n@each $color in (darkest, darker, lightest, lighter) {\n  :host([horizontal][color=\"#{$color}\"]) {\n    @media(min-width: #{pfe-breakpoint(lg)}) {\n      background-color: pfe-var(surface--#{$color});\n      --context: #{pfe-var(surface--#{$color}--context)};\n      @include pfe-set-broadcast-context(pfe-fetch(surface--#{$color}--context));\n    }\n  }\n}\n\n:host([stuck][horizontal]) {\n  box-shadow: pfe-var(box-shadow--sm);\n}\n\n// Shadow DOM slot tag\n.pfe-jump-links-nav__heading {\n  margin-top: 0;\n  margin-bottom: pfe-var(content-spacer--body--sm);\n}\n\n// Typography styles for default or custom heading\n.pfe-jump-links-nav__heading h3,\n::slotted([slot=\"heading\"]) {\n  color: pfe-broadcasted(text);\n  margin: 0;\n  font-size: pfe-local(FontSize, $region: heading);\n  font-weight: pfe-var(font-weight--normal);\n  text-transform: pfe-local(TextTransform, $region: heading, $fallback: uppercase);\n}\n\nslot[name=\"heading\"][sr-only] {\n  @extend %sr-only;\n}\n\nslot[name=\"logo\"] {\n  display: none;\n}\n\nslot[name=\"cta\"] {\n  display: none;\n}\n\nnav {\n  visibility: visible;\n  margin: 0;\n  list-style: none;\n  padding: 0;\n\n  pfe-accordion-panel & {\n    width: 100%;\n  }\n\n  :host([horizontal][no-header]) & {\n    @media(min-width: #{pfe-breakpoint(lg)}) {\n      padding-top: 1px;\n      padding-bottom: 0;\n    }\n  }\n}\n\n#container {\n  padding: 32px 0;\n  pfe-accordion-panel & {\n    padding: 24px 0;\n  }\n}\n\nul {\n  padding: 0;\n  margin: 0;\n  border-left: pfe-var(surface--border-width) pfe-var(surface--border-style) pfe-var(ui-disabled);\n}\n\nli {\n  display: block;\n  position: relative;\n  \n  margin-left: calc(#{pfe-var(surface--border-width)} * -1);\n\n  .sub-nav & {\n    margin-left: 0;\n  }\n\n  &[expand] {\n    ul {\n      height: auto;\n      flex: 1;\n    }\n\n    .sub-nav {\n      display: table;\n      height: auto;\n    }\n  }\n\n  // Active state bar; uses pseudo-element, not border, to prevent angled top/bottom\n  &::before {\n    @include accent-bar(vertical);\n    background-color: transparent;\n  }\n\n  &:not([active],[expand]):hover::before,\n  li:not([expand]) &:hover::before {\n    background-color: pfe-var(ui-disabled);\n  }\n\n  &[expand]::before,\n  &[active]::before {\n    background-color: pfe-local(accent, $fallback: pfe-local(BorderColor));\n    // This z-index prevents nested elements from showing the hover state\n    z-index: 2;\n  }\n}\n\na {\n  position: relative;\n\n  color: pfe-var(ui-disabled--text);\n  font-size: pfe-local(FontSize);\n  text-decoration: none;\n  line-height: pfe-var(line-height);\n\n  padding: calc(#{pfe-local(vertical-spacer, $region: link)} * 2) calc(#{pfe-local(horizontal-spacer, $region: link)} * 2);\n\n  &,\n  a:focus + ul > li > &,\n  li:hover &,\n  li[expand] & {\n    display: table;\n  }\n\n  // Darken the text on hover or when an item is active\n  li > &:hover,\n  li[active] > & {\n    color: pfe-broadcasted(text);\n  }\n\n  // Note: there is no ui-disabled--text--on-dark to pull from\n  @each $context in (dark, saturated) {\n    :host([on=\"#{$context}\"]) & {\n      color: pfe-var(text--muted--on-#{$context});\n    }\n  }\n\n  .has-sub-section & {\n    padding-bottom: pfe-local(vertical-spacer, $region: link);\n  }\n\n  .sub-section & {\n    margin-left: calc(#{pfe-var(container-spacer)} * 0.75);\n    font-size: calc(#{pfe-local(FontSize)} * 0.85);\n    padding: pfe-local(vertical-spacer, $region: link) calc(#{pfe-local(horizontal-spacer, $region: link)} * 2);\n\n    @media(min-width: #{pfe-breakpoint(lg)}) {\n      display: none;\n    }\n    \n    &:last-child {\n      padding-bottom: pfe-local(horizontal-spacer, $region: link);\n    }\n  }\n\n  // Creating the custom focus state\n  &:focus:focus-visible {\n    @include focus-ring;\n  }\n}\n\nul ul {\n  // height: 0;\n\n  margin: 0;\n  padding: 0;\n\n  overflow-y: hidden;\n  // transition: flex pfe-var(animation-speed) pfe-var(animation-timing);\n  transition: flex 1s linear;\n\n  &,\n  li {\n    border-left: none !important;\n  }\n}\n\npfe-accordion {\n  // Custom border\n  border: pfe-var(surface--border-width) pfe-var(surface--border-style) pfe-var(ui-disabled);\n\n  --context: light;\n  --pfe-accordion--BackgroundColor: #{pfe-var(surface--lightest)};\n\n  :host([color=\"darkest\"]) & {\n    --context: dark;\n    --pfe-accordion--BackgroundColor: #{pfe-var(surface--darkest)};\n    --pfe-theme--color--ui-accent--on-dark: transparent;\n  }\n}\n\npfe-accordion,\npfe-accordion-panel[expanded],\npfe-accordion-panel.animating {\n  --pfe-accordion--accent: transparent;\n  --pfe-accordion--BorderColor: transparent;\n  --pfe-accordion--accent: transparent;\n  --pfe-accordion--BorderTopWidth: 0;\n  --pfe-accordion--BorderBottomWidth: 0;\n  --pfe-accordion--panel-container--Padding: 0 0 0 calc(var(--pfe-accordion__base--Padding,var(--pfe-theme--container-spacer,1rem)) * 1.5);\n}\n\n// Variations for horizontal styling\n:host([horizontal]) {\n  @media screen and (min-width: #{pfe-breakpoint(lg)}) {\n    width: 100%;\n\n    background-color: pfe-local(BackgroundColor, $fallback: pfe-var(surface--lightest));\n    --context: #{pfe-local(context, $fallback: pfe-var(surface--lightest--context))};\n\n    z-index: calc(#{pfe-zindex(jumplinks)} + 1);\n    border: none;\n    padding: 0;\n\n    .pfe-jump-links-nav__heading {\n      flex-basis: 100%;\n      align-self: center;\n      justify-content: center;\n\n      display: block;\n\n      margin: 0;\n      padding-bottom: pfe-var(container-padding);\n      border-bottom: pfe-var(surface--border-width) pfe-var(surface--border-style) pfe-var(surface--border);\n    }\n\n    .pfe-jump-links-nav__heading h3,\n    ::slotted([slot=\"heading\"]) {\n      text-align: pfe-local(TextAlign, $region: heading, $fallback: center);\n    }\n\n    ::slotted([slot=\"logo\"]) {\n      position: absolute;\n      max-height: calc(#{pfe-var(container-spacer)} * 3.5);\n      max-width: calc(#{pfe-var(container-spacer)} * 14);\n      top: pfe-var(container-spacer);\n      left: calc(#{pfe-var(container-spacer)} * 4);\n    }\n\n    ::slotted([slot=\"cta\"]) {\n      position: absolute;\n      top:   calc(#{pfe-var(container-spacer)} * 1);\n      right: calc(#{pfe-var(container-spacer)} * 4);\n    }\n  }\n\n  nav {\n    @media screen and (min-width: #{pfe-breakpoint(lg)}) {\n      display: flex;\n      flex-flow: row wrap;\n      padding-top: 32px;\n      padding-bottom: 8px;\n      max-width: pfe-local(Width, $fallback: calc(#{pfe-breakpoint(lg)} - (#{pfe-local(Padding--horizontal)} * 4) ));\n    }\n\n    @media screen and (min-width: #{pfe-breakpoint(xl)}) {\n      max-width: pfe-local(Width, $fallback: calc(#{pfe-breakpoint(xl)} - (#{pfe-local(Padding--horizontal)} * 4) ));\n    }\n  }\n  \n  @media screen and (min-width: #{pfe-breakpoint(lg)}) {\n    #container {\n      padding: 0;\n      flex-grow: 1;\n      display: flex;\n      justify-items: center;\n      flex-direction: column;\n    }\n\n    ul {\n      border: none;\n      text-align: center;\n      flex-grow: 1;\n      display: flex;\n      padding: 0;\n      width: auto;\n      margin: 0 auto;\n    }\n\n    li {\n      margin-left: 0;\n      padding: 0;\n      display: flex;\n      align-items: center;\n      margin-top: calc(#{pfe-var(surface--border-width)} * -1);\n\n      &::before {\n        height: pfe-var(surface--border-width--heavy);\n        width: 100%;\n      }\n    }\n\n    a {\n      padding: 16px;\n      text-decoration: none;\n      font-size: 16px;\n      color: pfe-broadcasted(text--muted); // was: #6a6e73\n      &[active],\n      &:hover {\n        color: pfe-broadcasted(text); // was: #151515\n      }\n    }\n  }\n}\n\n:host([hidden]) {\n  display: none !important;\n}\n","// @todo Change to mixins; no efficiency gain with placeholders in web components\n\n/// Clear box element styles\n%reset-box {\n  margin: 0;\n  padding: 0;\n}\n\n/// Clear list styles\n%reset-list {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n/// Clear button styles\n%reset-button {\n  background-color: transparent;\n  border: none;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n}\n\n/// Set up a container element\n%container {\n  position: relative;\n  display: block;\n  width: 100%;\n  padding: pfe-var(container-padding);\n}\n\n/// Screen-reader only content\n%sr-only {\n  position: absolute;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  width: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n}\n\n/// Fallback surface styles for IE11 only\n%fallback-surface {\n  @include browser-query(ie11) {\n    background-color: pfe-fetch(surface--lightest) !important;\n    color: pfe-fetch(text) !important;\n  }\n}\n\n/// Fallback text styles for IE11 only\n%fallback-text {\n  @include browser-query(ie11) {\n    color: pfe-fetch(text) !important;\n  }\n}\n","slot[name=\"heading\"][sr-only] {\n  position: absolute;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  width: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n}\n\n:host {\n  box-sizing: border-box;\n  font-family: var(--pfe-theme--font-family, \"Red Hat Text\", \"RedHatText\", \"Overpass\", Overpass, Arial, sans-serif);\n  font-weight: var(--pfe-theme--font-weight--normal, 400);\n  display: block;\n  position: sticky;\n  z-index: var(--pfe-theme--zindex--jumplinks, 80);\n  top: 0;\n  padding: 0;\n}\n\n@media (min-width: 992px) {\n  :host([horizontal][color=\"darkest\"]) {\n    background-color: var(--pfe-theme--color--surface--darkest, #151515);\n    --context: var(--pfe-theme--color--surface--darkest--context, dark);\n    --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n    --pfe-broadcasted--text--muted: var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);\n    --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #73bcf7);\n    --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #bee1f4);\n    --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #bee1f4);\n    --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #bee1f4);\n    --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration--on-dark, none);\n    --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover--on-dark, underline);\n    --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus--on-dark, underline);\n    --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited--on-dark, none);\n  }\n}\n\n@media (min-width: 992px) {\n  :host([horizontal][color=\"darker\"]) {\n    background-color: var(--pfe-theme--color--surface--darker, #3c3f42);\n    --context: var(--pfe-theme--color--surface--darker--context, dark);\n    --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n    --pfe-broadcasted--text--muted: var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);\n    --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #73bcf7);\n    --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #bee1f4);\n    --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #bee1f4);\n    --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #bee1f4);\n    --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration--on-dark, none);\n    --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover--on-dark, underline);\n    --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus--on-dark, underline);\n    --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited--on-dark, none);\n  }\n}\n\n@media (min-width: 992px) {\n  :host([horizontal][color=\"lightest\"]) {\n    background-color: var(--pfe-theme--color--surface--lightest, #fff);\n    --context: var(--pfe-theme--color--surface--lightest--context, light);\n    --pfe-broadcasted--text: var(--pfe-theme--color--text, #151515);\n    --pfe-broadcasted--text--muted: var(--pfe-theme--color--text--muted, #6a6e73);\n    --pfe-broadcasted--link: var(--pfe-theme--color--link, #06c);\n    --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover, #004080);\n    --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus, #004080);\n    --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited, #6753ac);\n    --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration, none);\n    --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover, underline);\n    --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus, underline);\n    --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited, none);\n  }\n}\n\n@media (min-width: 992px) {\n  :host([horizontal][color=\"lighter\"]) {\n    background-color: var(--pfe-theme--color--surface--lighter, #f0f0f0);\n    --context: var(--pfe-theme--color--surface--lighter--context, light);\n    --pfe-broadcasted--text: var(--pfe-theme--color--text, #151515);\n    --pfe-broadcasted--text--muted: var(--pfe-theme--color--text--muted, #6a6e73);\n    --pfe-broadcasted--link: var(--pfe-theme--color--link, #06c);\n    --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover, #004080);\n    --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus, #004080);\n    --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited, #6753ac);\n    --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration, none);\n    --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover, underline);\n    --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus, underline);\n    --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited, none);\n  }\n}\n\n:host([stuck][horizontal]) {\n  box-shadow: var(--pfe-theme--box-shadow--sm, 0 0.0625rem 0.125rem 0 rgba(3, 3, 3, 0.12), 0 0 0.125rem 0 rgba(3, 3, 3, 0.06)0 0.0625rem 0.125rem 0 rgba(3, 3, 3, 0.2));\n}\n\n.pfe-jump-links-nav__heading {\n  margin-top: 0;\n  margin-bottom: var(--pfe-theme--content-spacer--body--sm, 0.5rem);\n}\n\n.pfe-jump-links-nav__heading h3,\n::slotted([slot=\"heading\"]) {\n  color: var(--pfe-broadcasted--text, #3c3f42);\n  margin: 0;\n  font-size: var(--pfe-jump-links__heading--FontSize, var(--pf-global--FontSize--sm, 0.875rem));\n  font-weight: var(--pfe-theme--font-weight--normal, 400);\n  text-transform: var(--pfe-jump-links__heading--TextTransform, uppercase);\n}\n\nslot[name=\"logo\"] {\n  display: none;\n}\n\nslot[name=\"cta\"] {\n  display: none;\n}\n\nnav {\n  visibility: visible;\n  margin: 0;\n  list-style: none;\n  padding: 0;\n}\n\npfe-accordion-panel nav {\n  width: 100%;\n}\n\n@media (min-width: 992px) {\n  :host([horizontal][no-header]) nav {\n    padding-top: 1px;\n    padding-bottom: 0;\n  }\n}\n\n#container {\n  padding: 32px 0;\n}\n\npfe-accordion-panel #container {\n  padding: 24px 0;\n}\n\nul {\n  padding: 0;\n  margin: 0;\n  border-left: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--ui-disabled, #d2d2d2);\n}\n\nli {\n  display: block;\n  position: relative;\n  margin-left: calc(var(--pfe-theme--surface--border-width, 1px) * -1);\n}\n\n.sub-nav li {\n  margin-left: 0;\n}\n\nli[expand] ul {\n  height: auto;\n  flex: 1;\n}\n\nli[expand] .sub-nav {\n  display: table;\n  height: auto;\n}\n\nli::before {\n  position: absolute;\n  content: \"\";\n  top: 0px;\n  left: 0px;\n  background-color: transparent;\n  width: calc(var(--pfe-theme--surface--border-width--heavy, 4px) - 0px);\n  height: calc(100% - 0px);\n  background-color: transparent;\n}\n\nli :hover::before,\nli:not([expand]) li:hover::before {\n  background-color: var(--pfe-theme--color--ui-disabled, #d2d2d2);\n}\n\nli[expand]::before, li[active]::before {\n  background-color: var(--pfe-jump-links--accent, var(--pfe-jump-links--BorderColor, var(--pfe-theme--color--ui-accent, #06c)));\n  z-index: 2;\n}\n\na {\n  position: relative;\n  color: var(--pfe-theme--color--ui-disabled--text, #6a6e73);\n  font-size: var(--pfe-jump-links--FontSize, var(--pf-global--FontSize--md, 1rem));\n  text-decoration: none;\n  line-height: var(--pfe-theme--line-height, 1.5);\n  padding: calc(var(--pfe-jump-links__link--vertical-spacer, calc(var(--pfe-theme--content-spacer, 1.5rem) / 6)) * 2) calc(var(--pfe-jump-links__link--horizontal-spacer, calc(var(--pfe-theme--content-spacer, 1.5rem) / 3)) * 2);\n}\n\na,\na:focus + ul > li > a,\nli:hover a,\nli[expand] a {\n  display: table;\n}\n\nli > a:hover,\nli[active] > a {\n  color: var(--pfe-broadcasted--text, #3c3f42);\n}\n\n:host([on=\"dark\"]) a {\n  color: var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);\n}\n\n:host([on=\"saturated\"]) a {\n  color: var(--pfe-theme--color--text--muted--on-saturated, #d2d2d2);\n}\n\n.has-sub-section a {\n  padding-bottom: var(--pfe-jump-links__link--vertical-spacer, calc(var(--pfe-theme--content-spacer, 1.5rem) / 6));\n}\n\n.sub-section a {\n  margin-left: calc(var(--pfe-theme--container-spacer, 1rem) * 0.75);\n  font-size: calc(var(--pfe-jump-links--FontSize, var(--pf-global--FontSize--md, 1rem)) * 0.85);\n  padding: var(--pfe-jump-links__link--vertical-spacer, calc(var(--pfe-theme--content-spacer, 1.5rem) / 6)) calc(var(--pfe-jump-links__link--horizontal-spacer, calc(var(--pfe-theme--content-spacer, 1.5rem) / 3)) * 2);\n}\n\n@media (min-width: 992px) {\n  .sub-section a {\n    display: none;\n  }\n}\n\n.sub-section a:last-child {\n  padding-bottom: var(--pfe-jump-links__link--horizontal-spacer, calc(var(--pfe-theme--content-spacer, 1.5rem) / 3));\n}\n\na:focus:focus-visible {\n  outline: none;\n  position: relative;\n}\n\na:focus:focus-visible::after {\n  position: absolute;\n  content: \"\";\n  top: 0;\n  left: 0;\n  width: calc(100% + var(--pfe-theme--ui--border-width--active, 3px));\n  height: calc(100% + var(--pfe-theme--ui--border-width--active, 3px));\n  border-radius: var(--pfe-theme--ui--border-radius, 2px);\n  border: var(--pfe-theme--ui--border-width--md, 2px) var(--pfe-theme--ui--border-style, solid) transparent;\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  a:focus:focus-visible::after {\n    /* IE10+ */\n    height: 100%;\n  }\n}\n\na:focus:focus-visible:focus::after {\n  border-color: var(--pfe-theme--color--link, #06c);\n}\n\na:focus:focus-visible:focus:not(:focus-visible)::after {\n  border: unset;\n}\n\nul ul {\n  margin: 0;\n  padding: 0;\n  overflow-y: hidden;\n  transition: flex 1s linear;\n}\n\nul ul,\nul ul li {\n  border-left: none !important;\n}\n\npfe-accordion {\n  border: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--ui-disabled, #d2d2d2);\n  --context: light;\n  --pfe-accordion--BackgroundColor: var(--pfe-theme--color--surface--lightest, #fff);\n}\n\n:host([color=\"darkest\"]) pfe-accordion {\n  --context: dark;\n  --pfe-accordion--BackgroundColor: var(--pfe-theme--color--surface--darkest, #151515);\n  --pfe-theme--color--ui-accent--on-dark: transparent;\n}\n\npfe-accordion,\npfe-accordion-panel[expanded],\npfe-accordion-panel.animating {\n  --pfe-accordion--accent: transparent;\n  --pfe-accordion--BorderColor: transparent;\n  --pfe-accordion--accent: transparent;\n  --pfe-accordion--BorderTopWidth: 0;\n  --pfe-accordion--BorderBottomWidth: 0;\n  --pfe-accordion--panel-container--Padding: 0 0 0 calc(var(--pfe-accordion__base--Padding,var(--pfe-theme--container-spacer,1rem)) * 1.5);\n}\n\n@media screen and (min-width: 992px) {\n  :host([horizontal]) {\n    width: 100%;\n    background-color: var(--pfe-jump-links--BackgroundColor, var(--pfe-theme--color--surface--lightest, #fff));\n    --context: var(--pfe-jump-links--context, var(--pfe-theme--color--surface--lightest--context, light));\n    z-index: calc(var(--pfe-theme--zindex--jumplinks, 80) + 1);\n    border: none;\n    padding: 0;\n  }\n  :host([horizontal]) .pfe-jump-links-nav__heading {\n    flex-basis: 100%;\n    align-self: center;\n    justify-content: center;\n    display: block;\n    margin: 0;\n    padding-bottom: var(--pfe-theme--container-padding, 1rem);\n    border-bottom: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n  }\n  :host([horizontal]) .pfe-jump-links-nav__heading h3,\n  :host([horizontal]) ::slotted([slot=\"heading\"]) {\n    text-align: var(--pfe-jump-links__heading--TextAlign, center);\n  }\n  :host([horizontal]) ::slotted([slot=\"logo\"]) {\n    position: absolute;\n    max-height: calc(var(--pfe-theme--container-spacer, 1rem) * 3.5);\n    max-width: calc(var(--pfe-theme--container-spacer, 1rem) * 14);\n    top: var(--pfe-theme--container-spacer, 1rem);\n    left: calc(var(--pfe-theme--container-spacer, 1rem) * 4);\n  }\n  :host([horizontal]) ::slotted([slot=\"cta\"]) {\n    position: absolute;\n    top: calc(var(--pfe-theme--container-spacer, 1rem) * 1);\n    right: calc(var(--pfe-theme--container-spacer, 1rem) * 4);\n  }\n}\n\n@media screen and (min-width: 992px) {\n  :host([horizontal]) nav {\n    display: flex;\n    flex-flow: row wrap;\n    padding-top: 32px;\n    padding-bottom: 8px;\n    max-width: var(--pfe-jump-links--Width, calc(992px - (var(--pfe-jump-links--Padding--horizontal) * 4)));\n  }\n}\n\n@media screen and (min-width: 1200px) {\n  :host([horizontal]) nav {\n    max-width: var(--pfe-jump-links--Width, calc(1200px - (var(--pfe-jump-links--Padding--horizontal) * 4)));\n  }\n}\n\n@media screen and (min-width: 992px) {\n  :host([horizontal]) #container {\n    padding: 0;\n    flex-grow: 1;\n    display: flex;\n    justify-items: center;\n    flex-direction: column;\n  }\n  :host([horizontal]) ul {\n    border: none;\n    text-align: center;\n    flex-grow: 1;\n    display: flex;\n    padding: 0;\n    width: auto;\n    margin: 0 auto;\n  }\n  :host([horizontal]) li {\n    margin-left: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    margin-top: calc(var(--pfe-theme--surface--border-width, 1px) * -1);\n  }\n  :host([horizontal]) li::before {\n    height: var(--pfe-theme--surface--border-width--heavy, 4px);\n    width: 100%;\n  }\n  :host([horizontal]) a {\n    padding: 16px;\n    text-decoration: none;\n    font-size: 16px;\n    color: var(--pfe-broadcasted--text--muted, );\n  }\n  :host([horizontal]) a[active], :host([horizontal]) a:hover {\n    color: var(--pfe-broadcasted--text, #3c3f42);\n  }\n}\n\n:host([hidden]) {\n  display: none !important;\n}\n","////\n/// Tools for leveraging custom property stacks\n/// @group custom-properties\n/// @author castastrophe\n////\n\n/// Get full theme stack with a fallback from the provided map - used by pfe-var and pfe-zindex\n/// @param {String} $category  - Category name to be appended to variables within the map/system\n/// @param {String} $key - Variable name to be used and prepended with --pfe-theme\n/// @param {Map} $map  - Sass map of variables\n/// @param {String} $fallback [null]  - Optional fallback override\n/// @param {Boolean} $use-fallback [true]  - Optional hook to return a stack with no fallback value\n/// @requires $custom-prop-prefix\n/// @return {String} theme stack with fallback value from a sass map\n@function pfe-get-from-map($category, $key, $map, $fallback: null, $prefix: \"#{$custom-prop-prefix}-theme\", $use-fallback: true) {\n    // Start building the variable declaration\n    $var-declaration: \"--#{$prefix}--\";\n    @if $prefix == \"pf-c\" {\n        $var-declaration: \"--#{$prefix}-\";  // one dash at the end\n    }\n    // If the category exists, inject that into the string\n    @if $category != \"\" {\n        $var-declaration: \"#{$var-declaration}#{$category}--\";\n    }\n    // Append the key to the string\n    $var-declaration: \"#{$var-declaration}#{$key}\";\n\n    // If the fallback is not provided but use-fallback is set to true\n    @if $fallback == null and $use-fallback and map-get($map, $key) != null {\n        $fallback: map-get($map, $key);\n    }\n    @if $fallback != null {\n        // Create the variable declaration\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});   \n}\n\n\n\n/// Returns CSS Var for the local component-scoped variable\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $custom-prop-prefix\n/// @see $LOCAL\n/// @example\n///   :host {\n///       padding-top:      #{pfe-local(paddingTop)};\n///       padding-bottom:   #{pfe-local(paddingBottom)};\n///   }\n@function pfe-local($cssvar, $fallback: null, $region: null) {\n    // If a fallback is not defined, use the global variables map\n    @if $fallback == null and length($LOCAL-VARIABLES) > 0 {\n        @if $region == null {\n            $fallback: map-get($LOCAL-VARIABLES, $cssvar);\n        }\n        @else {\n            $submap: map-get($LOCAL-VARIABLES, $region);\n            @if type-of($submap) == \"map\" {\n                $fallback: map-deep-get($LOCAL-VARIABLES, $region, $cssvar);\n            }\n        }\n    }\n\n    // If a region value exists, build the region string\n    @if $region != null {\n        $region: \"__#{$region}\";\n    }\n\n    // Start building the variable declaration\n    $var-declaration: \"--#{$custom-prop-prefix}-#{$LOCAL}#{$region}--#{to-string($cssvar, '--')}\";\n    \n    @if $fallback != null {\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});\n}\n\n/// Fetches a CSS variable stack for broadcasted variables, providing a hook for context\n/// to influence the styles of children elements such as p tags or links.\n/// @param {String} $broadcast - name of the broadcast variable to apply\n/// @requires {String} $custom-prop-prefix - Name of repo, which is \"pfe\"\n/// @example - scss\n///   :host {\n///     color: pfe-broadcasted(link);\n///   }\n/// @example - css\n///   :host {\n///     color: var(--pfe-broadcasted--link, #06c);\n///   }\n@function pfe-broadcasted($broadcast, $use-fallback: true) {\n    $fallback: \"\";\n    @if $use-fallback {\n        $fallback: \", #{map-get($pfe-broadcasted, #{to-string($broadcast,'--')})}\";\t\n    }\n    @if not index($BROADCAST-VARS, first(str-split($broadcast, '--'))) {\n      @error \"--#{$custom-prop-prefix}-broadcasted--#{$broadcast} variable is not currently supported.\";\n    }\n    @else {\n      @return var(--#{$custom-prop-prefix}-broadcasted--#{to-string($broadcast,'--')}#{unquote($fallback)});\n    }\n}\n\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme--zindex\n/// @requires {Map} $pfe-zindex - SASS Map of z-index values\n/// @see $pfe-zindex\n/// @example - scss - In your component styles\n///   .my-element {\n///     z-index: pfe-zindex( content );\n///   }\n\n@function pfe-zindex($cssvar) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-zindex, $var-name) != null {\n        @return pfe-get-from-map(\"zindex\", $var-name, $pfe-zindex);\n    }\n    @else {\n        @error \"The key for #{$var-name} could not be found in the $pfe-zindex map.\";\n    }\n}\n\n/// Returns the value (only) of a property from the respective maps\n/// Similar to pfe-var, but does not include css variable in the compiled CSS\n/// @param {String} $name - Name of the key for the map\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $pfe-vars\n/// @see $pfe-colors\n/// @see $pfe-broadcasted\n/// @example - scss - In your component styles\n///   .my-element {\n///     background-color: pfe-fetch( ui-base );\n///   }\n@function pfe-fetch($name, $region: null) {\n    $var-name: to-string($name, \"--\");\n    @if $region != null and map-deep-get($LOCAL-VARIABLES, $region, $var-name) != null {\n        @return map-deep-get($LOCAL-VARIABLES, $region, $var-name);\n    }\n    @else if $region == null and map-get($LOCAL-VARIABLES, $var-name) != null {\n        @return map-get($LOCAL-VARIABLES, $var-name);\n    }\n    @else if map-get($pfe-vars, $var-name) != null {\n        @return map-get($pfe-vars, $var-name);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return map-get($pfe-colors, $var-name);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return map-get($pfe-broadcasted, $var-name);\n    }\n    @else if map-get($pfe-typography-base, $var-name) != null {\n        @return map-get($pfe-typography-base, $var-name);\n    }\n\n    // PATTERNFLY CORE\n    @else if map-get($pf-type-sizing, $var-name) != null {\n        @return map-get($pf-type-sizing, $var-name);\n    }\n    @else if map-get($pf-type-sizing--component, $var-name) != null {\n        @return map-get($pf-type-sizing--component, $var-name);\n    }\n    @else if map-get($pf-type-sizing--modifers, $var-name) != null {\n        @return map-get($pf-type-sizing--modifers, $var-name);\n    }\n    @else if map-get($pf-type-sizing--content, $var-name) != null {\n        @return map-get($pf-type-sizing--content, $var-name);\n    }\n    // DEPRECATED\n    @else if map-get($pfe-typography-base-deprecated, $var-name) != null {\n        @return map-get($pfe-typography-base-deprecated, $var-name);\n    }\n    @else if map-get($pfe-typography-deprecated, $var-name) != null {\n        @return map-get($pfe-typography-deprecated, $var-name);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}\n\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme\n/// @param {String} $fallback [null] - Optional custom fallback\n/// @see $pfe-vars\n/// @see $pfe-colors\n/// @see $pfe-broadcasted\n/// @example scss - In your component styles\n///   .my-element {\n///     padding:     pfe-var( container-spacer );\n///     font-size:   pfe-var( font-size );\n///   }\n/// @example - css Rendered output\n///   .my-element {\n///      padding: var(--pfe-theme--container-spacer, 16px);\n///      font-size: var(--pfe-theme--font-size, 16px);\n///   }\n@function pfe-var($cssvar, $fallback: null) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-vars, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-vars, $fallback);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return pfe-get-from-map(\"color\", $var-name, $pfe-colors, $fallback);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-broadcasted);\n    }\n    @else if map-get($pfe-typography-base, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-base, $fallback);\n    }\n    // PATTERNFLY CORE:\n    @else if map-get($pf-type-sizing, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing, $fallback, $prefix: \"pf-global\");\n    }\n    @else if map-get($pf-type-sizing--modifers, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--modifers, $fallback, $prefix: \"pf-c\");\n    }\n    @else if map-get($pf-type-sizing--content, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--content, $fallback, $prefix: \"pf-c\");\n    }\n    // PFE components (must be below core)\n    @else if map-get($pf-type-sizing--component, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--component, $fallback);\n    }\n\n    // DEPRECATED:\n    @else if map-get($pfe-typography-base-deprecated, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-base-deprecated, $fallback);\n    }\n    @else if map-get($pfe-typography-deprecated, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-deprecated, $fallback);\n    }\n\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}","////\n/// Tools for leveraging custom property stacks\n/// @group custom-properties\n/// @author castastrophe\n////\n\n/// This will print all the broadcast variables, and set the value to the context of your choosing, like on-dark or on-saturated.\n/// @param {String} $context - Look up values from contexts, i.e. \"light\" or \"saturated\"\n/// @param {List | String} $broadcast [$BROADCAST-VARS] -  Optionally specify only one broadcast variable instead of the whole set, i.e. \"text\"\n/// @see $custom-prop-prefix\n/// @see $BROADCAST-VARS\n/// @example - scss - Usage in a container component, i.e. pfe-card\n///    :host {\n///      @include pfe-set-broadcast-context(dark);\n///    }\n/// @example - css - Rendered output\n///   :host {\n///     --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///     --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///     --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///     --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///     --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///     --pfe-broadcasted--link-decoration: none;\n///     --pfe-broadcasted--link-decoration--hover: underline;\n///     --pfe-broadcasted--link-decoration--focus: underline;\n///     --pfe-broadcasted--link-decoration--visited: none;\n///   }\n///\n@mixin pfe-set-broadcast-context($context, $broadcast: $BROADCAST-VARS) {\n  @each $type in $broadcast {\n    $list: ();\n    $string: \"\";\n    $context_string: \"\";\n    $state: \"\";\n\n    @if str-starts-with($type, \"link\") {\n      $list: append($list, \"#{$type}\");\n\n      @each $s in (hover, focus, visited) {\n        $state: \"--#{$s}\";\n        $string: \"#{$type}#{$state}\";\n\n        @if not index($list, $string) {\n          $list: append($list, \"#{$type}#{$state}\");\n        }\n      }\n    } @else {\n      @if not index($list, $string) {\n        $list: append($list, \"#{$type}\");\n      }\n    }\n\n    @if index($CONTEXTS, $context) != null {\n      @if $context != \"light\" {\n        $context_string: \"--on-#{$context}\";\n      }\n    }\n\n    @each $item in $list {\n      @if not index($BROADCAST-VARS, $type) {\n        @warn \"--#{$custom-prop-prefix}-broadcasted--#{$item} variable is not in the $BROADCAST-VARS list.\";\n      } @else if not pfe-broadcasted(#{$item}#{$context_string}) {\n        @warn \"#{$item}#{$context_string} value does not currently exist.\";\n      } @else {\n        @if index($CONTEXTS, $context) != null {\n          --#{$custom-prop-prefix}-broadcasted--#{$item}: #{pfe-var(#{$item}#{$context_string})};\n        } @else {\n          @error \"The #{$context} context does not appear to be part of a supported context.\";\n        }\n      }\n    }\n  }\n}\n\n/// Returns CSS Variable for the local component-scoped variable\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $value - The value of the css variable being defined\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $custom-prop-prefix\n/// @see $LOCAL\n/// @example - scss\n///   :host {\n///       padding-top:      pfe-local(paddingTop);\n///       padding-bottom:   pfe-local(paddingBottom);\n///   }\n@mixin pfe-print-local($map: $LOCAL-VARIABLES) {\n  @each $property, $value in $map {\n    $name: \"--#{$property}\";\n    $styles: $value;\n\n    @if type-of($value) == \"map\" {\n      @each $prop, $v in $value {\n        $name: \"__#{$property}--#{$prop}\";\n        $styles: $v;\n\n        // Print the variable definition\n        --#{$custom-prop-prefix}-#{$LOCAL}#{$name}: #{$styles};\n      }\n    } @else {\n      // Print the variable definition\n      --#{$custom-prop-prefix}-#{$LOCAL}#{$name}: #{$styles};\n    }\n  }\n}\n\n/// Surface properties\n/// This mixin creates an attribute for all the surface colors, then prints the local background color variable for the component, with the correct context colors.\n/// @param {List | String} $surfaces [$SURFACES] - defaults to the global $SURFACES list of all supported colors\n/// @param {String} $attr-name [pfe-var] - defaults to pfe-var, optionally pass in a custom name for the data attribute\n/// @example - scss - In your component stylesheet\n///   $LOCAL: band;\n///   @include pfe-surfaces;\n/// @example - css - Rendered result\n///   :host([color=\"darker\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darker, #464646);\n///     --context: dark;\n///   }\n///   :host([color=\"darkest\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darkest, #131313);\n///     --context: dark;\n///   }\n///   :host([color=\"base\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--base, #dfdfdf);\n///     --context: light;\n///   }\n///   :host([color=\"lighter\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lighter, #ececec);\n///     --context: light;\n///   }\n///   :host([color=\"lightest\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lightest, #fff);\n///     --context: light;\n///   }\n///   :host([color=\"accent\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--accent, #ee0000);\n///     --context: saturated;\n///   }\n///   :host([color=\"complement\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--complement, #0477a4);\n///     --context: saturated;\n///   }\n@mixin pfe-surfaces($surfaces: $SURFACE, $attr-name: color) {\n  @each $color in $surfaces {\n    $context: #{pfe-get-context(surface--#{$color}--context)};\n    :host([#{$attr-name}=\"#{$color}\"]) {\n      @include pfe-print-local(\n        (\n          BackgroundColor: pfe-var(surface--#{$color}),\n          context: pfe-var(surface--#{$color}--context, #{$context})\n        )\n      );\n      @extend %fallback-surface;\n    }\n  }\n}\n\n/// Prints the `on` attribute with IE11 fallbacks\n/// @param {List} contexts [$CONTEXTS] - defaults to the global $CONTEXTS list of all supported contexts\n/// @param {Boolean} ie-fallback [true] - defaults to true, prints IE11 fallbacks\n/// @example - scss - In your component styles\n///   @include pfe-contexts; // imports on=\"light\" etc support\n/// @example - css - Rendered outputs\n///   :host([on=\"dark\"]) {\n///     --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///     --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///     --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///     --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///     --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///     --pfe-broadcasted--link-decoration: none;\n///     --pfe-broadcasted--link-decoration--hover: underline;\n///     --pfe-broadcasted--link-decoration--focus: underline;\n///     --pfe-broadcasted--link-decoration--visited: none;\n///   }\n///   @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n///     :host([on=\"dark\"]) {\n///       color: #fff;\n///       color: var(--pfe-theme--color--text--on-dark, #fff);\n///     }\n///   }\n///   // ...as well as all the values for :host([on=\"saturated\"])  and  :host([on=\"light\"])\n@mixin pfe-contexts($contexts: $CONTEXTS, $ie-fallback: true) {\n  // Helper attributes to aid in theming\n  @each $context in $contexts {\n    :host([on=\"#{$context}\"]) {\n      @include pfe-set-broadcast-context($context);\n    }\n  }\n  @if $ie-fallback {\n    :host {\n      @extend %fallback-text;\n    }\n  }\n}\n","// $boxSize = any box-sizing property, default is border-box\n@mixin pfe-box-sizing($boxSize: border-box) {\n  *,\n  *::before,\n  *::after {\n    box-sizing: $boxSize;\n  }\n}\n\n@mixin pfe-clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n\n@mixin pfe-container {\n  @extend %container;\n\n  padding: calc(#{pfe-local(Padding--vertical)} / 2) #{pfe-local(Padding--horizontal)};\n\n  @media (min-width: pfe-breakpoint(sm)) {\n    padding: pfe-local(Padding);\n  }\n}\n\n// Note: This works best with the padding set on the container and the container nested\n// below the application of the collapsible mixin\n@mixin pfe-collapsible($state: closed) {\n\n  @if $state != closed {\n    opacity: 1;\n    height: auto;\n  } @else {\n    display: block;\n    position: relative;\n    transition: height pfe-var(animation-speed) pfe-var(animation-timing);\n    will-change: height;\n    overflow-y: clip;\n    height: 0;\n  }\n}\n\n/// Custom focus ring\n@mixin focus-ring(\n  $offset: 0,\n  $pseudo: after,\n  $color: pfe-var(link)\n) {\n  outline: none;\n  position: relative;\n\n  // Focus uses a pseudo-element because it needs to overflow the container, outline also does not support border-radius settings\n  &::#{$pseudo} {\n    position: absolute;\n    content: \"\";\n    top: $offset;\n    left: $offset;\n    width: calc(100% + #{pfe-var(ui--border-width--active)});\n    height: calc(100% + #{pfe-var(ui--border-width--active)});\n    border-radius: pfe-var(ui--border-radius);\n    border: pfe-var(ui--border-width--md) pfe-var(ui--border-style) transparent;\n    @include browser-query(ie11) {\n      height: 100%;\n    }\n  }\n\n  &:focus::#{$pseudo} {\n    border-color: $color;\n  }\n  \n  // Remove the focus indicator on mouse-focus for browsers\n  // that do support :focus-visible\n  &:focus:not(:focus-visible)::#{$pseudo} {\n    border: unset;\n  }\n}\n\n/// Accent bar styles\n@mixin accent-bar(\n  $direction: horizontal,\n  $offset: (\n    top: 0px,\n    left: 0px\n  ),\n  $thickness: pfe-var(surface--border-width--heavy),\n  $color: transparent\n) {\n  $vertical: \"\";\n  $horizontal: \"\";\n\n  position: absolute;\n  content: \"\";\n  @each $direction, $size in $offset {\n    #{$direction}: $size;\n    @if $direction == \"top\" or $direction == \"bottom\" {\n      @if $vertical != \"\" {\n        $vertical: \"#{$vertical} - #{$size}\";\n      } @else {\n        $vertical: \"#{$size}\";\n      }\n    } @else {\n      @if $horizontal != \"\" {\n        $horizontal: \"#{$horizontal} - #{$size)}\";\n      } @else {\n        $horizontal: \"#{$size}\";\n      }\n    }\n  }\n  background-color: $color;\n  @if $direction != horizontal {\n    width: calc(#{$thickness} - #{$horizontal});\n    height: calc(100% - #{$vertical});\n  } @else {\n    width: calc(100% - #{$vertical});\n    height: calc(#{$thickness} - #{$horizontal});\n  }\n}\n","@mixin browser-query($browser-list) {\n  @each $browser in $browser-list {\n    @if $browser == ie11 {\n      @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n        @content;\n      }\n    }\n    @if $browser == edge12 {\n      @supports (-ms-accelerator: true) { /* Microsoft Edge Browser 12+ */\n        @content;\n      }\n    }\n    @if $browser == edge {\n      @supports (-ms-ime-align: auto) { /* Microsoft Edge Browser 16+ (All) */\n        @content;\n      }\n    }\n    @if $browser == firefox {\n      @media all and (min--moz-device-pixel-ratio:0) { /* Mozilla Firefox (All) */\n        @content;\n      }\n    }\n  }\n}\n\n@mixin pfe-transition($properties...) {\n  $return: null;\n  @each $property in $properties {\n    @if length($property) == 1 {\n      $return: append($return, #{$property} 250ms $pfe-global--animation-timing, comma);\n    }\n    @else if length($property) == 2 {\n      $return: append($return, nth($property, 1) nth($property, 2), comma);\n    }\n  }\n  transition: $return;\n}\n\n// Make a CSS arrow\n@mixin pfe-arrow($type, $color, $width: 8px, $height: 5px, $pseudo: false) {\n  $direction: (\n    up: 180deg,\n    down: 0deg,\n    right: -90deg,\n    left: 90deg,\n  );\n  border-style: pfe-var(surface--border-style);\n  border-width: $width $height 0;\n  border-color: transparent;\n  border-top-color: $color;\n  transform: rotate(map-get($direction, $type));\n  @if $pseudo {\n    display: inline-block;\n    content: \"\";\n    @content;\n  }\n}\n\n@mixin pfe-arrow-color($color) {\n  border-top-color: $color;\n}\n\n@mixin pfe-print-media {\n  @media print {\n    @content;\n  }\n}\n\n@mixin pfe-print-background {\n  -webkit-print-color-adjust: exact;\n  color-adjust: exact;\n}\n\n@mixin pfe-no-print-background {\n  @include pfe-print-media {\n    background-color: white !important;\n    background-image: none !important;\n    box-shadow: none !important;\n  }\n}\n\n@mixin pfe-hidden {\n  @at-root #{&}([hidden]) {\n    display: none;\n  }\n}\n\n@mixin pfe-pipe( $position: right, $padding: 0, $margin: 0, $color: $border-color) {\n  border: pfe-var(surface--border-width) pfe-var(surface--border-style) transparent;\n  border-#{$position}-color: $color;\n  @if $position == right {\n    padding-left: $padding;\n    margin-right: $margin;\n  }\n  @else if $position == left {\n    padding-right: $padding;\n    margin-left: $margin;\n  }\n}\n\n@mixin pfe-retina {\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    @content;\n  }\n}\n\n@mixin pfe-icon($path, $display: flex, $size: 1em) {\n  display: #{$display};\n  @if $path {\n    background: #{$path} no-repeat;\n    background-size: contain;\n    background-position: center;\n  }\n  width: #{$size};\n  height: #{$size};\n  @content;\n}\n\n@mixin pfe-local-debug($map: $LOCAL-VARIABLES) {\n  :root {\n      @include pfe-print-local($map);\n  }\n} "],"sourceRoot":"../src"}