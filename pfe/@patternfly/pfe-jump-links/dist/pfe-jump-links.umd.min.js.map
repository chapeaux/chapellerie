{"version":3,"file":"pfe-jump-links.umd.min.js","sources":["../_temp/polyfills--pfe-jump-links-nav.js","../_temp/pfe-jump-links-nav.js","../_temp/pfe-jump-links-panel.js","../_temp/pfe-jump-links.umd.js"],"sourcesContent":["// @POLYFILL  Array.prototype.findIndex\n// https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\nif (!Array.prototype.findIndex) {\n  Object.defineProperty(Array.prototype, \"findIndex\", {\n    value: function (predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined');\n      }\n\n      var o = Object(this);\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== \"function\") {\n        throw new TypeError(\"predicate must be a function\");\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1];\n\n      // 5. Let k be 0.\n      var k = 0;\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return k.\n        var kValue = o[k];\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return k;\n        }\n        // e. Increase k by 1.\n        k++;\n      }\n\n      // 7. Return -1.\n      return -1;\n    },\n  });\n}\n\n// @POLYFILL  Element.closest\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function (s) {\n    var el = this;\n    do {\n      if (el.matches(s)) return el;\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  };\n}\n","/*!\n * PatternFly Elements: PfeJumpLinks 1.12.3\n * @license\n * Copyright 2021 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\n// Import polyfills: findIndex, closest\nimport \"./polyfills--pfe-jump-links-nav.js\";\n\nimport PFElement from \"../../pfelement/dist/pfelement.js\";\n\n// Used for rendering\nimport PfeAccordion from \"../../pfe-accordion/dist/pfe-accordion.js\";\n\n// @TODO This needs a click handler for if the accordion is stuck to the top\n// and the user clicks outside the accordion element (should close accordion).\nclass PfeJumpLinksNav extends PFElement {\n\n  // Injected at build-time\n  static get version() {\n    return \"1.12.3\";\n  }\n\n  // Injected at build-time\n  get html() {\n    return `\n<style>slot[name=heading][sr-only]{position:absolute;overflow:hidden;clip:rect(0,0,0,0);height:1px;width:1px;margin:-1px;padding:0;border:0}:host{-webkit-box-sizing:border-box;box-sizing:border-box;font-family:\"Red Hat Text\",RedHatText,Overpass,Overpass,Arial,sans-serif;font-family:var(--pfe-theme--font-family, \"Red Hat Text\", \"RedHatText\", \"Overpass\", Overpass, Arial, sans-serif);font-weight:400;font-weight:var(--pfe-theme--font-weight--normal,400);display:block;position:-webkit-sticky;position:sticky;z-index:80;z-index:var(--pfe-theme--zindex--jumplinks,80);top:0;padding:0}@media (min-width:992px){:host([horizontal][color=darkest]){background-color:#151515;background-color:var(--pfe-theme--color--surface--darkest,#151515);--context:var(--pfe-theme--color--surface--darkest--context, dark);--pfe-broadcasted--text:var(--pfe-theme--color--text--on-dark, #fff);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-dark, #73bcf7);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-dark, #bee1f4);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-dark, #bee1f4);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-dark, #bee1f4);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-dark, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-dark, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-dark, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-dark, none)}}@media (min-width:992px){:host([horizontal][color=darker]){background-color:#3c3f42;background-color:var(--pfe-theme--color--surface--darker,#3c3f42);--context:var(--pfe-theme--color--surface--darker--context, dark);--pfe-broadcasted--text:var(--pfe-theme--color--text--on-dark, #fff);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-dark, #73bcf7);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-dark, #bee1f4);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-dark, #bee1f4);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-dark, #bee1f4);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-dark, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-dark, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-dark, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-dark, none)}}@media (min-width:992px){:host([horizontal][color=lightest]){background-color:#fff;background-color:var(--pfe-theme--color--surface--lightest,#fff);--context:var(--pfe-theme--color--surface--lightest--context, light);--pfe-broadcasted--text:var(--pfe-theme--color--text, #151515);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted, #6a6e73);--pfe-broadcasted--link:var(--pfe-theme--color--link, #06c);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover, #004080);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus, #004080);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited, #6753ac);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited, none)}}@media (min-width:992px){:host([horizontal][color=lighter]){background-color:#f0f0f0;background-color:var(--pfe-theme--color--surface--lighter,#f0f0f0);--context:var(--pfe-theme--color--surface--lighter--context, light);--pfe-broadcasted--text:var(--pfe-theme--color--text, #151515);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted, #6a6e73);--pfe-broadcasted--link:var(--pfe-theme--color--link, #06c);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover, #004080);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus, #004080);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited, #6753ac);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited, none)}}:host([stuck][horizontal]){-webkit-box-shadow:0 .0625rem .125rem 0 rgba(3,3,3,.12),0 0 .125rem 0 rgba(3,3,3,.06) 0 .0625rem .125rem 0 rgba(3,3,3,.2);box-shadow:0 .0625rem .125rem 0 rgba(3,3,3,.12),0 0 .125rem 0 rgba(3,3,3,.06) 0 .0625rem .125rem 0 rgba(3,3,3,.2);-webkit-box-shadow:var(--pfe-theme--box-shadow--sm,0 .0625rem .125rem 0 rgba(3,3,3,.12),0 0 .125rem 0 rgba(3,3,3,.06)0 .0625rem .125rem 0 rgba(3,3,3,.2));box-shadow:var(--pfe-theme--box-shadow--sm,0 .0625rem .125rem 0 rgba(3,3,3,.12),0 0 .125rem 0 rgba(3,3,3,.06)0 .0625rem .125rem 0 rgba(3,3,3,.2))}.pfe-jump-links-nav__heading{margin-top:0;margin-bottom:.5rem;margin-bottom:var(--pfe-theme--content-spacer--body--sm,.5rem)}.pfe-jump-links-nav__heading h3,::slotted([slot=heading]){color:#3c3f42;color:var(--pfe-broadcasted--text,#3c3f42);margin:0;font-size:.875rem;font-size:var(--pfe-jump-links__heading--FontSize,var(--pf-global--FontSize--sm,.875rem));font-weight:400;font-weight:var(--pfe-theme--font-weight--normal,400);text-transform:uppercase;text-transform:var(--pfe-jump-links__heading--TextTransform,uppercase)}slot[name=logo]{display:none}slot[name=cta]{display:none}nav{visibility:visible;margin:0;list-style:none;padding:0}pfe-accordion-panel nav{width:100%}@media (min-width:992px){:host([horizontal][no-header]) nav{padding-top:1px;padding-bottom:0}}#container{padding:32px 0}pfe-accordion-panel #container{padding:24px 0}ul{padding:0;margin:0;border-left:1px solid #d2d2d2;border-left:var(--pfe-theme--surface--border-width,1px) var(--pfe-theme--surface--border-style,solid) var(--pfe-theme--color--ui-disabled,#d2d2d2)}li{display:block;position:relative;margin-left:calc(1px * -1);margin-left:calc(var(--pfe-theme--surface--border-width,1px) * -1)}.sub-nav li{margin-left:0}li[expand] ul{height:auto;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}li[expand] .sub-nav{display:table;height:auto}li::before{position:absolute;content:\"\";top:0;left:0;background-color:transparent;width:calc(4px - 0px);width:calc(var(--pfe-theme--surface--border-width--heavy,4px) - 0px);height:calc(100% - 0px);background-color:transparent}li :hover::before,li:not([expand]) li:hover::before{background-color:#d2d2d2;background-color:var(--pfe-theme--color--ui-disabled,#d2d2d2)}li[active]::before,li[expand]::before{background-color:#06c;background-color:var(--pfe-jump-links--accent,var(--pfe-jump-links--BorderColor,var(--pfe-theme--color--ui-accent,#06c)));z-index:2}a{position:relative;color:#6a6e73;color:var(--pfe-theme--color--ui-disabled--text,#6a6e73);font-size:1rem;font-size:var(--pfe-jump-links--FontSize,var(--pf-global--FontSize--md,1rem));text-decoration:none;line-height:1.5;line-height:var(--pfe-theme--line-height,1.5);padding:calc(calc(1.5rem / 6) * 2) calc(calc(1.5rem / 3) * 2);padding:calc(var(--pfe-jump-links__link--vertical-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 6)) * 2) calc(var(--pfe-jump-links__link--horizontal-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 3)) * 2)}a,a:focus+ul>li>a,li:hover a,li[expand] a{display:table}li>a:hover,li[active]>a{color:#3c3f42;color:var(--pfe-broadcasted--text,#3c3f42)}:host([on=dark]) a{color:#d2d2d2;color:var(--pfe-theme--color--text--muted--on-dark,#d2d2d2)}:host([on=saturated]) a{color:#d2d2d2;color:var(--pfe-theme--color--text--muted--on-saturated,#d2d2d2)}.has-sub-section a{padding-bottom:calc(1.5rem / 6);padding-bottom:var(--pfe-jump-links__link--vertical-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 6))}.sub-section a{margin-left:calc(1rem * .75);margin-left:calc(var(--pfe-theme--container-spacer,1rem) * .75);font-size:calc(1rem * .85);font-size:calc(var(--pfe-jump-links--FontSize,var(--pf-global--FontSize--md,1rem)) * .85);padding:calc(1.5rem / 6) calc(calc(1.5rem / 3) * 2);padding:var(--pfe-jump-links__link--vertical-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 6)) calc(var(--pfe-jump-links__link--horizontal-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 3)) * 2)}@media (min-width:992px){.sub-section a{display:none}}.sub-section a:last-child{padding-bottom:calc(1.5rem / 3);padding-bottom:var(--pfe-jump-links__link--horizontal-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 3))}a:focus:focus-visible{outline:0;position:relative}a:focus:focus-visible::after{position:absolute;content:\"\";top:0;left:0;width:calc(100% + 3px);width:calc(100% + var(--pfe-theme--ui--border-width--active,3px));height:calc(100% + 3px);height:calc(100% + var(--pfe-theme--ui--border-width--active,3px));border-radius:2px;border-radius:var(--pfe-theme--ui--border-radius,2px);border:2px solid transparent;border:var(--pfe-theme--ui--border-width--md,2px) var(--pfe-theme--ui--border-style,solid) transparent}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){a:focus:focus-visible::after{height:100%}}a:focus:focus-visible:focus::after{border-color:#06c;border-color:var(--pfe-theme--color--link,#06c)}a:focus:focus-visible:focus:not(:focus-visible)::after{border:unset}ul ul{margin:0;padding:0;overflow-y:hidden;-webkit-transition:-webkit-box-flex 1s linear,-webkit-flex 1s linear;transition:-webkit-box-flex 1s linear,-webkit-flex 1s linear;transition:flex 1s linear;transition:flex 1s linear,-webkit-box-flex 1s linear,-webkit-flex 1s linear,-ms-flex 1s linear}ul ul,ul ul li{border-left:none!important}pfe-accordion{border:1px solid #d2d2d2;border:var(--pfe-theme--surface--border-width,1px) var(--pfe-theme--surface--border-style,solid) var(--pfe-theme--color--ui-disabled,#d2d2d2);--context:light;--pfe-accordion--BackgroundColor:var(--pfe-theme--color--surface--lightest, #fff)}:host([color=darkest]) pfe-accordion{--context:dark;--pfe-accordion--BackgroundColor:var(--pfe-theme--color--surface--darkest, #151515);--pfe-theme--color--ui-accent--on-dark:transparent}pfe-accordion,pfe-accordion-panel.animating,pfe-accordion-panel[expanded]{--pfe-accordion--accent:transparent;--pfe-accordion--BorderColor:transparent;--pfe-accordion--accent:transparent;--pfe-accordion--BorderTopWidth:0;--pfe-accordion--BorderBottomWidth:0;--pfe-accordion--panel-container--Padding:0 0 0 calc(var(--pfe-accordion__base--Padding,var(--pfe-theme--container-spacer,1rem)) * 1.5)}@media screen and (min-width:992px){:host([horizontal]){width:100%;background-color:#fff;background-color:var(--pfe-jump-links--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff));--context:var(--pfe-jump-links--context, var(--pfe-theme--color--surface--lightest--context, light));z-index:calc(80 + 1);z-index:calc(var(--pfe-theme--zindex--jumplinks,80) + 1);border:none;padding:0}:host([horizontal]) .pfe-jump-links-nav__heading{-webkit-flex-basis:100%;-ms-flex-preferred-size:100%;flex-basis:100%;-webkit-align-self:center;-ms-flex-item-align:center;-ms-grid-row-align:center;align-self:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;display:block;margin:0;padding-bottom:1rem;padding-bottom:var(--pfe-theme--container-padding,1rem);border-bottom:1px solid #d2d2d2;border-bottom:var(--pfe-theme--surface--border-width,1px) var(--pfe-theme--surface--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2)}:host([horizontal]) .pfe-jump-links-nav__heading h3,:host([horizontal]) ::slotted([slot=heading]){text-align:center;text-align:var(--pfe-jump-links__heading--TextAlign,center)}:host([horizontal]) ::slotted([slot=logo]){position:absolute;max-height:calc(1rem * 3.5);max-height:calc(var(--pfe-theme--container-spacer,1rem) * 3.5);max-width:calc(1rem * 14);max-width:calc(var(--pfe-theme--container-spacer,1rem) * 14);top:1rem;top:var(--pfe-theme--container-spacer,1rem);left:calc(1rem * 4);left:calc(var(--pfe-theme--container-spacer,1rem) * 4)}:host([horizontal]) ::slotted([slot=cta]){position:absolute;top:calc(1rem * 1);top:calc(var(--pfe-theme--container-spacer,1rem) * 1);right:calc(1rem * 4);right:calc(var(--pfe-theme--container-spacer,1rem) * 4)}}@media screen and (min-width:992px){:host([horizontal]) nav{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-flow:row wrap;-ms-flex-flow:row wrap;flex-flow:row wrap;padding-top:32px;padding-bottom:8px;max-width:calc(992px - (var(--pfe-jump-links--Padding--horizontal) * 4));max-width:var(--pfe-jump-links--Width,calc(992px - (var(--pfe-jump-links--Padding--horizontal) * 4)))}}@media screen and (min-width:1200px){:host([horizontal]) nav{max-width:calc(1200px - (var(--pfe-jump-links--Padding--horizontal) * 4));max-width:var(--pfe-jump-links--Width,calc(1200px - (var(--pfe-jump-links--Padding--horizontal) * 4)))}}@media screen and (min-width:992px){:host([horizontal]) #container{padding:0;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;justify-items:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}:host([horizontal]) ul{border:none;text-align:center;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding:0;width:auto;margin:0 auto}:host([horizontal]) li{margin-left:0;padding:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;margin-top:calc(1px * -1);margin-top:calc(var(--pfe-theme--surface--border-width,1px) * -1)}:host([horizontal]) li::before{height:4px;height:var(--pfe-theme--surface--border-width--heavy,4px);width:100%}:host([horizontal]) a{padding:16px;text-decoration:none;font-size:16px;color:var(--pfe-broadcasted--text--muted,)}:host([horizontal]) a:hover,:host([horizontal]) a[active]{color:#3c3f42;color:var(--pfe-broadcasted--text,#3c3f42)}}:host([hidden]){display:none!important} /*# sourceMappingURL=pfe-jump-links-nav.min.css.map */</style>\n${this.isMobile ? `\n<pfe-accordion>\n  <pfe-accordion-header>\n    <slot class=\"pfe-jump-links-nav__heading\" name=\"heading\">\n      <h3>${this.srText || \"Jump to section\"}</h3>\n    </slot>\n  </pfe-accordion-header>\n  <pfe-accordion-panel>\n` : \"\"}\n\n<nav>\n  ${!this.isMobile ? `<slot class=\"pfe-jump-links-nav__heading\" name=\"heading\"${this.noHeader ? \" sr-only\" : \"\"}>\n    <h3>${this.srText || \"Jump to section\"}</h3>\n  </slot>` : \"\"}\n  ${this.horizontal ? `<slot class=\"pfe-jump-links-nav__logo\" name=\"logo\"></slot>` : \"\"}\n  <div id=\"container\"></div>\n  ${this.horizontal ? `<slot class=\"pfe-jump-links-nav__cta\" name=\"cta\"></slot>` : \"\"}\n</nav>\n\n${this.isMobile ? `\n  </pfe-accordion-panel>\n</pfe-accordion>\n` : \"\"}`;\n  }\n\n  static get tag() {\n    return \"pfe-jump-links-nav\";\n  }\n\n  get templateUrl() {\n    return \"pfe-jump-links-nav.html\";\n  }\n\n  get styleUrl() {\n    return \"pfe-jump-links-nav.scss\";\n  }\n\n  static get PfeType() {\n    return PFElement.PfeTypes.Content;\n  }\n\n  /**\n   * List of all events in the component\n   */\n  static get events() {\n    return {\n      activeNavItem: `pfe-jump-links-panel:active-navItem`,\n      change: `pfe-jump-links-panel:change`,\n      stuck: `pfe-jump-links-nav:stuck`,\n      resize: `resize`,\n      scroll: `scroll`,\n      keyup: `keyup`,\n    };\n  }\n\n  /**\n   * Alias events to allow easier console logging\n   */\n  get events() {\n    return PfeJumpLinksNav.events;\n  }\n\n  /**\n   * Observe the children, subtree, and character changes to allow\n   * custom-built navigation to migrate to shadow DOM if updated\n   * @returns {Object} Mutation observer settings\n   */\n  static get observer() {\n    return {\n      childList: true,\n      subtree: true,\n      characterData: true,\n    };\n  }\n\n  static get properties() {\n    return {\n      autobuild: {\n        title: \"Autobuild\",\n        type: Boolean,\n      },\n      horizontal: {\n        title: \"Horizontal\",\n        type: Boolean,\n        default: false,\n      },\n      // @TODO: Document this more\n      srText: {\n        title: \"Screen reader text\",\n        type: String,\n        default: \"Jump to section\",\n      },\n      // Supports only lightest and darkest background colors\n      color: {\n        title: \"Color\",\n        type: String,\n        default: \"lightest\",\n        values: [\"lightest\", \"darkest\"],\n      },\n      // @TODO Need to incorporate support for breakpoint customizations i.e., offset=\"@500px: 200, @800px: 150\"\n      offset: {\n        title: \"Offset\",\n        type: Number,\n      },\n      // Breakpoint at which the nav switches to an accordion\n      mobileBreakpoint: {\n        title: \"Mobile breakpoint (max-width)\",\n        type: String,\n      },\n      accordionCollapseTiming: {\n        title: \"Number of ms to wait before collapsing the accordion on click\",\n        type: Number,\n        default: 750,\n      },\n      // Reflects if the nav is stuck in place\n      // @TODO note this in the documentation as a readonly property\n      stuck: {\n        title: \"Stickiness state\",\n        type: Boolean,\n        attr: \"stuck\",\n        observer: \"_stickyHandler\",\n      },\n      noHeader: {\n        title: \"Opt-out of the header region\",\n        type: Boolean,\n      },\n      // @TODO: Deprecated in 2.0\n      oldAutobuild: {\n        alias: \"autobuild\",\n        attr: \"pfe-c-autobuild\",\n      },\n      // @TODO: Deprecated in 2.0\n      oldHorizontal: {\n        alias: \"horizontal\",\n        attr: \"pfe-c-horizontal\",\n      },\n      // @TODO: Deprecated in 2.0\n      oldColor: {\n        alias: \"color\",\n        attr: \"pfe-color\",\n      },\n    };\n  }\n\n  /**\n   * @requires {this.mobileBreakpoint || PFElement.breakpoint}\n   * @returns {Boolean} true if this is at or below the mobile breakpoint\n   */\n  get isMobile() {\n    if (this.mobileBreakpoint) return window.matchMedia(`(max-width: ${this.mobileBreakpoint})`).matches;\n\n    // Default to the PFElement breakpoints\n    const data = PFElement.breakpoint.lg.match(/([0-9]+)([a-z]*)/);\n    if (data.length < 1) return \"991px\";\n\n    // Subtract one because PFElement breakpoints uses mobile-first numbering\n    return window.matchMedia(`(max-width: ${parseInt(data[1], 10) - 1}${data[2]})`).matches;\n  }\n\n  /**\n   * @returns {NodeItem} Slot assigned to heading or pfe-jump-links-nav--heading\n   * @TODO deprecating pfe-jump-links-nav--heading slot in 2.0\n   */\n  get header() {\n    return this.getSlot([\"heading\", \"pfe-jump-links-nav--heading\"])[0];\n  }\n\n  /**\n   * @returns {NodeItem} Slot assigned to cta or pfe-jump-links-nav--cta\n   * @TODO deprecating pfe-jump-links-nav--cta slot in 2.0\n   */\n  get cta() {\n    return this.getSlot([\"link\", \"pfe-jump-links-nav--link\"])[0];\n  }\n\n  /**\n   * @returns {NodeItem} Slot assigned to logo or pfe-jump-links-nav--logo\n   * @TODO deprecating pfe-jump-links-nav--logo slot in 2.0\n   */\n  get logo() {\n    return this.getSlot([\"logo\", \"pfe-jump-links-nav--logo\"])[0];\n  }\n\n  /**\n   * @returns {NodeItem} Container element from the shadow DOM for the nav list\n   */\n  get container() {\n    return this.shadowRoot.querySelector(\"#container\");\n  }\n\n  /**\n   * This setter lets you pass in a custom panel NodeItem to the navigation\n   * @param {NodeItem} Pointer to the panel content\n   */\n  set panel(NodeItem) {\n    if (NodeItem) {\n      this._panel = NodeItem;\n\n      // Attach a scrolltarget attribute if one does not yet exist\n      if (!this._panel.hasAttribute(\"scrolltarget\")) {\n        this._panel.setAttribute(\"scrolltarget\", this.id);\n      }\n\n      // Emit an event to indicate a change in the panel\n      this.emitEvent(PfeJumpLinksNav.events.change);\n    }\n  }\n\n  /**\n   * This getter returns the panel for the navigation item; if a custom pointer was set\n   * it will return that, otherwise, it tries to find the panel\n   * @returns {NodeItem} Pointer to the panel content\n   */\n  get panel() {\n    // If a custom panel is already set, use that\n    if (this._panel) return this._panel;\n\n    // Use the ID from the navigation to target the panel elements\n    // Automatically if there's only one set of tags on the page\n    if (this.id) {\n      // Check for a scrolltarget element pointing to that ID\n      // Note: include fallback for scrolltarget in case pfe-jump-links-panel has not upgraded yet?\n      const target = document.querySelector(`[scrolltarget=\"${this.id}\"],[pfe-c-scrolltarget=\"${this.id}\"]`);\n      if (target) return target;\n    }\n\n    // Get all instances of the panel components registered with the DOM\n    let panels = [];\n    Promise.all([customElements.whenDefined(\"pfe-jump-links-panel\")]).then(() => {\n      panels = customElements.get(\"pfe-jump-links-panel\").instances || [];\n\n      // Look for a panel with this scrolltarget (can capture the attribute better after component upgrades)\n      const panelWithId = panels.filter((panel) => panel.getAttribute(\"scrolltarget\") === this.id);\n      if (panelWithId.length === 1) return panelWithId[0];\n\n      // If only one panel is found, let's assume that goes to this nav\n      if (panels.length === 1) {\n        // Capture a random ID to connect this to the panel\n        this.id = this.randomId;\n        panels[0].setAttribute(\"scrolltarget\", this.id);\n\n        return panels[0];\n      }\n\n      // Throw a few warning messages suggesting how to connect the nav and panels\n      if (panels.length > 1) {\n        this.warn(\n          `Cannot locate which panel is connected to this navigation element.${\n            this.id ? ` Please add scrolltarget=\"${this.id}\" to the appropriate panel.` : \"\"\n          }`\n        );\n      } else {\n        this.warn(\n          `Cannot locate any panels on this page. Please see documentation for connecting the navigation and panel.`\n        );\n      }\n    });\n\n    return;\n  }\n\n  /**\n   * API hook for setting up custom sections without a panel\n   */\n  set sections(NodeList) {\n    this._sections = NodeList;\n\n    // Emit an event to indicate a change in the sections\n    this.emitEvent(PfeJumpLinksNav.events.change);\n  }\n\n  /**\n   * Capture the sections from inside the \"panel\"; default to this._sections first\n   * then fallback to grepping the sections from the panel\n   * @returns {NodeList} All sections inside the panel\n   */\n  get sections() {\n    // If a custom set of sections is already defined, use that\n    if (this._sections) return this._sections;\n\n    let panel = this.panel;\n\n    // If we can't find a panel element and this is using autobuild, return b/c we can't determine the sections automatically\n    if (!panel && this.autobuild) return;\n\n    // If this is not autobuilt, use the IDs from the light DOM\n    if (!this.autobuild) {\n      let links = [...this.querySelectorAll(\"ul > li > a[href]\")];\n      // Parse the links for the anchor tag and create a selector from it\n      const ids = links.map((link) => `[id=\"${link.href.split(\"#\").pop()}\"]`);\n      // Capture these from the panel or if nothing is returned, check the document\n      return panel.querySelectorAll(ids.join(\",\")) || document.querySelectorAll(ids.join(\",\"));\n    }\n\n    // NOTE: since the panel element is not necessarily pfe-jump-links-panel\n    // it _could_ contain a shadowRoot with the sections defined in it\n    return (\n      panel.querySelectorAll(`.pfe-jump-links-panel__section`) ||\n      panel.shadowRoot.querySelectorAll(`.pfe-jump-links-panel__section`) ||\n      panel.querySelectorAll(`[id]`)\n    );\n  }\n\n  get links() {\n    return [...this.container.querySelectorAll(\"a\")];\n  }\n\n  get items() {\n    return [...this.shadowRoot.querySelectorAll(`.${this.tag}__item`)];\n  }\n\n  // @TODO It seems like the offset is 0 when non-horizontal jumps links are mobile\n  get offsetValue() {\n    // If the offset attribute has been set, use that (no calculations)\n    if (this.offset) return this.offset;\n\n    // If the offset CSS variable has been set, use that (no calculations)\n    // @TODO: deprecate --pfe-jump-links-panel--offset in 2.0 release\n    // Note: deprecated @1.0 --jump-links-nav--nudge\n    let offsetVariable = this.cssVariable(\"pfe-jump-links--offset\") || this.cssVariable(\"pfe-jump-links-panel--offset\");\n\n    if (offsetVariable) {\n      offsetVariable = this._castPropertyValue(\n        {\n          type: Number,\n        },\n        parseInt(offsetVariable, 10)\n      );\n      if (offsetVariable && offsetVariable >= 0) return offsetVariable;\n    }\n\n    //--\n    // If the offsets are not provided, calculate the height of what is currently sticky\n    let height = 0;\n\n    // Get the primary navigation height\n    let navHeightVariable = this.cssVariable(`pfe-navigation--Height--actual`);\n    if (navHeightVariable) {\n      navHeightVariable = this._castPropertyValue(\n        {\n          type: Number,\n        },\n        parseInt(navHeightVariable, 10)\n      );\n      if (navHeightVariable && navHeightVariable > 0) height = navHeightVariable;\n    }\n\n    // If this is mobile or horizontal & current stuck, return with the nav-height only\n    if (this.stuck && (this.isMobile || this.horizontal)) return height;\n\n    // If this is not a horizontal jump link, check if any other horizontal jump links exist\n    let stickyJumpLinks = this.cssVariable(\"pfe-jump-links--Height--actual\");\n    if (stickyJumpLinks) {\n      stickyJumpLinks = this._castPropertyValue(\n        {\n          type: Number,\n        },\n        parseInt(stickyJumpLinks, 10)\n      );\n      if (stickyJumpLinks && stickyJumpLinks > 0) height = height + stickyJumpLinks;\n    }\n\n    // No offset if this is a horizontal element, should sit beneath the pfe-navigation (if it exists)\n    return height;\n  }\n\n  constructor() {\n    super(PfeJumpLinksNav, {\n      type: PfeJumpLinksNav.PfeType,\n    });\n\n    this.currentActive;\n    this.isBuilding = false;\n    this.isVisible = false;\n\n    // This flag indicates if the rebuild should update the light DOM\n    this.update = false;\n    this._panel, this._sections;\n    this._clicked = false;\n\n    this.build = this.build.bind(this);\n    this.rebuild = this.rebuild.bind(this);\n    this.active = this.active.bind(this);\n    this.inactive = this.inactive.bind(this);\n    this.clearActive = this.clearActive.bind(this);\n    this.getActive = this.getActive.bind(this);\n    this.closeAccordion = this.closeAccordion.bind(this);\n    this.scrollToSection = this.scrollToSection.bind(this);\n    this.updateItem = this.updateItem.bind(this);\n    this.updateLightDOM = this.updateLightDOM.bind(this);\n\n    this._buildWrapper = this._buildWrapper.bind(this);\n    this._buildItem = this._buildItem.bind(this);\n    this._isValidLightDom = this._isValidLightDom.bind(this);\n    this._reportHeight = this._reportHeight.bind(this);\n    this._updateOffset = this._updateOffset.bind(this);\n    this._checkVisible = this._checkVisible.bind(this);\n\n    this._stickyHandler = this._stickyHandler.bind(this);\n    this._clickHandler = this._clickHandler.bind(this);\n    this._scrollHandler = this._scrollHandler.bind(this);\n    this._resizeHandler = this._resizeHandler.bind(this);\n    this._mutationHandler = this._mutationHandler.bind(this);\n    this._panelChangedHandler = this._panelChangedHandler.bind(this);\n    // this._keyboardHandler = this._keyboardHandler.bind(this);\n\n    this._observer = new MutationObserver(this._mutationHandler);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    // Do not try to render navigation in IE11\n    if (this.isIE11) {\n      this.setAttribute(\"hidden\", \"\");\n      return;\n    }\n\n    // Attaches necessary listeners; does not include the mutation observer\n    // because that is attached after processing the component\n    this._attachListeners(PfeJumpLinksNav.events);\n\n    // Check that the light DOM is there and accurate\n    if (!this.autobuild && this._isValidLightDom()) {\n      this.updateLightDOM();\n    } else if (this.autobuild) {\n      // Try to build the navigation based on the panel\n      this.build();\n    }\n\n    // Capture the updated UL tag\n    const menu = this.querySelector(\"ul, ol\");\n    // If the menu is found, process and move to the shadow DOM\n    if (!menu) {\n      // Throw a warning if the menu could not be built\n      this.warn(`Navigation could not be built.`);\n    } else {\n      // Move the menu into the shadow DOM\n      this._toShadowDOM(menu);\n      // Update the offset if necessary\n      this._updateOffset();\n\n      // Check if this navigation element is visible\n      const visible = this._checkVisible();\n      const idx = this.getActive();\n\n      // Activate initial active item\n      if (visible && idx >= 0) this.active(idx);\n      else if (visible) this.active(0);\n      // @TODO: would be good to set the last item as active if the visible nav is below this one\n    }\n\n    // Trigger the mutation observer\n    this._observer.observe(this, PfeJumpLinksNav.observer);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._dettachListeners(PfeJumpLinksNav.events);\n  }\n\n  /**\n   * Builds the navigation based on the provided data or the defined sections\n   * @param {NodeList} [sections=this.sections] List of the sections the navigation should link to\n   */\n  build(sections = this.sections) {\n    // Can't build the navigation dynamically without sections defined\n    if (!sections) return;\n\n    // Convert NodeList to array\n    sections = [...sections];\n\n    this.isBuilding = true;\n\n    // Validations complete, start the build\n    let child;\n    let wrapper = this._buildWrapper();\n    let currentWrapper = wrapper;\n    let previousWrapper = currentWrapper;\n\n    // Build markup for the navigation\n    for (let i = 0; i < sections.length; i++) {\n      const sectionHeading = sections[i];\n      let is_subsection = sectionHeading.classList.contains(\"sub-section\");\n      let has_subsection = sectionHeading.classList.contains(\"has-sub-section\");\n\n      // Get ID for the navigation\n      let id = sectionHeading.id;\n      if (!id) {\n        let spacer = sectionHeading.previousElementSibling;\n        if (spacer && spacer.classList.contains(\"pfe-jump-links__section--spacer\") && spacer.id) {\n          id = spacer.id;\n        } else {\n          sectionHeading.id = this.randomId.replace(\"pfe-\", \"pfe-jump-links--\");\n          id = sectionHeading.id;\n        }\n      }\n\n      // Build the li tag; the child item\n      child = this._buildItem(\n        {\n          target: id,\n          content: sectionHeading.getAttribute(\"nav-label\") || sectionHeading.textContent,\n          subsection: has_subsection,\n        },\n        is_subsection\n      );\n\n      // Add the item to the list\n      currentWrapper.appendChild(child);\n\n      if (has_subsection) {\n        previousWrapper = currentWrapper;\n        currentWrapper = this._buildWrapper(\"sub-nav\");\n        child.appendChild(currentWrapper);\n      }\n\n      // If the next item exists and is a sub-section, reset the ul build to the previous one\n      if (sections[i + 1] && !sections[i + 1].classList.contains(\"sub-section\")) {\n        currentWrapper = previousWrapper || wrapper;\n      }\n    }\n\n    this.isBuilding = false;\n\n    // Return the mark-up\n    this.innerHTML = \"\";\n    this.appendChild(wrapper);\n  }\n\n  /**\n   * Close the mobile accordion\n   * @requires {Boolean} [this.isMobile] Indicates whether the navigation is in a mobile state\n   * @requires {Boolean} [this.accordionCollapseTiming=750]\n   */\n  closeAccordion() {\n    if (!this.isMobile) return;\n\n    const accordion = this.shadowRoot.querySelector(\"pfe-accordion\");\n    // After a short wait, close the accordion\n    setTimeout(() => {\n      Promise.all([customElements.whenDefined(\"pfe-accordion\")]).then(() => {\n        accordion.collapseAll();\n      });\n    }, this.accordionCollapseTiming);\n  }\n\n  /**\n   * Rebuild the navigation if the sections or panels are updated\n   */\n  rebuild() {\n    // If the build is happening, wait until it is complete\n    if (this.isBuilding) {\n      setTimeout(this.rebuild, 10);\n    } else {\n      // Re-render the template if necessary\n      // If this is a mobile state and it does use an accordion, or vise-versa\n      if (\n        (this.isMobile && !this.shadowRoot.querySelector(\"pfe-accordion\")) ||\n        (!this.isMobile && this.shadowRoot.querySelector(\"pfe-accordion\"))\n      ) {\n        this.render();\n      }\n\n      let menu;\n\n      if (this.autobuild && this.update) {\n        menu = this.build();\n      } else {\n        menu = this.querySelector(\"ul\");\n      }\n\n      // Move the menu into the shadow DOM\n      if (menu && this.container.innerHTML !== menu.outerHTML.toString()) {\n        this.container.innerHTML = menu.outerHTML.toString();\n      }\n\n      this._updateOffset();\n\n      // Activate initial active item\n      this.active(this.getActive());\n\n      // Attach the event listeners\n      this.items.forEach((item) => {\n        item.querySelector(\"a\").addEventListener(\"click\", this._clickHandler);\n      });\n    }\n\n    this.update = false;\n  }\n\n  /**\n   * @param {} item Accepts an index or the link element itself\n   */\n  active(item) {\n    let idx;\n    let items = this.items;\n\n    if (typeof item === \"number\") idx = item;\n    else idx = items.findIndex((el) => el === item);\n\n    // If idx is less than 0, it could not be found\n    if (idx < 0 || idx >= items.length || !items[idx]) return;\n\n    // If found, clear current active items\n    this.clearActive();\n    this.currentActive = idx;\n\n    const li = items[idx].closest(\"li\");\n    const parentli = li.closest(\"ul\").closest(\"li\");\n    const is_subsection = li.classList.contains(\"sub-section\");\n    const has_subsection = li.classList.contains(\"has-sub-section\");\n\n    // Set the item's active attribute\n    li.setAttribute(\"active\", \"\");\n\n    if (has_subsection) li.setAttribute(\"expand\", \"\");\n    else if (is_subsection) parentli.setAttribute(\"expand\", \"\");\n\n    // Emit event for tracking\n    this.emitEvent(PfeJumpLinksNav.events.activeNavItem, {\n      detail: {\n        activeNavItem: idx,\n      },\n    });\n  }\n\n  getActive() {\n    // If there are no sections, we can't process\n    // @TODO: should this processing even be happening?\n    if (!this.sections) return;\n\n    // Make an array from the node list\n    const sections = [...this.sections];\n\n    // Capture the offset to prevent recalculation below\n    const offset = this.offsetValue;\n\n    // Get all the sections that match this point in the scroll\n    const matches = sections.filter((section, idx) => {\n      const viewportHeight = window.innerHeight || document.documentElement.clientHeight;\n\n      // @TODO: The next logic only works for scrolling down; need to reverse for scrolling up\n      const next = sections[idx + 1];\n      const nextTop = next ? next.getBoundingClientRect().top : 0;\n      const sectionTop = section.getBoundingClientRect().top;\n\n      // If the top of this section is greater than/equal to the offset\n      // and if there is a next item, that item is\n      // or the bottom is less than the height of the window\n      return (\n        sectionTop >= 0 &&\n        sectionTop <= viewportHeight &&\n        (!next ||\n          (nextTop >= offset &&\n            // Check whether the previous section is closer than the next section\n            offset - sectionTop < nextTop - offset))\n      );\n    });\n\n    // Don't change anything if no items were found\n    if (!matches || matches.length === 0) return;\n\n    // Identify the first one queried as the current section\n    return sections.indexOf(matches[0]);\n  }\n\n  inactive(item) {\n    let idx;\n    let items = this.items;\n\n    if (typeof item === \"number\") idx = item;\n    else idx = items.findIndex((el) => el === item);\n\n    // If idx is less than 0, it could not be found\n    if (idx < 0 || idx >= items.length || !items[idx]) return;\n\n    const li = items[idx].closest(\"li\");\n    const parentli = li.closest(\"ul\").closest(\"li\");\n    const is_subsection = li.classList.contains(\"sub-section\");\n    const has_subsection = li.classList.contains(\"has-sub-section\");\n\n    li.removeAttribute(\"active\");\n\n    if (has_subsection) li.removeAttribute(\"expand\");\n    else if (is_subsection) parentli.removeAttribute(\"expand\");\n  }\n\n  clearActive() {\n    const items = this.items;\n    items.forEach((item) => this.inactive(item));\n  }\n\n  /**\n   * Attach the listeners\n   * @param {Object} Definition of available events\n   */\n  _attachListeners(events) {\n    // Listen for a change in the panel content if the navigation is autobuilt\n    // need to reflect changes in the navigation markup\n    if (this.autobuild) {\n      document.addEventListener(PfeJumpLinksNav.events.change, this._panelChangedHandler);\n    }\n\n    window.addEventListener(events.resize, this._resizeHandler);\n    window.addEventListener(events.scroll, this._scrollHandler);\n    // window.addEventListener(events.keyup, this._keyboardHandler);\n\n    // If the stickiness changes, update the sticky navigation offset\n    window.addEventListener(events.stuck, this._updateOffset);\n\n    // @TODO respond to URL change? Ensure anchor link alignment accounts for sticky nav(s)\n    // window.addEventListener(\"locationchange\", (evt) => console.log(\"locationchange\", evt));\n    // window.addEventListener(\"hashchange\", (evt) => console.log(\"hashchange\", evt));\n  }\n\n  /**\n   * Remove the listeners\n   * @param {Object} Definition of available events\n   */\n  _dettachListeners(events) {\n    this._observer.disconnect();\n\n    document.removeEventListener(events.change, this._panelChangedHandler);\n\n    window.removeEventListener(events.resize, this._resizeHandler);\n    window.removeEventListener(events.scroll, this._scrollHandler);\n    window.removeEventListener(events.keyup, this._keyboardHandler);\n\n    // If the stickiness changes, update the sticky navigation offset\n    window.removeEventListener(events.stuck, this._updateOffset);\n\n    // @TODO respond to URL change? Ensure anchor link alignment accounts for sticky nav(s)\n    // window.removeEventListener(\"locationchange\", (evt) => console.log(\"locationchange\", evt));\n    // window.removeEventListener(\"hashchange\", (evt) => console.log(\"hashchange\", evt));\n  }\n\n  _buildItem(data, isSubSection = false) {\n    let item = document.createElement(\"li\");\n    item.className = `${this.tag}__item`;\n\n    let link = document.createElement(\"a\");\n    link.className = `${this.tag}__link`;\n    link.href = `#${data.target}`;\n    link.setAttribute(\"data-target\", data.target);\n    link.innerHTML = data.content;\n\n    if (data.subsection) item.classList.add(\"has-sub-section\");\n    if (isSubSection) item.classList.add(\"sub-section\");\n\n    item.appendChild(link);\n    return item;\n  }\n\n  _buildWrapper(className = \"pfe-jump-links-nav\") {\n    let wrapper = document.createElement(\"ul\");\n    wrapper.className = className;\n    return wrapper;\n  }\n\n  _siblingJumpLinks(filterMethod = (item) => item !== this) {\n    return PfeJumpLinksNav.instances.filter(filterMethod);\n  }\n\n  /**\n   * Report the height of the jump links navigation\n   */\n  _reportHeight() {\n    let height = 0;\n\n    // Check all elements to see if any are sticky and in horizontal or mobile state\n    const stuckItems = this._siblingJumpLinks((item) => item.stuck && (item.horizontal || item.isMobile));\n\n    if (stuckItems.length > 0) {\n      // Get the height of the last sticky element in the DOM tree\n      height = stuckItems[stuckItems.length - 1].getBoundingClientRect().height;\n\n      // @TODO Do other items in the stack need to be unstuck?\n      // Unstick the other items by popping off the last item in the array\n      // stuckItems.pop();\n      // Set the rest of the items stuck attribute to false\n      // stuckItems.forEach(item => item.stuck = false);\n    }\n\n    // Check if we need to update the variable:\n    const currentHeight = this.cssVariable(`pfe-jump-links--Height--actual`, null, document.body);\n    if (!currentHeight || parseInt(currentHeight, 10) !== height) {\n      // If there are no other sticky jump links, set the height on the body\n      // Note: we set it on the body to be consistent with pfe-navigation\n      this.cssVariable(`pfe-jump-links--Height--actual`, `${height}px`, document.body);\n    }\n  }\n\n  /**\n   * Validate the provided light DOM and provide helpful console messages\n   * to facilitate debugging\n   */\n  _isValidLightDom() {\n    let valid = true;\n\n    if ((!this.hasLightDOM() || (!this.querySelector(\"ul\") && !this.querySelector(\"ol\"))) && !this.autobuild) {\n      this.warn(\n        `This component requires a list in the light DOM to .\\nAlternatively, add the \\`autobuild\\` attribute to dynamically generate the list from the provided panel.`\n      );\n      valid = false;\n    }\n\n    if (this.logo && !this.horizontal) {\n      this.warn(`The logo slot is NOT supported in vertical jump links.`);\n      // Gentle warning, CSS force-hides this content\n      // valid = false;\n    }\n\n    if (this.cta && !this.horizontal) {\n      this.warn(`The link slot is NOT supported in vertical jump links.`);\n      // Gentle warning, CSS force-hides this content\n      // valid = false;\n    }\n\n    // Gentle warning\n    if (Number.isInteger(Number(this.customVar))) {\n      this.warn(\n        \"Using an integer with a unit is not supported for custom property --pfe-jump-links-panel--offset. The component strips the unit using parseInt(). For example so 1rem would become 1 and behave as if you had entered 1px. Values with a pixel unit will behave correctly.\"\n      );\n    }\n\n    return valid;\n  }\n\n  updateItem(item, nested = false) {\n    item.classList = `${this.tag}__item${nested ? ` sub-section` : ``}`;\n    const link = item.querySelector(\"a\");\n    link.classList = `${this.tag}__link`;\n    const nestedList = item.querySelector(\"ul\");\n    if (nestedList) {\n      item.classList.add(\"has-sub-section\");\n      nestedList.querySelectorAll(\":scope > li\").forEach((item) => this.updateItem(item, true));\n    }\n  }\n\n  updateLightDOM() {\n    const menu = this.querySelector(\"ul\");\n\n    // Update the mark-up in the light DOM if necessary\n    // If the class is not already on the list wrapper\n    menu.classList = this.tag;\n\n    // Ensure valid identifiers on the provided mark-up\n    menu.querySelectorAll(\":scope > li\").forEach((item) => this.updateItem(item));\n  }\n\n  _toShadowDOM(menu) {\n    if (this.container.innerHTML !== menu.outerHTML.toString()) {\n      this.container.innerHTML = menu.outerHTML.toString();\n    }\n\n    // Attach the event listeners\n    this.links.forEach((link) => {\n      link.addEventListener(\"click\", this._clickHandler);\n    });\n  }\n\n  _checkVisible() {\n    this.isVisible =\n      this.getBoundingClientRect().top <= document.documentElement.clientHeight &&\n      this.getBoundingClientRect().right >= 0 &&\n      this.getBoundingClientRect().bottom >= 0 &&\n      this.getBoundingClientRect().left <= document.documentElement.clientWidth;\n\n    return this.isVisible;\n  }\n\n  // This updates the offset value on this component based on the reported offset height on the document\n  _updateOffset() {\n    this._reportHeight();\n\n    // Set the offset on the nav element\n    if (this.horizontal) this.style.top = `${this.offsetValue}px`;\n    else this.style.top = `${this.offsetValue + 20}px`;\n  }\n\n  /**\n   * Click events on the navigation items\n   * Prevents conflicts between scroll state and user choice\n   * @param {ClickEvent} evt\n   */\n  _clickHandler(evt) {\n    const link = evt.target;\n    const li = link.closest(`.${this.tag}__item`);\n\n    // Set this item as active\n    this.active(li);\n\n    // Escaping here if no sections are defined and letting default behavior\n    // handle the scrolling\n    if (!this.sections) return;\n\n    const idx = [...this.sections].findIndex((item) => item.id === link.hash.replace(\"#\", \"\"));\n\n    // Escaping if we can't find this link in our sections\n    if (idx < 0) return;\n\n    // If we have defined sections, use custom scrolling placement\n    evt.preventDefault();\n\n    this._clicked = true;\n\n    // Update the URL but don't impact the back button\n    history.replaceState({}, \"\", link.href);\n\n    this.scrollToSection(idx);\n  }\n\n  /**\n   * This handles scrolling to a section in the panel on click\n   * @param {Number} Index of the section to scroll-to\n   * @TODO On page load, if an anchor exists, fire this event\n   */\n  scrollToSection(idx) {\n    // Get the offset value to scroll-to\n    const section = this.sections[idx];\n    const offset = this.offsetValue;\n\n    // Update stickiness if necessary\n    this.stuck = !!(this.getBoundingClientRect().top === offset);\n\n    // Initialize the target we want to scroll to\n    let scrollTarget = window.pageYOffset + section.getBoundingClientRect().top;\n\n    // If the section uses the spacers, don't include the calculations below\n    if (!section.classList.contains(\"pfe-jump-links__section--spacer\")) {\n      // Top of the section minus the calculated offset via nav\n      scrollTarget = scrollTarget - offset;\n\n      // Account for it's height as well\n      // this.offsetVar does not account for this because this only affects scrolling to sections\n      let height = 0;\n\n      if (this.horizontal) height = this.getBoundingClientRect().height;\n\n      // On mobile, get the accordion-header height rather than the height of the full component\n      // this prevents the height from taking into account the open accordion tray\n      if (this.isMobile) {\n        const accordionHeader = this.shadowRoot.querySelector(\"pfe-accordion-header\");\n        height = accordionHeader.getBoundingClientRect().height - this.getBoundingClientRect().height;\n      }\n\n      if (height > 0) scrollTarget = scrollTarget - height;\n    }\n\n    // If the section has a custom offset attribute defined, use that; default to 20\n    // 20 default is so that the headings aren't smooshed against the sticky navigation\n    let itemOffset = 20;\n    if (section.hasAttribute(\"offset\")) {\n      // Use the property casting from PFElement\n      const sectionOffsetProp = this._castPropertyValue(\n        {\n          type: Number,\n        },\n        parseInt(section.getAttribute(\"offset\"), 10)\n      );\n      if (sectionOffsetProp) itemOffset = sectionOffsetProp;\n    } else if (this.panel && this.panel.offset) {\n      itemOffset = this.panel.offset;\n    }\n\n    // This is the point that we're scrolling to\n    scrollTarget = scrollTarget - itemOffset;\n\n    // Prevent negative position scrolling\n    if (scrollTarget < 0) scrollTarget = 0;\n\n    // Use JS to fire the scroll event\n    // smooth-scroll CSS support is spotty and complicated\n    // especially as relates to offsets; this was a faster\n    // solution for managing state changes\n    window.scroll({\n      top: scrollTarget,\n      behavior: \"smooth\",\n    });\n\n    // Close the accordion\n    this.closeAccordion();\n\n    // Update stickiness if necessary\n    this.stuck = !!(this.getBoundingClientRect().top === offset);\n\n    setTimeout(() => {\n      // Update the focus state\n      section.focus();\n\n      this._clicked = false;\n    }, 1000);\n  }\n\n  /**\n   * Sticky state handler; emits event with change in sticky state\n   * @param {String} oldVal\n   * @param {String} newVal\n   */\n  _stickyHandler(oldVal, newVal) {\n    // If there is no change, do nothing\n    if (oldVal === newVal) return;\n\n    this._reportHeight();\n\n    this.emitEvent(PfeJumpLinksNav.events.stuck, {\n      detail: {\n        stuck: newVal,\n      },\n    });\n  }\n\n  /**\n   * Scrolling event processing; control stickiness and active state\n   */\n  _scrollHandler() {\n    // If this is from a click event, do nothing\n    if (this._clicked) return;\n\n    clearTimeout(this._scrollHandler._tId);\n    this._scrollHandler._tId = setTimeout(() => {\n      // Check the current visibility of this jump links navigation\n      this._checkVisible();\n\n      // If this navigation is not visible, exit processing now\n      if (!this.isVisible) return;\n\n      this.stuck = !!(this.getBoundingClientRect().top === this.offsetValue);\n\n      const currentIdx = this.getActive();\n\n      // If that section isn't already active,\n      // remove active from the other links and make it active\n      if (currentIdx >= 0 && currentIdx !== this.currentActive) {\n        this.currentActive = currentIdx;\n\n        this.active(currentIdx);\n      }\n    }, 10);\n  }\n\n  /**\n   * Rebuild the navigation on resize if the view has changed from mobile->desktop or vise versa\n   */\n  _resizeHandler() {\n    this.rebuild();\n  }\n\n  /**\n   * Run the rebuild when the mutation observer sees change\n   */\n  _mutationHandler() {\n    // Ignore the mutation if using autobuild\n    if (this.autobuild) return;\n\n    this.update = true;\n    this.rebuild();\n  }\n\n  /**\n   * Panel changed event\n   */\n  _panelChangedHandler() {\n    // If this is manually built, we don't need to process the panel change\n    if (!this.autobuild) return;\n\n    this.update = true;\n\n    // Reset the sections object to allow refetching\n    this._sections = null;\n\n    this.rebuild();\n  }\n\n  /**\n   * Keyboard event manager\n   */\n  // @TODO: Add a keyboard handler when focus is set on the parent via keyboard; should expand\n  // _keyboardHandler() {\n  // Handle the focus state to expand parent when child is focused\n  // }\n}\n\nexport default PfeJumpLinksNav;\n","/*!\n * PatternFly Elements: PfeJumpLinks 1.12.3\n * @license\n * Copyright 2021 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport PFElement from \"../../pfelement/dist/pfelement.js\";\n\nclass PfeJumpLinksPanel extends PFElement {\n\n  // Injected at build-time\n  static get version() {\n    return \"1.12.3\";\n  }\n\n  static get tag() {\n    return \"pfe-jump-links-panel\";\n  }\n\n  /**\n   * No custom styles for the panel or template mark-up; just a slot\n   */\n  get html() {\n    return `<slot></slot>`;\n  }\n\n  static get events() {\n    return {\n      change: `${this.tag}:change`,\n    };\n  }\n\n  static get observer() {\n    return {\n      childList: true,\n      subtree: true,\n      // characterData: true,\n      // attributes: true,\n    };\n  }\n\n  static get PfeType() {\n    return PFElement.PfeTypes.Content;\n  }\n\n  static get properties() {\n    return {\n      offset: {\n        title: \"Offset\",\n        type: Number,\n      },\n      scrolltarget: {\n        title: \"Scroll target\",\n        type: String,\n      },\n      spacers: {\n        title: \"Inject spacers\",\n        type: Boolean,\n        default: false,\n        observer: \"_makeSpacers\",\n      },\n      // @TODO: Deprecated in 1.0\n      oldOffset: {\n        alias: \"offset\",\n        attr: \"pfe-c-offset\",\n      },\n      // @TODO: Deprecated in 1.0\n      oldScrolltarget: {\n        alias: \"scrolltarget\",\n        attr: \"pfe-c-scrolltarget\",\n      },\n    };\n  }\n  /**\n   * @param {NodeList} Returns all elements from the panel's light DOM with the class .pfe-jump-links-panel__section\n   */\n  get sections() {\n    return this.querySelectorAll(`.${this.tag}__section`);\n  }\n\n  constructor() {\n    super(PfeJumpLinksPanel, { type: PfeJumpLinksPanel.PfeType });\n\n    this._init = this._init.bind(this);\n    this._makeSpacers = this._makeSpacers.bind(this);\n    this._isValidMarkup = this._isValidMarkup.bind(this);\n\n    this._observer = new MutationObserver(() => {\n      this._init();\n\n      // Emit an event indicating a change to the panel\n      this.emitEvent(PfeJumpLinksPanel.events.change, {});\n    });\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this._init();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._observer.disconnect();\n  }\n\n  _isValidMarkup() {\n    if ([...this.sections].length === 0) {\n      this.warn(\n        `This panel does not contain any headings labeled with the ${this.tag}__section class. Please add that class and an ID to any heading you would like surfaced in the jump links navigation.`\n      );\n    }\n  }\n\n  _makeSpacers() {\n    if (!this.spacers) return;\n    if (!this.sections || [...this.sections].length <= 0) return;\n\n    // Disconnect the mutation observer to update the spacers\n    this._observer.disconnect();\n\n    [...this.sections].forEach((section) => {\n      const parentEl = section.parentNode;\n      let spacer = section.previousElementSibling;\n\n      // If the previous element is not a spacer, create one\n      if (!spacer || !spacer.classList.contains(\"pfe-jump-links__section--spacer\")) {\n        spacer = document.createElement(\"div\");\n        spacer.classList.add(\"pfe-jump-links__section--spacer\");\n        parentEl.insertBefore(spacer, section);\n      }\n\n      // Move the ID from the section to the spacer\n      if (section.id && (!spacer.id || spacer.id !== section.id)) {\n        spacer.id = section.id;\n        section.removeAttribute(\"id\");\n        section.setAttribute(\"data-target\", spacer.id);\n      }\n\n      spacer.style.marginTop = `calc(-1 * (var(--pfe-navigation--Height--actual, 0px) + var(--pfe-jump-links--Height--actual, 0px)))`;\n      spacer.style.height = `calc(var(--pfe-navigation--Height--actual, 0px) + var(--pfe-jump-links--Height--actual, 0px))`;\n    });\n\n    // Set up the mutation observer\n    this._observer.observe(this, PfeJumpLinksPanel.observer);\n  }\n\n  _init() {\n    // Validate and throw warnings about improper markup\n    this._isValidMarkup();\n\n    // Adding spacers to the panel is opt-in\n    // note: this was because determining the scroll-to point\n    // was easier with the scroll animation than working through\n    // cross-browser support for smooth scroll CSS (looking at Safari)\n    this._makeSpacers();\n  }\n}\n\nexport default PfeJumpLinksPanel;\n","/*!\n * PatternFly Elements: PfeJumpLinks 1.12.3\n * @license\n * Copyright 2021 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport PFElement from \"../../pfelement/dist/pfelement\";\n\nimport PfeJumpLinksNav from \"./pfe-jump-links-nav.js\";\nimport PfeJumpLinksPanel from \"./pfe-jump-links-panel.js\";\n\n// @TODO Migrate pfe-jump-links-nav to pfe-jump-links in 2.0?\n// class PfeJumpLinks extends PfeJumpLinksNav {\n//     static get tag() {\n//       return \"pfe-jump-links\";\n//     }\n// }\n// PFElement.create(PfeJumpLinks);\n\nPFElement.create(PfeJumpLinksNav);\nPFElement.create(PfeJumpLinksPanel);\n\nexport default { PfeJumpLinksNav, PfeJumpLinksPanel };\n"],"names":["Array","prototype","findIndex","defineProperty","predicate","this","TypeError","o","Object","len","length","thisArg","arguments","k","kValue","call","Element","closest","s","el","matches","parentElement","parentNode","nodeType","PfeJumpLinksNav","PFElement","isMobile","srText","noHeader","horizontal","events","mobileBreakpoint","window","matchMedia","data","breakpoint","lg","match","parseInt","getSlot","shadowRoot","querySelector","NodeItem","_panel","hasAttribute","setAttribute","id","emitEvent","change","target","document","panels","all","customElements","whenDefined","then","panelWithId","get","instances","filter","panel","getAttribute","_this2","randomId","warn","NodeList","_sections","autobuild","querySelectorAll","ids","map","link","href","split","pop","join","container","tag","offset","offsetVariable","cssVariable","_castPropertyValue","Number","height","navHeightVariable","stuck","stickyJumpLinks","PfeTypes","Content","Boolean","String","visible","idx","isIE11","_attachListeners","_isValidLightDom","updateLightDOM","build","menu","_toShadowDOM","_updateOffset","_checkVisible","getActive","active","_observer","observe","observer","_dettachListeners","sections","isBuilding","child","wrapper","_buildWrapper","currentWrapper","previousWrapper","i","spacer","sectionHeading","is_subsection","classList","contains","has_subsection","previousElementSibling","replace","_buildItem","textContent","appendChild","innerHTML","accordion","collapseAll","accordionCollapseTiming","rebuild","render","update","outerHTML","toString","items","forEach","item","addEventListener","_this3","_clickHandler","li","parentli","clearActive","currentActive","activeNavItem","offsetValue","section","viewportHeight","innerHeight","documentElement","clientHeight","next","nextTop","getBoundingClientRect","top","sectionTop","indexOf","removeAttribute","_this4","inactive","_panelChangedHandler","resize","_resizeHandler","scroll","_scrollHandler","disconnect","removeEventListener","keyup","_keyboardHandler","isSubSection","createElement","className","content","subsection","add","_this5","stuckItems","_siblingJumpLinks","currentHeight","body","valid","hasLightDOM","logo","cta","isInteger","customVar","nestedList","_this6","updateItem","_this7","links","_this8","isVisible","right","bottom","left","clientWidth","_reportHeight","style","evt","hash","preventDefault","_clicked","replaceState","scrollToSection","scrollTarget","pageYOffset","sectionOffsetProp","itemOffset","closeAccordion","focus","oldVal","newVal","_tId","setTimeout","currentIdx","_this10","PfeType","_this","bind","_stickyHandler","_mutationHandler","MutationObserver","_init","spacers","parentEl","insertBefore","marginTop","PfeJumpLinksPanel","_isValidMarkup","_makeSpacers","type","create"],"mappings":"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"}